dvt = function() {
  function $DvtSvgShadowUtils$$() {
  }
  function $DvtSvgPatternFillUtils$$() {
  }
  function $DvtSvgImageFillUtils$$() {
  }
  function $DvtSvgGradientUtils$$() {
  }
  function $DvtSvgFilterUtils$$() {
  }
  function $DvtSvgFilterContext$$() {
    this.Init();
  }
  function $DvtSvgImplFactory$$($DvtSvgShadowUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
  }
  function $DvtHtmlRichTooltipManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  }
  function $DvtDomXmlParser$$() {
    this.$_parser$ = new DOMParser;
  }
  function $DvtContextMenuTooltipItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  }
  function $DvtCustomTooltipItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  }
  function $DvtCustomTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  }
  function $DvtCustomTooltipEventHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_customTooltipManager$ = $DvtSvgPatternFillUtils$$;
    this.Init($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  }
  function $DvtCustomTooltipManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  }
  function $DvtPopupBehaviorHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$;
    this.$_behavior$ = this.$_mouseTarget$ = this.$_popupPosition$ = null;
    this.$_hoverPopupShown$ = !1;
    this.$_hoverTimer$ = new $dvt$$17$$.$Timer$($DvtSvgShadowUtils$$, 500, this.$_onHoverDelay$, this, 1);
    this.$_overTimer$ = new $dvt$$17$$.$Timer$($DvtSvgShadowUtils$$, 500, this.$_onOverDelay$, this, 1);
  }
  function $DvtPopupSource$$() {
  }
  function $DvtContextMenuSource$$() {
  }
  function $DvtCategoricalObject$$() {
  }
  function $DvtKeyboardNavigable$$() {
  }
  function $DvtSelectable$$() {
  }
  function $DvtTooltipSource$$() {
  }
  function $DvtLogicalObject$$() {
  }
  function $DvtLinearGradient$$() {
    this.Init();
  }
  function $DvtPolygonalShape$$() {
  }
  function $DvtCircularShape$$() {
  }
  function $DvtStage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, "g", $DvtSvgImageFillUtils$$);
    this.$_SVGRoot$ = $DvtSvgPatternFillUtils$$;
    this.$disableSelection$(this.$_elem$);
    this.setCursor("default");
  }
  function $DvtActionTooltipEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
    this.target = $DvtSvgPatternFillUtils$$;
  }
  function $DvtFocusEvent$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  }
  function $DvtBaseDrawEffect$$() {
    this.$_Init$();
  }
  function $DvtCombinedAnimPopOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  }
  function $DvtCombinedAnimScaleFade$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$);
  }
  function $DvtCombinedAnimFade$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  }
  function $DvtCombinedAnimConveyor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  }
  function $DvtAnimCubeOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  }
  function $DvtAnimCubeIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  }
  function $DvtAnimFlipOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  }
  function $DvtAnimFlipIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  }
  function $DvtAnimConveyorOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  }
  function $DvtAnimConveyorIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  }
  function $DvtInterpolator$$() {
    this.Init();
  }
  function $DvtAnimatorPropItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.type = $DvtSvgShadowUtils$$;
    this.$obj$ = $DvtSvgPatternFillUtils$$;
    this.$getter$ = $DvtSvgImageFillUtils$$;
    this.$setter$ = $DvtSvgGradientUtils$$;
    this.$destVal$ = $DvtSvgFilterUtils$$;
    this.$startVal$ = null;
  }
  function $DvtScheduler$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  }
  function $DvtScheduled$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  }
  function $DvtLockable$$() {
    this.$_Init$();
  }
  var $dvt$$17$$ = {$exportProperty$:function($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$;
  }, $Obj$:function() {
  }};
  $dvt$$17$$.$Obj$.$_GET_FUNCTION_NAME_REGEXP$ = /function\s+([\S^]+)\s*\(/;
  $dvt$$17$$.$Obj$.$createSubclass$ = function $$dvt$$17$$$$Obj$$$createSubclass$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if (void 0 !== $DvtSvgShadowUtils$$ && null !== $DvtSvgShadowUtils$$ && (void 0 === $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = Object), $DvtSvgShadowUtils$$ != $DvtSvgPatternFillUtils$$)) {
      var $DvtSvgGradientUtils$$ = $dvt$$17$$.$Obj$.$_tempSubclassConstructor$;
      $DvtSvgGradientUtils$$.prototype = $DvtSvgPatternFillUtils$$.prototype;
      $DvtSvgShadowUtils$$.prototype = new $DvtSvgGradientUtils$$;
      $DvtSvgShadowUtils$$.prototype.constructor = $DvtSvgShadowUtils$$;
      $DvtSvgShadowUtils$$.$superclass$ = $DvtSvgPatternFillUtils$$.prototype;
      $DvtSvgImageFillUtils$$ && ($DvtSvgShadowUtils$$.$_typeName$ = $DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$Obj$.$_tempSubclassConstructor$ = function $$dvt$$17$$$$Obj$$$_tempSubclassConstructor$$() {
  };
  $dvt$$17$$.$Obj$.getTypeName = function $$dvt$$17$$$$Obj$$getTypeName$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$_typeName$;
    if (null == $DvtSvgPatternFillUtils$$) {
      var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$Obj$.$_GET_FUNCTION_NAME_REGEXP$.exec($DvtSvgShadowUtils$$.toString());
      $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$[1], $DvtSvgShadowUtils$$.$_typeName$ = $DvtSvgPatternFillUtils$$);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Obj$.prototype.getTypeName = function $$dvt$$17$$$$Obj$$$getTypeName$() {
    return $dvt$$17$$.$Obj$.getTypeName(this.constructor);
  };
  $dvt$$17$$.$Obj$.prototype.clone = function $$dvt$$17$$$$Obj$$$clone$() {
    return null;
  };
  $dvt$$17$$.$Obj$.prototype.$mergeProps$ = function $$dvt$$17$$$$Obj$$$$mergeProps$$() {
  };
  $dvt$$17$$.$Obj$.$createCallback$ = function $$dvt$$17$$$$Obj$$$createCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return function() {
      return $DvtSvgPatternFillUtils$$.apply($DvtSvgShadowUtils$$, arguments);
    };
  };
  $dvt$$17$$.$Obj$.$defineConstant$ = function $$dvt$$17$$$$Obj$$$defineConstant$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ArrayUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ArrayUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ArrayUtils$.NONE = 0;
  $dvt$$17$$.$ArrayUtils$.$ADD$ = 1;
  $dvt$$17$$.$ArrayUtils$.$SUB$ = 2;
  $dvt$$17$$.$ArrayUtils$.$DIV$ = 3;
  $dvt$$17$$.$ArrayUtils$.$MULT$ = 4;
  $dvt$$17$$.$ArrayUtils$.$MOD$ = 5;
  $dvt$$17$$.$ArrayUtils$.$argsToArray$ = function $$dvt$$17$$$$ArrayUtils$$$argsToArray$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = Array($DvtSvgShadowUtils$$.length);
      if (0 < $DvtSvgShadowUtils$$.length) {
        for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
          $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
        }
      }
      return $DvtSvgPatternFillUtils$$;
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ArrayUtils$.isArray = function $$dvt$$17$$$$ArrayUtils$$isArray$($DvtSvgShadowUtils$$) {
    return "undefined" != typeof $DvtSvgShadowUtils$$ && "[object Array]" === Object.prototype.toString.apply($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$ArrayUtils$.$toFloat$ = function $$dvt$$17$$$$ArrayUtils$$$toFloat$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if (!$dvt$$17$$.$ArrayUtils$.isArray($DvtSvgShadowUtils$$)) {
      return $DvtSvgShadowUtils$$;
    }
    $DvtSvgPatternFillUtils$$ || ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$ArrayUtils$.NONE);
    $DvtSvgImageFillUtils$$ = null === $DvtSvgImageFillUtils$$ || isNaN($DvtSvgImageFillUtils$$) ? $dvt$$17$$.$ArrayUtils$.NONE : $DvtSvgImageFillUtils$$;
    $DvtSvgImageFillUtils$$ !== $dvt$$17$$.$ArrayUtils$.NONE && ("number" !== typeof $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = parseFloat($DvtSvgPatternFillUtils$$)), isNaN($DvtSvgPatternFillUtils$$) && ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$ArrayUtils$.NONE));
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgFilterUtils$$;
    if ($DvtSvgImageFillUtils$$ === $dvt$$17$$.$ArrayUtils$.NONE) {
      for ($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$;$DvtSvgFilterUtils$$++) {
        $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$] = parseFloat($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$]);
      }
    } else {
      for ($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$;$DvtSvgFilterUtils$$++) {
        var $DvtSvgFilterContext$$ = parseFloat($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$]);
        switch($DvtSvgImageFillUtils$$) {
          case $dvt$$17$$.$ArrayUtils$.$MULT$:
            $DvtSvgFilterContext$$ *= $DvtSvgPatternFillUtils$$;
            break;
          case $dvt$$17$$.$ArrayUtils$.$ADD$:
            $DvtSvgFilterContext$$ += $DvtSvgPatternFillUtils$$;
            break;
          case $dvt$$17$$.$ArrayUtils$.$SUB$:
            $DvtSvgFilterContext$$ -= $DvtSvgPatternFillUtils$$;
            break;
          case $dvt$$17$$.$ArrayUtils$.$DIV$:
            $DvtSvgFilterContext$$ /= $DvtSvgPatternFillUtils$$;
            break;
          case $dvt$$17$$.$ArrayUtils$.$MOD$:
            $DvtSvgFilterContext$$ %= $DvtSvgPatternFillUtils$$;
        }
        $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$] = $DvtSvgFilterContext$$;
      }
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ArrayUtils$.copy = function $$dvt$$17$$$$ArrayUtils$$copy$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    if ($DvtSvgShadowUtils$$) {
      $DvtSvgPatternFillUtils$$ = [];
      for (var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
        $DvtSvgPatternFillUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$]);
      }
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$ArrayUtils$.$getIndex$ = function $$dvt$$17$$$$ArrayUtils$$$getIndex$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      if ($DvtSvgShadowUtils$$.indexOf) {
        return $DvtSvgShadowUtils$$.indexOf($DvtSvgPatternFillUtils$$);
      }
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        if ($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] === $DvtSvgPatternFillUtils$$) {
          return $DvtSvgImageFillUtils$$;
        }
      }
    }
    return -1;
  };
  $dvt$$17$$.$ArrayUtils$.$getLastIndex$ = function $$dvt$$17$$$$ArrayUtils$$$getLastIndex$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$.lastIndexOf) {
      return $DvtSvgShadowUtils$$.lastIndexOf($DvtSvgPatternFillUtils$$);
    }
    for (var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length - 1;0 <= $DvtSvgImageFillUtils$$;$DvtSvgImageFillUtils$$--) {
      if ($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] === $DvtSvgPatternFillUtils$$) {
        return $DvtSvgImageFillUtils$$;
      }
    }
    return -1;
  };
  $dvt$$17$$.$ArrayUtils$.$equals$ = function $$dvt$$17$$$$ArrayUtils$$$equals$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!$DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ || $DvtSvgShadowUtils$$ && !$DvtSvgPatternFillUtils$$) {
      return !1;
    }
    if ($DvtSvgShadowUtils$$ || $DvtSvgPatternFillUtils$$) {
      if ($DvtSvgShadowUtils$$.length != $DvtSvgPatternFillUtils$$.length) {
        return !1;
      }
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ <= $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        if ($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] !== $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]) {
          return !1;
        }
      }
    }
    return !0;
  };
  $dvt$$17$$.$ArrayUtils$.$hasAnyMapItem$ = function $$dvt$$17$$$$ArrayUtils$$$hasAnyMapItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!$DvtSvgShadowUtils$$ || !$DvtSvgPatternFillUtils$$) {
      return !1;
    }
    for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      if ($DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]]) {
        return !0;
      }
    }
    return !1;
  };
  $dvt$$17$$.$ArrayUtils$.$hasAllMapItems$ = function $$dvt$$17$$$$ArrayUtils$$$hasAllMapItems$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!$DvtSvgShadowUtils$$ || !$DvtSvgPatternFillUtils$$) {
      return !1;
    }
    for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      if (!$DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]]) {
        return !1;
      }
    }
    return !0;
  };
  $dvt$$17$$.$ArrayUtils$.$hasAnyItem$ = function $$dvt$$17$$$$ArrayUtils$$$hasAnyItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$ArrayUtils$.$hasAnyMapItem$($dvt$$17$$.$ArrayUtils$.$createBooleanMap$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ArrayUtils$.$hasAllItems$ = function $$dvt$$17$$$$ArrayUtils$$$hasAllItems$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$ArrayUtils$.$hasAllMapItems$($dvt$$17$$.$ArrayUtils$.$createBooleanMap$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ArrayUtils$.$createBooleanMap$ = function $$dvt$$17$$$$ArrayUtils$$$createBooleanMap$$($DvtSvgShadowUtils$$) {
    if (!$DvtSvgShadowUtils$$) {
      return null;
    }
    for (var $DvtSvgPatternFillUtils$$ = {}, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$[$DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]] = !0;
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$ArrayUtils$.reduce = function $$dvt$$17$$$$ArrayUtils$$reduce$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$.reduce) {
      return $DvtSvgShadowUtils$$.reduce($DvtSvgPatternFillUtils$$);
    }
    for (var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[0], $DvtSvgFilterUtils$$ = 1;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgFilterUtils$$++) {
      $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$], $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$);
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$ArrayUtils$.map = function $$dvt$$17$$$$ArrayUtils$$map$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$.map) {
      return $DvtSvgShadowUtils$$.map($DvtSvgPatternFillUtils$$);
    }
    for (var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgFilterUtils$$++) {
      $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$] = $DvtSvgPatternFillUtils$$($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$], $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$);
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$ArrayUtils$.forEach = function $$dvt$$17$$$$ArrayUtils$$forEach$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$.map) {
      $DvtSvgShadowUtils$$.forEach($DvtSvgPatternFillUtils$$);
    } else {
      for (var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
        $DvtSvgPatternFillUtils$$($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$);
      }
    }
  };
  $dvt$$17$$.$StringUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$StringUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$StringUtils$.$_hasTrim$ = null != "hello".trim;
  $dvt$$17$$.$StringUtils$.$_hasEndsWith$ = null != "hello".endsWith;
  $dvt$$17$$.$StringUtils$.trim = function $$dvt$$17$$$$StringUtils$$trim$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$StringUtils$.$_hasTrim$ ? $DvtSvgShadowUtils$$.trim() : $DvtSvgShadowUtils$$.replace(/^\s+|\s+$/g, "");
  };
  $dvt$$17$$.$StringUtils$.endsWith = function $$dvt$$17$$$$StringUtils$$endsWith$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$StringUtils$.$_hasEndsWith$ ? $DvtSvgShadowUtils$$.endsWith($DvtSvgPatternFillUtils$$) : $DvtSvgShadowUtils$$.match($DvtSvgPatternFillUtils$$ + "$") == $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$StringUtils$.$processAriaLabel$ = function $$dvt$$17$$$$StringUtils$$$processAriaLabel$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/(<|&#60;)/g, "\x26lt;");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/(>|&#62;)/g, "\x26gt;");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;b&gt;/g, "");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;\/b&gt;/g, "");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;i&gt;/g, "");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;\/i&gt;/g, "");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/\n/g, "; ");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&#92;n/g, "; ");
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;br&gt;/g, "; ");
    return $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/&lt;br\/&gt;/g, "; ");
  };
  $dvt$$17$$.$Context$ = function $$dvt$$17$$$$Context$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_root$ = $dvt$$17$$.$ToolkitUtils$.$createSvgDocument$($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ + "_svg" : null);
    $DvtSvgShadowUtils$$.appendChild(this.$_root$);
    this.$_parentDiv$ = $DvtSvgShadowUtils$$;
    this.$_referenceDiv$ = $DvtSvgImageFillUtils$$;
    this.$_implFactory$ = new $DvtSvgImplFactory$$(this);
    this.$_defs$ = this.$_implFactory$.$newDefs$();
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$(this.$_root$, this.$_defs$);
    this.$_keyboardFocusArray$ = [];
    this.$_keyboardFocusIndex$ = 0;
    this.$_dndEventManagers$ = [];
    this.$_defaultFontFamily$ = $dvt$$17$$.$Context$.$_DEFAULT_FONT_FAMILY$;
    this.$_defaultFontSize$ = $dvt$$17$$.$Context$.$_DEFAULT_FONT_SIZE$;
    this.$_normalizedFontFamilyCache$ = {};
    this.Init(this.$_implFactory$, this.$_root$, $DvtSvgPatternFillUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$(this.$_root$, this.$_stage$.$getElem$());
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Context$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Context$.$_DATATIP_POPUP_STYLE_CLASS$ = "OraDVTDatatipPopup";
  $dvt$$17$$.$Context$.$_TOOLTIP_POPUP_STYLE_CLASS$ = "OraDVTTooltipPopup";
  $dvt$$17$$.$Context$.$_DEFAULT_FONT_FAMILY$ = "'Helvetica Neue',Helvetica,Arial,sans-serif";
  $dvt$$17$$.$Context$.$_DEFAULT_FONT_SIZE$ = "12px";
  $dvt$$17$$.$Context$.$_id$ = 0;
  $dvt$$17$$.$Context$.prototype.Init = function $$dvt$$17$$$$Context$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_implFactory$ = $DvtSvgShadowUtils$$;
    this.$_stage$ = new $DvtStage$$(this, $DvtSvgPatternFillUtils$$, ($DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : "_dvt" + $dvt$$17$$.$Context$.$_id$) + "_stage");
    $dvt$$17$$.$Context$.$_id$++;
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_stage$.$getElem$(), "font-family", this.$_defaultFontFamily$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_stage$.$getElem$(), "font-size", this.$_defaultFontSize$);
    this.$_tooltipManagers$ = {};
    this.$_customTooltipManagers$ = {};
    this.$_scheduler$ = null;
    this.$_globalDefsMap$ = {};
  };
  $dvt$$17$$.$Context$.prototype.$setDefaultFontFamily$ = function $$dvt$$17$$$$Context$$$$setDefaultFontFamily$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && (this.$_defaultFontFamily$ = this.$_normalizeFontFamily$($DvtSvgShadowUtils$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_stage$.$getElem$(), "font-family", this.$_defaultFontFamily$));
  };
  $dvt$$17$$.$Context$.prototype.$isDefaultFontFamily$ = function $$dvt$$17$$$$Context$$$$isDefaultFontFamily$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ ? this.$_defaultFontFamily$ === this.$_normalizeFontFamily$($DvtSvgShadowUtils$$) : !1;
  };
  $dvt$$17$$.$Context$.prototype.$setDefaultFontSize$ = function $$dvt$$17$$$$Context$$$$setDefaultFontSize$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && (this.$_defaultFontSize$ = $DvtSvgShadowUtils$$, $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_stage$.$getElem$(), "font-size", this.$_defaultFontSize$));
  };
  $dvt$$17$$.$Context$.prototype.$_normalizeFontFamily$ = function $$dvt$$17$$$$Context$$$$_normalizeFontFamily$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_normalizedFontFamilyCache$[$DvtSvgShadowUtils$$];
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.replace(/, /g, ",").replace(/"/g, "'"), this.$_normalizedFontFamilyCache$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Context$.prototype.$getStage$ = function $$dvt$$17$$$$Context$$$$getStage$$() {
    return this.$_stage$;
  };
  $dvt$$17$$.$Context$.prototype.$isReadyToRender$ = function $$dvt$$17$$$$Context$$$$isReadyToRender$$() {
    for (var $DvtSvgShadowUtils$$ = this.$_parentDiv$;$DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ != document;) {
      if ($DvtSvgShadowUtils$$.style && "none" == $DvtSvgShadowUtils$$.style.display) {
        return !1;
      }
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentNode;
    }
    return $DvtSvgShadowUtils$$ == document;
  };
  $dvt$$17$$.$Context$.prototype.$getSvgDocument$ = function $$dvt$$17$$$$Context$$$$getSvgDocument$$() {
    return this.$_root$;
  };
  $dvt$$17$$.$Context$.prototype.$setReadingDirection$ = function $$dvt$$17$$$$Context$$$$setReadingDirection$$($DvtSvgShadowUtils$$) {
    this.$_readingDirection$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Context$.prototype.$existsGlobalDefReference$ = function $$dvt$$17$$$$Context$$$$existsGlobalDefReference$$($DvtSvgShadowUtils$$) {
    return 0 < this.$_globalDefsMap$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$Context$.prototype.$increaseGlobalDefReference$ = function $$dvt$$17$$$$Context$$$$increaseGlobalDefReference$$($DvtSvgShadowUtils$$) {
    null != $DvtSvgShadowUtils$$ && (this.$_globalDefsMap$[$DvtSvgShadowUtils$$] ? this.$_globalDefsMap$[$DvtSvgShadowUtils$$]++ : this.$_globalDefsMap$[$DvtSvgShadowUtils$$] = 1);
  };
  $dvt$$17$$.$Context$.prototype.$decreaseGlobalDefReference$ = function $$dvt$$17$$$$Context$$$$decreaseGlobalDefReference$$($DvtSvgShadowUtils$$) {
    if (null != $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = this.$_globalDefsMap$[$DvtSvgShadowUtils$$];
      $DvtSvgPatternFillUtils$$ && (1 == $DvtSvgPatternFillUtils$$ ? delete this.$_globalDefsMap$[$DvtSvgShadowUtils$$] : this.$_globalDefsMap$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$ - 1);
      this.$_globalDefsMap$[$DvtSvgShadowUtils$$] || this.$removeDefsById$($DvtSvgShadowUtils$$);
    }
  };
  $dvt$$17$$.$Context$.prototype.$getTooltipManager$ = function $$dvt$$17$$$$Context$$$$getTooltipManager$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = "_dvtTooltip");
    var $DvtSvgPatternFillUtils$$ = this.$_stage$.getId();
    $DvtSvgShadowUtils$$ += $DvtSvgPatternFillUtils$$;
    this.$_tooltipManagers$[$DvtSvgShadowUtils$$] || (this.$_tooltipManagers$[$DvtSvgShadowUtils$$] = this.$_implFactory$.$newTooltipManager$($DvtSvgShadowUtils$$));
    return this.$_tooltipManagers$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$Context$.prototype.$hideTooltips$ = function $$dvt$$17$$$$Context$$$$hideTooltips$$() {
    for (var $DvtSvgShadowUtils$$ in this.$_tooltipManagers$) {
      this.$_tooltipManagers$[$DvtSvgShadowUtils$$].$hideTooltip$();
    }
  };
  $dvt$$17$$.$Context$.prototype.$getScheduler$ = function $$dvt$$17$$$$Context$$$$getScheduler$$() {
    this.$_scheduler$ || (this.$_scheduler$ = new $DvtScheduler$$(this));
    return this.$_scheduler$;
  };
  $dvt$$17$$.$Context$.prototype.$getDocumentUtils$ = function $$dvt$$17$$$$Context$$$$getDocumentUtils$$() {
    return this.$_implFactory$.$getDocumentUtils$();
  };
  $dvt$$17$$.$Context$.prototype.$pageToStageCoords$ = function $$dvt$$17$$$$Context$$$$pageToStageCoords$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getStageAbsolutePosition$();
    return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$ - $DvtSvgImageFillUtils$$.x, $DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$.y);
  };
  $dvt$$17$$.$Context$.prototype.$stageToPageCoords$ = function $$dvt$$17$$$$Context$$$$stageToPageCoords$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getStageAbsolutePosition$();
    return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$.x, $DvtSvgPatternFillUtils$$ + $DvtSvgImageFillUtils$$.y);
  };
  $dvt$$17$$.$Context$.prototype.$getStageAbsolutePosition$ = function $$dvt$$17$$$$Context$$$$getStageAbsolutePosition$$() {
    if (this.$_stageAbsolutePosition$) {
      return this.$_stageAbsolutePosition$;
    }
    var $DvtSvgShadowUtils$$ = this.$_referenceDiv$;
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$_stage$.$getImpl$().$_SVGRoot$, $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentNode ? $DvtSvgShadowUtils$$.parentNode : $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$Agent$.$getElementPosition$($DvtSvgShadowUtils$$);
    return this.$_stageAbsolutePosition$ = new $dvt$$17$$.$Point$(parseInt($DvtSvgShadowUtils$$.x), parseInt($DvtSvgShadowUtils$$.y));
  };
  $dvt$$17$$.$Context$.prototype.$clearStageAbsolutePosition$ = function $$dvt$$17$$$$Context$$$$clearStageAbsolutePosition$$() {
    this.$_stageAbsolutePosition$ = null;
  };
  $dvt$$17$$.$Context$.prototype.$isOffscreen$ = function $$dvt$$17$$$$Context$$$$isOffscreen$$() {
    var $DvtSvgShadowUtils$$ = this.$_stage$.$getImpl$().$_SVGRoot$.getBoundingClientRect();
    return 0 > $DvtSvgShadowUtils$$.bottom || 0 > $DvtSvgShadowUtils$$.right || $DvtSvgShadowUtils$$.top > (window.innerHeight || document.documentElement.clientHeight) || $DvtSvgShadowUtils$$.left > (window.innerWidth || document.documentElement.clientWidth);
  };
  $dvt$$17$$.$Context$.prototype.$getCustomTooltipManager$ = function $$dvt$$17$$$$Context$$$$getCustomTooltipManager$$() {
    var $DvtSvgShadowUtils$$;
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = "_dvtCustomTooltip");
    var $DvtSvgPatternFillUtils$$ = this.$_stage$.getId();
    $DvtSvgShadowUtils$$ += $DvtSvgPatternFillUtils$$;
    this.$_customTooltipManagers$[$DvtSvgShadowUtils$$] || (this.$_customTooltipManagers$[$DvtSvgShadowUtils$$] = new $DvtCustomTooltipManager$$(this, $DvtSvgShadowUtils$$));
    return this.$_customTooltipManagers$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$Context$.prototype.$appendDefs$ = function $$dvt$$17$$$$Context$$$$appendDefs$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$(this.$_defs$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Context$.prototype.$getDefs$ = function $$dvt$$17$$$$Context$$$$getDefs$$() {
    return this.$_defs$;
  };
  $dvt$$17$$.$Context$.prototype.$removeDefs$ = function $$dvt$$17$$$$Context$$$$removeDefs$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_obj$ && $DvtSvgShadowUtils$$.$_obj$.$destroy$();
    this.$_defs$.removeChild($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Context$.prototype.$removeDefsById$ = function $$dvt$$17$$$$Context$$$$removeDefsById$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = this.$_defs$.childNodes, $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$];
      if ($DvtSvgFilterUtils$$.id === $DvtSvgShadowUtils$$) {
        this.$removeDefs$($DvtSvgFilterUtils$$);
        break;
      }
    }
  };
  $dvt$$17$$.$Context$.$resetUniqueSeeds$ = function $$dvt$$17$$$$Context$$$resetUniqueSeeds$$() {
    $dvt$$17$$.$Agent$.$isEnvironmentBrowser$() || ("undefined" != typeof $DvtAfComponent$$ && ($DvtAfComponent$_uniqueSeed$$ = 0), $DvtSvgFilterUtils$$.$_counter$ = 0, $dvt$$17$$.$ClipPath$.$_uniqueSeed$ = 0, $dvt$$17$$.$SvgShapeUtils$.$_uniqueSeed$ = 0, $dvt$$17$$.$Mask$.$_uniqueSeed$ = 0, $dvt$$17$$.$Agent$.$_bInitialized$ = !1);
  };
  $dvt$$17$$.$Context$.$resetCaches$ = function $$dvt$$17$$$$Context$$$resetCaches$$() {
    $dvt$$17$$.$Agent$.$isEnvironmentBrowser$() || ("undefined" != typeof $DvtAfComponent$$ && ($DvtAfStyleUtils$_defaultFontColor$$ = $DvtAfStyleUtils$_defaultFontSize$$ = $DvtAfStyleUtils$_defaultFontFamily$$ = $DvtAfStyleUtils$_panelCardMap$$ = null, $DvtAfStyleUtils$_afStretchWidth$$ = $DvtAfStyleUtils$_tagSkinKeyMap$$ = $DvtAfStyleUtils$_styleMap$$ = void 0), $dvt$$17$$.$OutputText$.$_cache$ = null, $dvt$$17$$.$TextUtils$.$_cachedTextDimensions$ = {}, $dvt$$17$$.$LedGaugeRenderer$ && ($dvt$$17$$.$LedGaugeRenderer$.$_cache$ = 
    null));
  };
  $dvt$$17$$.$Context$.prototype.$setActiveElement$ = function $$dvt$$17$$$$Context$$$$setActiveElement$$($DvtSvgShadowUtils$$) {
    if ($dvt$$17$$.$Agent$.$isEnvironmentBrowser$()) {
      this.$_activeElement$ && ($dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_activeElement$.$getElem$(), "id"), this.$_activeElement$ = null);
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getElem$(), $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgPatternFillUtils$$, "id");
      $DvtSvgImageFillUtils$$ || (($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId()) ? $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "id", $DvtSvgImageFillUtils$$) : ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$EventManager$.$_getActiveElementId$(), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "id", $DvtSvgImageFillUtils$$), this.$_activeElement$ = $DvtSvgShadowUtils$$));
      $DvtSvgShadowUtils$$.$applyAriaProperties$();
      "application" == this.$_role$ && this.$_parentDiv$.setAttribute("aria-activedescendant", $DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$Context$.prototype.$setAriaLabel$ = function $$dvt$$17$$$$Context$$$$setAriaLabel$$($DvtSvgShadowUtils$$) {
    this.$_parentDiv$.getAttribute("aria-label") || ($DvtSvgShadowUtils$$ ? this.$_parentDiv$.setAttribute("aria-label", $dvt$$17$$.$StringUtils$.$processAriaLabel$($DvtSvgShadowUtils$$)) : this.$_parentDiv$.removeAttribute("aria-label"));
  };
  $dvt$$17$$.$Context$.prototype.$setAriaRole$ = function $$dvt$$17$$$$Context$$$$setAriaRole$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ ? this.$_parentDiv$.setAttribute("role", $DvtSvgShadowUtils$$) : this.$_parentDiv$.removeAttribute("role");
    this.$_role$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Context$.prototype.$setTooltipAttachedCallback$ = function $$dvt$$17$$$$Context$$$$setTooltipAttachedCallback$$($DvtSvgShadowUtils$$) {
    this.$_tooltipAttachedCallback$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Context$.prototype.$setTooltipStyleClass$ = function $$dvt$$17$$$$Context$$$$setTooltipStyleClass$$($DvtSvgShadowUtils$$) {
    this.$_tooltipStyleClass$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Context$.prototype.$getTooltipStyleClass$ = function $$dvt$$17$$$$Context$$$$getTooltipStyleClass$$() {
    return this.$_tooltipStyleClass$ ? this.$_tooltipStyleClass$ : $dvt$$17$$.$Context$.$_TOOLTIP_POPUP_STYLE_CLASS$;
  };
  $dvt$$17$$.$Context$.prototype.$setDatatipStyleClass$ = function $$dvt$$17$$$$Context$$$$setDatatipStyleClass$$($DvtSvgShadowUtils$$) {
    this.$_datatipStyleClass$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Context$.prototype.$getDatatipStyleClass$ = function $$dvt$$17$$$$Context$$$$getDatatipStyleClass$$() {
    return this.$_datatipStyleClass$ ? this.$_datatipStyleClass$ : $dvt$$17$$.$Context$.$_DATATIP_POPUP_STYLE_CLASS$;
  };
  $dvt$$17$$.$Context$.prototype.$resetCurrentKeyboardFocus$ = function $$dvt$$17$$$$Context$$$$resetCurrentKeyboardFocus$$($DvtSvgShadowUtils$$) {
    this.$_keyboardFocusArray$ && 0 !== this.$_keyboardFocusArray$.length && ($DvtSvgShadowUtils$$.keyCode == $dvt$$17$$.KeyboardEvent.$TAB$ && $DvtSvgShadowUtils$$.shiftKey ? this.$setCurrentKeyboardFocus$(this.$_keyboardFocusArray$[this.$_keyboardFocusArray$.length - 1]) : $DvtSvgShadowUtils$$.keyCode == $dvt$$17$$.KeyboardEvent.$TAB$ && this.$setCurrentKeyboardFocus$(this.$_keyboardFocusArray$[0]));
  };
  $dvt$$17$$.$Context$.prototype.$setKeyboardFocusArray$ = function $$dvt$$17$$$$Context$$$$setKeyboardFocusArray$$($DvtSvgShadowUtils$$) {
    this.$_keyboardFocusArray$ = $DvtSvgShadowUtils$$;
    this.$_keyboardFocusIndex$ = 0;
    0 < $DvtSvgShadowUtils$$.length && (this.$_root$.parentNode.$_currentObj$ = this.$_keyboardFocusArray$[this.$_keyboardFocusIndex$]);
  };
  $dvt$$17$$.$Context$.prototype.$getCurrentKeyboardFocus$ = function $$dvt$$17$$$$Context$$$$getCurrentKeyboardFocus$$() {
    return this.$_keyboardFocusArray$.length <= this.$_keyboardFocusIndex$ ? null : this.$_keyboardFocusArray$[this.$_keyboardFocusIndex$];
  };
  $dvt$$17$$.$Context$.prototype.$setCurrentKeyboardFocus$ = function $$dvt$$17$$$$Context$$$$setCurrentKeyboardFocus$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$ArrayUtils$.$getIndex$(this.$_keyboardFocusArray$, $DvtSvgShadowUtils$$);
    if (-1 != $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = this.$_keyboardFocusArray$[$DvtSvgShadowUtils$$];
      this.$_keyboardFocusIndex$ = $DvtSvgShadowUtils$$;
      this.$_root$.parentNode.$_currentObj$ = $DvtSvgPatternFillUtils$$;
    }
  };
  $dvt$$17$$.$Context$.prototype.$nextKeyboardFocus$ = function $$dvt$$17$$$$Context$$$$nextKeyboardFocus$$() {
    var $DvtSvgShadowUtils$$ = this.$_keyboardFocusArray$[this.$_keyboardFocusIndex$ + 1];
    return $DvtSvgShadowUtils$$ ? (this.$_keyboardFocusIndex$++, this.$_root$.parentNode.$_currentObj$ = $DvtSvgShadowUtils$$) : null;
  };
  $dvt$$17$$.$Context$.prototype.$previousKeyboardFocus$ = function $$dvt$$17$$$$Context$$$$previousKeyboardFocus$$() {
    var $DvtSvgShadowUtils$$ = this.$_keyboardFocusArray$[this.$_keyboardFocusIndex$ - 1];
    return $DvtSvgShadowUtils$$ ? (this.$_keyboardFocusIndex$--, this.$_root$.parentNode.$_currentObj$ = $DvtSvgShadowUtils$$) : null;
  };
  $dvt$$17$$.$Context$.prototype.$getNumberConverter$ = function $$dvt$$17$$$$Context$$$$getNumberConverter$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getLocaleHelpers$();
    return $DvtSvgPatternFillUtils$$.numberConverterFactory ? $DvtSvgPatternFillUtils$$.numberConverterFactory.createConverter($DvtSvgShadowUtils$$) : null;
  };
  $dvt$$17$$.$Context$.prototype.$getLocaleHelpers$ = function $$dvt$$17$$$$Context$$$$getLocaleHelpers$$() {
    return this.$_localeHelpers$ ? this.$_localeHelpers$ : {};
  };
  $dvt$$17$$.$Context$.prototype.$setLocaleHelpers$ = function $$dvt$$17$$$$Context$$$$setLocaleHelpers$$($DvtSvgShadowUtils$$) {
    this.$_localeHelpers$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Context$.requestAnimationFrame = function $$dvt$$17$$$$Context$$requestAnimationFrame$($DvtSvgShadowUtils$$) {
    return window.requestAnimationFrame ? window.requestAnimationFrame($DvtSvgShadowUtils$$) : window.setTimeout($DvtSvgShadowUtils$$, 1E3 / 30);
  };
  $dvt$$17$$.$Context$.cancelAnimationFrame = function $$dvt$$17$$$$Context$$cancelAnimationFrame$($DvtSvgShadowUtils$$) {
    window.cancelAnimationFrame ? window.cancelAnimationFrame($DvtSvgShadowUtils$$) : clearTimeout($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Context$.prototype.$createOverlayDiv$ = function $$dvt$$17$$$$Context$$$$createOverlayDiv$$() {
    var $DvtSvgShadowUtils$$ = document.createElement("div");
    $DvtSvgShadowUtils$$.style.top = "-100%";
    $DvtSvgShadowUtils$$.style.position = "relative";
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Context$.prototype.$setOverlayAttachedCallback$ = function $$dvt$$17$$$$Context$$$$setOverlayAttachedCallback$$($DvtSvgShadowUtils$$) {
    this.$_overlayAttachedCallback$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Context$.prototype.$addDndEventManager$ = function $$dvt$$17$$$$Context$$$$addDndEventManager$$($DvtSvgShadowUtils$$) {
    this.$_dndEventManagers$.push($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Context$.prototype.$removeDndEventManager$ = function $$dvt$$17$$$$Context$$$$removeDndEventManager$$($DvtSvgShadowUtils$$) {
    this.$_dndEventManagers$.splice(this.$_dndEventManagers$.indexOf($DvtSvgShadowUtils$$), 1);
  };
  $dvt$$17$$.$Context$.prototype.$isLastDndEventManager$ = function $$dvt$$17$$$$Context$$$$isLastDndEventManager$$($DvtSvgShadowUtils$$) {
    return this.$_dndEventManagers$[this.$_dndEventManagers$.length - 1] === $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtLockable$$, $dvt$$17$$.$Obj$);
  $DvtLockable$$.prototype.$_Init$ = function $$DvtLockable$$$$$_Init$$() {
    this.$_bLocked$ = !1;
  };
  $DvtLockable$$.prototype.$__lock$ = function $$DvtLockable$$$$$__lock$$() {
    this.$_bLocked$ = !0;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtScheduled$$, $dvt$$17$$.$Obj$);
  $DvtScheduled$$.$_STATE_INITIALIZE$ = 0;
  $DvtScheduled$$.$_STATE_BEGIN$ = 1;
  $DvtScheduled$$.$_STATE_RUN$ = 2;
  $DvtScheduled$$.$CalcProgress$ = function $$DvtScheduled$$$$CalcProgress$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = 1 - $DvtSvgPatternFillUtils$$;
    if (0 == $DvtSvgImageFillUtils$$) {
      return .5;
    }
    $DvtSvgImageFillUtils$$ = ($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$) / $DvtSvgImageFillUtils$$;
    1 < $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = 1);
    return $DvtSvgImageFillUtils$$;
  };
  $DvtScheduled$$.prototype.Init = function $$DvtScheduled$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_scheduler$ = $DvtSvgPatternFillUtils$$;
    this.$setDuration$($DvtSvgImageFillUtils$$);
    this.$setDelay$($DvtSvgGradientUtils$$);
    this.$setEasing$($DvtSvgFilterUtils$$);
    this.$_bRunning$ = !1;
    this.$_startTime$ = null;
    this.$_progress$ = 0;
    this.$_state$ = $DvtScheduled$$.$_STATE_INITIALIZE$;
    this.$_onEndObj$ = this.$_onEnd$ = this.$_onStartObj$ = this.$_onStart$ = this.$_onInitObj$ = this.$_onInit$ = null;
  };
  $DvtScheduled$$.prototype.$getDuration$ = function $$DvtScheduled$$$$$getDuration$$() {
    return this.$_duration$;
  };
  $DvtScheduled$$.prototype.$setDuration$ = function $$DvtScheduled$$$$$setDuration$$($DvtSvgShadowUtils$$) {
    this.$_duration$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : .5;
  };
  $DvtScheduled$$.prototype.$setDelay$ = function $$DvtScheduled$$$$$setDelay$$($DvtSvgShadowUtils$$) {
    this.$_delay$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0;
  };
  $DvtScheduled$$.prototype.$setEasing$ = function $$DvtScheduled$$$$$setEasing$$($DvtSvgShadowUtils$$) {
    this.$_easing$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : $dvt$$17$$.$Easing$.$cubicInOut$;
  };
  $DvtScheduled$$.prototype.$setOnInit$ = function $$DvtScheduled$$$$$setOnInit$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_onInit$ = $DvtSvgShadowUtils$$;
    this.$_onInitObj$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : null;
  };
  $DvtScheduled$$.prototype.$getOnInit$ = function $$DvtScheduled$$$$$getOnInit$$() {
    return [this.$_onInit$, this.$_onInitObj$];
  };
  $DvtScheduled$$.prototype.$setOnStart$ = function $$DvtScheduled$$$$$setOnStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_onStart$ = $DvtSvgShadowUtils$$;
    this.$_onStartObj$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : null;
  };
  $DvtScheduled$$.prototype.$getOnStart$ = function $$DvtScheduled$$$$$getOnStart$$() {
    return [this.$_onStart$, this.$_onStartObj$];
  };
  $DvtScheduled$$.prototype.$setOnEnd$ = function $$DvtScheduled$$$$$setOnEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_onEnd$ = $DvtSvgShadowUtils$$;
    this.$_onEndObj$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : null;
  };
  $DvtScheduled$$.prototype.$getOnEnd$ = function $$DvtScheduled$$$$$getOnEnd$$() {
    return [this.$_onEnd$, this.$_onEndObj$];
  };
  $DvtScheduled$$.prototype.$isRunning$ = function $$DvtScheduled$$$$$isRunning$$() {
    return this.$_bRunning$;
  };
  $DvtScheduled$$.prototype.play = function $$DvtScheduled$$$$play$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ ? this.$_play$() : this.$_animationRequestId$ = $dvt$$17$$.$Context$.requestAnimationFrame($dvt$$17$$.$Obj$.$createCallback$(this, this.$_play$));
  };
  $DvtScheduled$$.prototype.$_play$ = function $$DvtScheduled$$$$$_play$$() {
    this.$_bRunning$ || (this.$_bRunning$ = !0, this.$ProcessPlay$(), this.$_scheduler$.$addScheduled$(this));
    this.$_context$.$isOffscreen$() && this.stop(!0);
    this.$_animationRequestId$ = null;
  };
  $DvtScheduled$$.prototype.stop = function $$DvtScheduled$$$$stop$($DvtSvgShadowUtils$$) {
    this.$_animationRequestId$ ? ($dvt$$17$$.$Context$.cancelAnimationFrame(this.$_animationRequestId$), this.$_animationRequestId$ = null) : (this.$_scheduler$.$removeScheduled$(this), $DvtSvgShadowUtils$$ && this.$ProcessStep$(1), this.$ProcessEnd$());
  };
  $DvtScheduled$$.prototype.$processTime$ = function $$DvtScheduled$$$$$processTime$$($DvtSvgShadowUtils$$) {
    if (this.$_bRunning$) {
      $DvtSvgShadowUtils$$ -= this.$_startTime$;
      if (0 > $DvtSvgShadowUtils$$) {
        return !1;
      }
      var $DvtSvgPatternFillUtils$$ = 1E3 * this.$GetTotalDuration$(), $DvtSvgImageFillUtils$$ = 1;
      0 != $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$ / $DvtSvgPatternFillUtils$$);
      1 < $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = 1);
      this.$ProcessStep$($DvtSvgImageFillUtils$$);
      ($DvtSvgShadowUtils$$ = 1 <= $DvtSvgImageFillUtils$$) && this.$ProcessEnd$();
      return $DvtSvgShadowUtils$$;
    }
  };
  $DvtScheduled$$.prototype.$GetTotalDuration$ = function $$DvtScheduled$$$$$GetTotalDuration$$() {
    return this.$_delay$ + this.$_duration$;
  };
  $DvtScheduled$$.prototype.$ProcessPlay$ = function $$DvtScheduled$$$$$ProcessPlay$$() {
    this.$_state$ == $DvtScheduled$$.$_STATE_INITIALIZE$ && this.$ProcessInitialize$();
    this.$_state$ == $DvtScheduled$$.$_STATE_BEGIN$ ? (this.$_startTime$ = (new Date).getTime(), this.$ProcessStart$()) : this.$_startTime$ = (new Date).getTime() - 1E3 * this.$_progress$ * this.$GetTotalDuration$();
    this.$_state$ = $DvtScheduled$$.$_STATE_RUN$;
  };
  $DvtScheduled$$.prototype.$ProcessInitialize$ = function $$DvtScheduled$$$$$ProcessInitialize$$() {
    this.$_onInit$ && this.$_onInit$.call(this.$_onInitObj$);
    this.$Initialize$();
    this.$_state$ = $DvtScheduled$$.$_STATE_BEGIN$;
  };
  $DvtScheduled$$.prototype.$ProcessStart$ = function $$DvtScheduled$$$$$ProcessStart$$() {
    this.$_bRunning$ = !0;
    this.$_progress$ = 0;
    this.$_onStart$ && this.$_onStart$.call(this.$_onStartObj$);
  };
  $DvtScheduled$$.prototype.$ProcessStep$ = function $$DvtScheduled$$$$$ProcessStep$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_progress$ = $DvtSvgShadowUtils$$;
    0 < this.$_delay$ && ($DvtSvgPatternFillUtils$$ = $DvtScheduled$$.$CalcProgress$($DvtSvgShadowUtils$$, this.$_delay$ / this.$GetTotalDuration$()));
    0 <= $DvtSvgPatternFillUtils$$ && (this.$_easing$ && ($DvtSvgPatternFillUtils$$ = this.$_easing$($DvtSvgPatternFillUtils$$)), this.$Step$($DvtSvgPatternFillUtils$$));
  };
  $DvtScheduled$$.prototype.$ProcessEnd$ = function $$DvtScheduled$$$$$ProcessEnd$$() {
    this.$_bRunning$ && (this.$_bRunning$ = !1, this.$_progress$ = 1, this.$_state$ = $DvtScheduled$$.$_STATE_BEGIN$, this.$_onEnd$ && this.$_onEnd$.call(this.$_onEndObj$));
  };
  $DvtScheduled$$.prototype.$Initialize$ = function $$DvtScheduled$$$$$Initialize$$() {
  };
  $DvtScheduled$$.prototype.$Step$ = function $$DvtScheduled$$$$$Step$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtScheduler$$, $dvt$$17$$.$Obj$);
  $DvtScheduler$$.prototype.Init = function $$DvtScheduler$$$$Init$() {
    this.$_scheduledItems$ = [];
    this.$_bRunning$ = !1;
  };
  $DvtScheduler$$.prototype.$HandleTimer$ = function $$DvtScheduler$$$$$HandleTimer$$() {
    for (var $DvtSvgShadowUtils$$ = (new Date).getTime(), $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_scheduledItems$.length;$DvtSvgPatternFillUtils$$++) {
      var $DvtSvgImageFillUtils$$ = this.$_scheduledItems$[$DvtSvgPatternFillUtils$$];
      $DvtSvgImageFillUtils$$.$processTime$($DvtSvgShadowUtils$$) && this.$removeScheduled$($DvtSvgImageFillUtils$$);
    }
    1 > this.$_scheduledItems$.length ? (this.$_bRunning$ && (this.$_bRunning$ = !1, this.$_animationRequestId$ && $dvt$$17$$.$Context$.cancelAnimationFrame(this.$_animationRequestId$)), this.$_animationRequestId$ = null) : this.$_animationRequestId$ = $dvt$$17$$.$Context$.requestAnimationFrame($dvt$$17$$.$Obj$.$createCallback$(this, this.$HandleTimer$));
    $DvtScheduler$$.$_frameCount$++;
  };
  $DvtScheduler$$.prototype.$addScheduled$ = function $$DvtScheduler$$$$$addScheduled$$($DvtSvgShadowUtils$$) {
    0 > $dvt$$17$$.$ArrayUtils$.$getIndex$(this.$_scheduledItems$, $DvtSvgShadowUtils$$) && this.$_scheduledItems$.push($DvtSvgShadowUtils$$);
    this.play();
  };
  $DvtScheduler$$.prototype.$removeScheduled$ = function $$DvtScheduler$$$$$removeScheduled$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$ArrayUtils$.$getIndex$(this.$_scheduledItems$, $DvtSvgShadowUtils$$);
    0 <= $DvtSvgShadowUtils$$ && this.$_scheduledItems$.splice($DvtSvgShadowUtils$$, 1);
  };
  $DvtScheduler$$.prototype.play = function $$DvtScheduler$$$$play$() {
    if (!this.$_bRunning$) {
      for (var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_scheduledItems$.length;$DvtSvgShadowUtils$$++) {
        var $DvtSvgPatternFillUtils$$ = this.$_scheduledItems$[$DvtSvgShadowUtils$$];
        $DvtSvgPatternFillUtils$$.$isRunning$() || $DvtSvgPatternFillUtils$$.play();
      }
      this.$_bRunning$ = !0;
      this.$_animationRequestId$ = $dvt$$17$$.$Context$.requestAnimationFrame($dvt$$17$$.$Obj$.$createCallback$(this, this.$HandleTimer$));
    }
  };
  $dvt$$17$$.$Animator$ = function $$dvt$$17$$$$Animator$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Animator$, $DvtScheduled$$);
  $dvt$$17$$.$Animator$.$TYPE_NUMBER$ = "typeNumber";
  $dvt$$17$$.$Animator$.$TYPE_MATRIX$ = "typeMatrix";
  $dvt$$17$$.$Animator$.$TYPE_NUMBER_ARRAY$ = "typeNumberArray";
  $dvt$$17$$.$Animator$.$TYPE_COLOR$ = "typeColor";
  $dvt$$17$$.$Animator$.$TYPE_COLOR_ARRAY$ = "typeColorArray";
  $dvt$$17$$.$Animator$.$TYPE_GROW_POLYLINE$ = "typeGrowPolyline";
  $dvt$$17$$.$Animator$.$TYPE_RECTANGLE$ = "typeRectangle";
  $dvt$$17$$.$Animator$.$TYPE_POINT$ = "typePoint";
  $dvt$$17$$.$Animator$.$TYPE_PATH$ = "typePath";
  $dvt$$17$$.$Animator$.$TYPE_GROW_PATH$ = "typeGrowPath";
  $dvt$$17$$.$Animator$.$TYPE_FILL$ = "typeFill";
  $dvt$$17$$.$Animator$.$TYPE_STROKE$ = "typeStroke";
  $dvt$$17$$.$Animator$.$TYPE_POLYLINE$ = "typePolyline";
  $dvt$$17$$.$Animator$.$_KEY_PREFIX$ = "dvtAnimPropMap_";
  $dvt$$17$$.$Animator$.prototype.Init = function $$dvt$$17$$$$Animator$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$17$$.$Animator$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScheduler$(), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_props$ = {};
  };
  $dvt$$17$$.$Animator$.prototype.$addProp$ = function $$dvt$$17$$$$Animator$$$$addProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$ = this.$GetPropItem$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgFilterContext$$ ? $DvtSvgFilterContext$$.$destVal$ = $DvtSvgFilterUtils$$ : ($DvtSvgFilterContext$$ = new $DvtAnimatorPropItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $DvtSvgShadowUtils$$ = $dvt$$17$$.$Animator$.$GetKey$($DvtSvgPatternFillUtils$$), this.$_props$[$DvtSvgShadowUtils$$] || (this.$_props$[$DvtSvgShadowUtils$$] = {}), this.$_props$[$DvtSvgShadowUtils$$][$dvt$$17$$.$Animator$.$GetKey$($DvtSvgImageFillUtils$$)] = 
    $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Animator$.prototype.$removeProp$ = function $$dvt$$17$$$$Animator$$$$removeProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$GetPropItem$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$ ? ($DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.$destVal$, delete this.$_props$[$dvt$$17$$.$Animator$.$GetKey$($DvtSvgShadowUtils$$)][$dvt$$17$$.$Animator$.$GetKey$($DvtSvgPatternFillUtils$$)], $DvtSvgImageFillUtils$$) : null;
  };
  $dvt$$17$$.$Animator$.prototype.$getDestVal$ = function $$dvt$$17$$$$Animator$$$$getDestVal$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$GetPropItem$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$.$destVal$ : $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$.call($DvtSvgShadowUtils$$) : null;
  };
  $dvt$$17$$.$Animator$.prototype.$GetPropItem$ = function $$dvt$$17$$$$Animator$$$$GetPropItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$Animator$.$GetKey$($DvtSvgShadowUtils$$);
    return this.$_props$[$DvtSvgImageFillUtils$$] ? this.$_props$[$DvtSvgImageFillUtils$$][$dvt$$17$$.$Animator$.$GetKey$($DvtSvgPatternFillUtils$$)] : null;
  };
  $dvt$$17$$.$Animator$.$GetKey$ = function $$dvt$$17$$$$Animator$$$GetKey$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_dvtAnimPropMapKey$ || ($DvtSvgShadowUtils$$.$_dvtAnimPropMapKey$ = $dvt$$17$$.$Animator$.$_KEY_PREFIX$ + Math.random());
    return $DvtSvgShadowUtils$$.$_dvtAnimPropMapKey$;
  };
  $dvt$$17$$.$Animator$.prototype.$Initialize$ = function $$dvt$$17$$$$Animator$$$$Initialize$$() {
    for (var $DvtSvgShadowUtils$$ in this.$_props$) {
      for (var $DvtSvgPatternFillUtils$$ in this.$_props$[$DvtSvgShadowUtils$$]) {
        var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$][$DvtSvgPatternFillUtils$$];
        $DvtSvgImageFillUtils$$.$startVal$ = $DvtSvgImageFillUtils$$.$getter$.call($DvtSvgImageFillUtils$$.$obj$);
      }
    }
  };
  $dvt$$17$$.$Animator$.prototype.$Step$ = function $$dvt$$17$$$$Animator$$$$Step$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ in this.$_props$) {
      for (var $DvtSvgImageFillUtils$$ in this.$_props$[$DvtSvgPatternFillUtils$$]) {
        var $DvtSvgGradientUtils$$ = this.$_props$[$DvtSvgPatternFillUtils$$][$DvtSvgImageFillUtils$$], $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$obj$, $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$.$setter$, $DvtSvgGradientUtils$$ = $DvtInterpolator$$.$interpolate$(this.$_context$, $DvtSvgGradientUtils$$.type, $DvtSvgGradientUtils$$.$startVal$, $DvtSvgGradientUtils$$.$destVal$, $DvtSvgShadowUtils$$);
        $DvtSvgFilterContext$$.call($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$);
      }
    }
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtAnimatorPropItem$$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Playable$ = function $$dvt$$17$$$$Playable$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Playable$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Playable$.$appendOnEnd$ = function $$dvt$$17$$$$Playable$$$appendOnEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getOnEnd$();
      $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnEnd$(function() {
        $DvtSvgGradientUtils$$[0].call($DvtSvgGradientUtils$$[1]);
        $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$);
      }) : $DvtSvgShadowUtils$$.$setOnEnd$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$Playable$.$prependOnEnd$ = function $$dvt$$17$$$$Playable$$$prependOnEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getOnEnd$();
      $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnEnd$(function() {
        $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$);
        $DvtSvgGradientUtils$$[0].call($DvtSvgGradientUtils$$[1]);
      }) : $DvtSvgShadowUtils$$.$setOnEnd$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$Playable$.$appendOnStart$ = function $$dvt$$17$$$$Playable$$$appendOnStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$.$getOnStart$ && $DvtSvgShadowUtils$$.$setOnStart$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getOnStart$();
      $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnStart$(function() {
        $DvtSvgGradientUtils$$[0].call($DvtSvgGradientUtils$$[1]);
        $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$);
      }) : $DvtSvgShadowUtils$$.$setOnStart$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$Playable$.$prependOnStart$ = function $$dvt$$17$$$$Playable$$$prependOnStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$.$getOnStart$ && $DvtSvgShadowUtils$$.$setOnStart$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getOnStart$();
      $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnStart$(function() {
        $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$);
        $DvtSvgGradientUtils$$[0].call($DvtSvgGradientUtils$$[1]);
      }) : $DvtSvgShadowUtils$$.$setOnStart$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$Playable$.$appendOnInit$ = function $$dvt$$17$$$$Playable$$$appendOnInit$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$.$getOnInit$ && $DvtSvgShadowUtils$$.$setOnInit$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getOnInit$();
      $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnInit$(function() {
        $DvtSvgImageFillUtils$$[0].call($DvtSvgImageFillUtils$$[1]);
        $DvtSvgPatternFillUtils$$.call(void 0);
      }) : $DvtSvgShadowUtils$$.$setOnInit$($DvtSvgPatternFillUtils$$, void 0);
    }
  };
  $dvt$$17$$.$Playable$.$prependOnInit$ = function $$dvt$$17$$$$Playable$$$prependOnInit$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$.$getOnInit$ && $DvtSvgShadowUtils$$.$setOnInit$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getOnInit$();
      $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$[0] ? $DvtSvgShadowUtils$$.$setOnInit$(function() {
        $DvtSvgPatternFillUtils$$.call(void 0);
        $DvtSvgImageFillUtils$$[0].call($DvtSvgImageFillUtils$$[1]);
      }) : $DvtSvgShadowUtils$$.$setOnInit$($DvtSvgPatternFillUtils$$, void 0);
    }
  };
  $dvt$$17$$.$Playable$.prototype.Init = function $$dvt$$17$$$$Playable$$$Init$($DvtSvgShadowUtils$$) {
    this.$Context$ = $DvtSvgShadowUtils$$;
    this.$_onEndObj$ = this.$_onEnd$ = null;
  };
  $dvt$$17$$.$Playable$.prototype.$setOnEnd$ = function $$dvt$$17$$$$Playable$$$$setOnEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_onEnd$ = $DvtSvgShadowUtils$$;
    this.$_onEndObj$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : null;
  };
  $dvt$$17$$.$Playable$.prototype.$getOnEnd$ = function $$dvt$$17$$$$Playable$$$$getOnEnd$$() {
    return [this.$_onEnd$, this.$_onEndObj$];
  };
  $dvt$$17$$.$Playable$.prototype.$getDuration$ = function $$dvt$$17$$$$Playable$$$$getDuration$$() {
    return 0;
  };
  $dvt$$17$$.$Playable$.prototype.$initialize$ = function $$dvt$$17$$$$Playable$$$$initialize$$() {
  };
  $dvt$$17$$.$Playable$.prototype.play = function $$dvt$$17$$$$Playable$$$play$() {
  };
  $dvt$$17$$.$Playable$.prototype.stop = function $$dvt$$17$$$$Playable$$$stop$() {
  };
  $dvt$$17$$.$ParallelPlayable$ = function $$dvt$$17$$$$ParallelPlayable$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    arguments && 1 < arguments.length && arguments[1] instanceof Array ? $DvtSvgPatternFillUtils$$ = arguments[1] : ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ArrayUtils$.$argsToArray$(arguments), $DvtSvgPatternFillUtils$$.splice(0, 1));
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ParallelPlayable$, $dvt$$17$$.$Playable$);
  $dvt$$17$$.$ParallelPlayable$.prototype.Init = function $$dvt$$17$$$$ParallelPlayable$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$17$$.$ParallelPlayable$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_runningCounter$ = 0;
    this.$_arPlayables$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : [];
    this.$_bStarted$ = !1;
  };
  $dvt$$17$$.$ParallelPlayable$.prototype.$getDuration$ = function $$dvt$$17$$$$ParallelPlayable$$$$getDuration$$() {
    for (var $DvtSvgShadowUtils$$ = 0, $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_arPlayables$.length;$DvtSvgPatternFillUtils$$++) {
      var $DvtSvgImageFillUtils$$ = this.$_arPlayables$[$DvtSvgPatternFillUtils$$];
      $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$Playable$ && ($DvtSvgShadowUtils$$ = Math.max($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.$getDuration$()));
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ParallelPlayable$.prototype.$initialize$ = function $$dvt$$17$$$$ParallelPlayable$$$$initialize$$() {
    for (var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_arPlayables$.length;$DvtSvgShadowUtils$$++) {
      this.$_arPlayables$[$DvtSvgShadowUtils$$] instanceof $dvt$$17$$.$Playable$ && this.$_arPlayables$[$DvtSvgShadowUtils$$].$initialize$();
    }
  };
  $dvt$$17$$.$ParallelPlayable$.prototype.play = function $$dvt$$17$$$$ParallelPlayable$$$play$($DvtSvgShadowUtils$$) {
    0 < this.$_arPlayables$.length ? $DvtSvgShadowUtils$$ ? this.$_play$() : (this.$initialize$(), this.$_animationRequestId$ = $dvt$$17$$.$Context$.requestAnimationFrame($dvt$$17$$.$Obj$.$createCallback$(this, this.$_play$))) : this.$_animationRequestId$ = $dvt$$17$$.$Context$.requestAnimationFrame($dvt$$17$$.$Obj$.$createCallback$(this, this.$DoEnd$));
  };
  $dvt$$17$$.$ParallelPlayable$.prototype.$_play$ = function $$dvt$$17$$$$ParallelPlayable$$$$_play$$() {
    var $DvtSvgShadowUtils$$;
    if (!this.$_bStarted$) {
      for (var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_arPlayables$.length;$DvtSvgPatternFillUtils$$++) {
        $DvtSvgShadowUtils$$ = this.$_arPlayables$[$DvtSvgPatternFillUtils$$], $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$Playable$ && (this.$_runningCounter$++, $dvt$$17$$.$Playable$.$appendOnEnd$($DvtSvgShadowUtils$$, this.$OnPlayableEnd$, this));
      }
    }
    for ($DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_arPlayables$.length;$DvtSvgPatternFillUtils$$++) {
      $DvtSvgShadowUtils$$ = this.$_arPlayables$[$DvtSvgPatternFillUtils$$], $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$Playable$ && $DvtSvgShadowUtils$$.play(!0);
    }
    this.$_bStarted$ = !0;
    this.$_animationRequestId$ = null;
  };
  $dvt$$17$$.$ParallelPlayable$.prototype.stop = function $$dvt$$17$$$$ParallelPlayable$$$stop$($DvtSvgShadowUtils$$) {
    if (this.$_animationRequestId$) {
      $dvt$$17$$.$Context$.cancelAnimationFrame(this.$_animationRequestId$), this.$DoEnd$();
    } else {
      for (var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < this.$_arPlayables$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgPatternFillUtils$$ = this.$_arPlayables$[$DvtSvgImageFillUtils$$], $DvtSvgPatternFillUtils$$ instanceof $dvt$$17$$.$Playable$ && $DvtSvgPatternFillUtils$$.stop($DvtSvgShadowUtils$$);
      }
    }
  };
  $dvt$$17$$.$ParallelPlayable$.prototype.$OnPlayableEnd$ = function $$dvt$$17$$$$ParallelPlayable$$$$OnPlayableEnd$$() {
    this.$_runningCounter$--;
    1 > this.$_runningCounter$ && this.$DoEnd$();
  };
  $dvt$$17$$.$ParallelPlayable$.prototype.$DoEnd$ = function $$dvt$$17$$$$ParallelPlayable$$$$DoEnd$$() {
    this.$_onEnd$ && this.$_onEnd$.call(this.$_onEndObj$);
    this.$_animationRequestId$ = null;
  };
  $dvt$$17$$.$SequentialPlayable$ = function $$dvt$$17$$$$SequentialPlayable$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    arguments && 1 < arguments.length && arguments[1] instanceof Array ? $DvtSvgPatternFillUtils$$ = arguments[1] : ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ArrayUtils$.$argsToArray$(arguments), $DvtSvgPatternFillUtils$$.splice(0, 1));
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SequentialPlayable$, $dvt$$17$$.$Playable$);
  $dvt$$17$$.$SequentialPlayable$.prototype.Init = function $$dvt$$17$$$$SequentialPlayable$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$17$$.$SequentialPlayable$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_arPlayables$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : [];
    this.$_currIndex$ = -1;
    this.$_bStarted$ = !1;
  };
  $dvt$$17$$.$SequentialPlayable$.prototype.$getDuration$ = function $$dvt$$17$$$$SequentialPlayable$$$$getDuration$$() {
    for (var $DvtSvgShadowUtils$$ = 0, $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_arPlayables$.length;$DvtSvgPatternFillUtils$$++) {
      var $DvtSvgImageFillUtils$$ = this.$_arPlayables$[$DvtSvgPatternFillUtils$$];
      $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$Playable$ && ($DvtSvgShadowUtils$$ += $DvtSvgImageFillUtils$$.$getDuration$());
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$SequentialPlayable$.prototype.$initialize$ = function $$dvt$$17$$$$SequentialPlayable$$$$initialize$$() {
    0 < this.$_arPlayables$.length && this.$_arPlayables$[0] instanceof $dvt$$17$$.$Playable$ && this.$_arPlayables$[0].$initialize$();
  };
  $dvt$$17$$.$SequentialPlayable$.prototype.play = function $$dvt$$17$$$$SequentialPlayable$$$play$($DvtSvgShadowUtils$$) {
    this.$_arPlayables$ && 0 < this.$_arPlayables$.length ? $DvtSvgShadowUtils$$ ? this.$_play$() : (this.$initialize$(), this.$_animationRequestId$ = $dvt$$17$$.$Context$.requestAnimationFrame($dvt$$17$$.$Obj$.$createCallback$(this, this.$_play$))) : this.$_animationRequestId$ = $dvt$$17$$.$Context$.requestAnimationFrame($dvt$$17$$.$Obj$.$createCallback$(this, this.$DoEnd$));
  };
  $dvt$$17$$.$SequentialPlayable$.prototype.$_play$ = function $$dvt$$17$$$$SequentialPlayable$$$$_play$$() {
    if (this.$_bStarted$) {
      var $DvtSvgShadowUtils$$ = this.$_arPlayables$[this.$_currIndex$];
      $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$Playable$ && $DvtSvgShadowUtils$$.play(!0);
    } else {
      this.$_arPlayables$[0] instanceof $dvt$$17$$.$Playable$ && ($DvtSvgShadowUtils$$ = this.$_arPlayables$[0]);
      var $DvtSvgPatternFillUtils$$;
      this.$_arPlayables$[this.$_arPlayables$.length - 1] instanceof $dvt$$17$$.$Playable$ && ($DvtSvgPatternFillUtils$$ = this.$_arPlayables$[this.$_arPlayables$.length - 1]);
      for (var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < this.$_arPlayables$.length - 1;$DvtSvgGradientUtils$$++) {
        $DvtSvgImageFillUtils$$ = this.$_arPlayables$[$DvtSvgGradientUtils$$], $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$Playable$ && $dvt$$17$$.$Playable$.$appendOnEnd$($DvtSvgImageFillUtils$$, this.$DoSequenceStep$, this);
      }
      $DvtSvgPatternFillUtils$$ && $dvt$$17$$.$Playable$.$appendOnEnd$($DvtSvgPatternFillUtils$$, this.$DoEnd$, this);
      this.$_bStarted$ = !0;
      this.$_currIndex$ = 0;
      $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.play(!0);
      this.$_animationRequestId$ = null;
    }
  };
  $dvt$$17$$.$SequentialPlayable$.prototype.$DoSequenceStep$ = function $$dvt$$17$$$$SequentialPlayable$$$$DoSequenceStep$$() {
    var $DvtSvgShadowUtils$$ = this.$_arPlayables$[++this.$_currIndex$];
    $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$Playable$ ? $DvtSvgShadowUtils$$.play(!0) : this.$DoSequenceStep$();
  };
  $dvt$$17$$.$SequentialPlayable$.prototype.stop = function $$dvt$$17$$$$SequentialPlayable$$$stop$($DvtSvgShadowUtils$$) {
    if (this.$_animationRequestId$) {
      $dvt$$17$$.$Context$.cancelAnimationFrame(this.$_animationRequestId$), this.$DoEnd$();
    } else {
      if (this.$_arPlayables$) {
        for (var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = this.$_currIndex$;$DvtSvgImageFillUtils$$ < this.$_arPlayables$.length;$DvtSvgImageFillUtils$$++) {
          ($DvtSvgPatternFillUtils$$ = this.$_arPlayables$[$DvtSvgImageFillUtils$$]) && $DvtSvgPatternFillUtils$$ instanceof $dvt$$17$$.$Playable$ && $DvtSvgPatternFillUtils$$.stop($DvtSvgShadowUtils$$);
        }
      }
    }
  };
  $dvt$$17$$.$SequentialPlayable$.prototype.$DoEnd$ = function $$dvt$$17$$$$SequentialPlayable$$$$DoEnd$$() {
    this.$_onEnd$ && this.$_onEnd$.call(this.$_onEndObj$);
    this.$_animationRequestId$ = null;
  };
  $dvt$$17$$.$BlackBoxAnimationHandler$ = function $$dvt$$17$$$$BlackBoxAnimationHandler$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$BlackBoxAnimationHandler$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$BlackBoxAnimationHandler$.$ALPHA_FADE$ = "alphaFade";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_RIGHT$ = "conveyorFromRight";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_LEFT$ = "conveyorFromLeft";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$CUBE_TO_RIGHT$ = "cubeToRight";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$CUBE_TO_LEFT$ = "cubeToLeft";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$FLIP_RIGHT$ = "flipRight";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$FLIP_LEFT$ = "flipLeft";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_RIGHT$ = "transitionToRight";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_LEFT$ = "transitionToLeft";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$SLIDE_TO_RIGHT$ = "slideToRight";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$SLIDE_TO_LEFT$ = "slideToLeft";
  $dvt$$17$$.$BlackBoxAnimationHandler$.$ZOOM$ = "zoom";
  $dvt$$17$$.$BlackBoxAnimationHandler$.isSupported = function $$dvt$$17$$$$BlackBoxAnimationHandler$$isSupported$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$ALPHA_FADE$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_RIGHT$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CUBE_TO_RIGHT$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CUBE_TO_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$FLIP_RIGHT$ || 
    $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$FLIP_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_RIGHT$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$SLIDE_TO_RIGHT$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$SLIDE_TO_LEFT$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$ZOOM$;
  };
  $dvt$$17$$.$BlackBoxAnimationHandler$.$getInAnimation$ = function $$dvt$$17$$$$BlackBoxAnimationHandler$$$getInAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    return $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$ALPHA_FADE$ ? new $dvt$$17$$.$AnimFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_RIGHT$ ? new $DvtAnimConveyorIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $dvt$$17$$.$BaseAnimation$.$DIR_E$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_LEFT$ ? 
    new $DvtAnimConveyorIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $dvt$$17$$.$BaseAnimation$.$DIR_W$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CUBE_TO_RIGHT$ ? new $DvtAnimCubeIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $dvt$$17$$.$BaseAnimation$.$AXIS_Y$, $dvt$$17$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CUBE_TO_LEFT$ ? new $DvtAnimCubeIn$$($DvtSvgShadowUtils$$, 
    $DvtSvgImageFillUtils$$, $dvt$$17$$.$BaseAnimation$.$AXIS_Y$, $dvt$$17$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$FLIP_RIGHT$ ? new $DvtAnimFlipIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $dvt$$17$$.$BaseAnimation$.$AXIS_Y$, $dvt$$17$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$FLIP_LEFT$ ? new $DvtAnimFlipIn$$($DvtSvgShadowUtils$$, 
    $DvtSvgImageFillUtils$$, $dvt$$17$$.$BaseAnimation$.$AXIS_Y$, $dvt$$17$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_RIGHT$ ? new $dvt$$17$$.$AnimScaleFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$BaseAnimation$.$DIR_NW$, .5, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_LEFT$ ? new $dvt$$17$$.$AnimScaleFadeIn$($DvtSvgShadowUtils$$, 
    $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$BaseAnimation$.$DIR_NE$, .5, $DvtSvgFilterUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$SLIDE_TO_RIGHT$ ? ($dvt$$17$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgImageFillUtils$$, -$DvtSvgGradientUtils$$.$w$, 0), new $dvt$$17$$.$AnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, new $dvt$$17$$.$Point$($DvtSvgGradientUtils$$.$w$, 0), $DvtSvgFilterUtils$$)) : $DvtSvgPatternFillUtils$$ == 
    $dvt$$17$$.$BlackBoxAnimationHandler$.$SLIDE_TO_LEFT$ ? ($dvt$$17$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$.$w$, 0), new $dvt$$17$$.$AnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, new $dvt$$17$$.$Point$(-$DvtSvgGradientUtils$$.$w$, 0), $DvtSvgFilterUtils$$)) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$ZOOM$ ? new $dvt$$17$$.$AnimScaleFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, 
    $dvt$$17$$.$BaseAnimation$.$DIR_C$, .5, $DvtSvgFilterUtils$$) : null;
  };
  $dvt$$17$$.$BlackBoxAnimationHandler$.$getCombinedAnimation$ = function $$dvt$$17$$$$BlackBoxAnimationHandler$$$getCombinedAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    return $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$ALPHA_FADE$ ? new $DvtCombinedAnimFade$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_RIGHT$ ? new $DvtCombinedAnimConveyor$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$BaseAnimation$.$DIR_W$, $dvt$$17$$.$BaseAnimation$.$DIR_E$, $DvtSvgFilterContext$$) : 
    $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CONVEYOR_FROM_LEFT$ ? new $DvtCombinedAnimConveyor$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$BaseAnimation$.$DIR_E$, $dvt$$17$$.$BaseAnimation$.$DIR_W$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CUBE_TO_RIGHT$ ? new $dvt$$17$$.$CombinedAnimCube$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$BaseAnimation$.$AXIS_Y$, 
    $dvt$$17$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$CUBE_TO_LEFT$ ? new $dvt$$17$$.$CombinedAnimCube$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$BaseAnimation$.$AXIS_Y$, $dvt$$17$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$FLIP_RIGHT$ ? new $dvt$$17$$.$CombinedAnimFlip$($DvtSvgShadowUtils$$, 
    $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$BaseAnimation$.$AXIS_Y$, $dvt$$17$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$FLIP_LEFT$ ? new $dvt$$17$$.$CombinedAnimFlip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$BaseAnimation$.$AXIS_Y$, $dvt$$17$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_RIGHT$ ? 
    new $DvtCombinedAnimScaleFade$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$17$$.$BaseAnimation$.$DIR_SE$, $dvt$$17$$.$BaseAnimation$.$DIR_NW$, .5, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$TRANSITION_TO_LEFT$ ? new $DvtCombinedAnimScaleFade$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$17$$.$BaseAnimation$.$DIR_SW$, $dvt$$17$$.$BaseAnimation$.$DIR_NE$, 
    .5, $DvtSvgFilterContext$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$SLIDE_TO_RIGHT$ ? ($dvt$$17$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgGradientUtils$$, -$DvtSvgFilterUtils$$.$w$, 0), new $dvt$$17$$.$CombinedAnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, new $dvt$$17$$.$Point$($DvtSvgFilterUtils$$.$w$, 0), new $dvt$$17$$.$Point$($DvtSvgFilterUtils$$.$w$, 0), $DvtSvgFilterContext$$)) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$SLIDE_TO_LEFT$ ? 
    ($dvt$$17$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$.$w$, 0), new $dvt$$17$$.$CombinedAnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, new $dvt$$17$$.$Point$(-$DvtSvgFilterUtils$$.$w$, 0), new $dvt$$17$$.$Point$(-$DvtSvgFilterUtils$$.$w$, 0), $DvtSvgFilterContext$$)) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$BlackBoxAnimationHandler$.$ZOOM$ ? new $DvtCombinedAnimScaleFade$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, 
    $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $dvt$$17$$.$BaseAnimation$.$DIR_C$, $dvt$$17$$.$BaseAnimation$.$DIR_C$, .5, $DvtSvgFilterContext$$) : null;
  };
  $dvt$$17$$.$BlackBoxAnimationHandler$.$_offsetObjects$ = function $$dvt$$17$$$$BlackBoxAnimationHandler$$$_offsetObjects$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgShadowUtils$$.length) {
      for (var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
        $dvt$$17$$.$BlackBoxAnimationHandler$.$_offsetObjects$($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
      }
    } else {
      $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$setTranslate$($DvtSvgShadowUtils$$.$getTranslateX$() + $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.$getTranslateY$() + $DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$DataAnimationHandler$ = function $$dvt$$17$$$$DataAnimationHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$DataAnimationHandler$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$DataAnimationHandler$.$_OVERLAP_RATIO$ = .4;
  $dvt$$17$$.$DataAnimationHandler$.prototype.Init = function $$dvt$$17$$$$DataAnimationHandler$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_deleteContainer$ = $DvtSvgPatternFillUtils$$;
    this.$_playables$ = [];
  };
  $dvt$$17$$.$DataAnimationHandler$.prototype.$getCtx$ = function $$dvt$$17$$$$DataAnimationHandler$$$$getCtx$$() {
    return this.$_context$;
  };
  $dvt$$17$$.$DataAnimationHandler$.prototype.$constructAnimation$ = function $$dvt$$17$$$$DataAnimationHandler$$$$constructAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgPatternFillUtils$$ && !this.$_context$.$isOffscreen$()) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.slice(0);
      if ($DvtSvgShadowUtils$$) {
        for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
          var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
          if ($DvtSvgGradientUtils$$) {
            for (var $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.getId(), $DvtSvgFilterContext$$ = !1, $dvt$$17$$ = 0;$dvt$$17$$ < $DvtSvgPatternFillUtils$$.length;$dvt$$17$$++) {
              var $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$[$dvt$$17$$];
              if ($DvtSvgImplFactory$$) {
                var $DvtHtmlRichTooltipManager$$ = $DvtSvgImplFactory$$.getId();
                if ($DvtSvgFilterUtils$$ === $DvtHtmlRichTooltipManager$$ || $DvtSvgFilterUtils$$ && $DvtSvgFilterUtils$$.$equals$ && $DvtSvgFilterUtils$$.$equals$($DvtHtmlRichTooltipManager$$)) {
                  $DvtSvgImplFactory$$.$animateUpdate$(this, $DvtSvgGradientUtils$$);
                  $DvtSvgPatternFillUtils$$.splice($dvt$$17$$, 1);
                  $DvtSvgFilterContext$$ = !0;
                  break;
                }
              }
            }
            $DvtSvgFilterContext$$ || $DvtSvgGradientUtils$$.$animateDelete$(this, this.$_deleteContainer$);
          }
        }
      }
      for ($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] && $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].$animateInsert$(this);
      }
    }
  };
  $dvt$$17$$.$DataAnimationHandler$.prototype.add = function $$dvt$$17$$$$DataAnimationHandler$$$add$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      for ($DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = 0);this.$_playables$.length <= $DvtSvgPatternFillUtils$$;) {
        this.$_playables$.push([]);
      }
      this.$_playables$[$DvtSvgPatternFillUtils$$].push($DvtSvgShadowUtils$$);
    }
  };
  $dvt$$17$$.$DataAnimationHandler$.prototype.$getAnimation$ = function $$dvt$$17$$$$DataAnimationHandler$$$$getAnimation$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < this.$_playables$.length;$DvtSvgImageFillUtils$$++) {
      if (0 < this.$_playables$[$DvtSvgImageFillUtils$$].length) {
        var $DvtSvgGradientUtils$$ = new $dvt$$17$$.$ParallelPlayable$(this.$_context$, this.$_playables$[$DvtSvgImageFillUtils$$]);
        $DvtSvgPatternFillUtils$$.push($DvtSvgGradientUtils$$);
      }
    }
    if ($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$ = [];
      for ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        if (0 < $DvtSvgImageFillUtils$$) {
          var $DvtSvgFilterUtils$$ = new $dvt$$17$$.$CustomAnimation$(this.$_context$, null, $DvtSvgImageFillUtils$$);
          $DvtSvgShadowUtils$$.push(new $dvt$$17$$.$SequentialPlayable$(this.$_context$, [$DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$]]));
        } else {
          $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$]);
        }
        $DvtSvgImageFillUtils$$ += (1 - $dvt$$17$$.$DataAnimationHandler$.$_OVERLAP_RATIO$) * $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$].$getDuration$();
      }
      return new $dvt$$17$$.$ParallelPlayable$(this.$_context$, $DvtSvgShadowUtils$$);
    }
    return new $dvt$$17$$.$SequentialPlayable$(this.$_context$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Easing$ = function $$dvt$$17$$$$Easing$$() {
    this.Init();
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Easing$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Easing$.$linear$ = function $$dvt$$17$$$$Easing$$$linear$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Easing$.$quadraticIn$ = function $$dvt$$17$$$$Easing$$$quadraticIn$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Easing$.$PolyIn$($DvtSvgShadowUtils$$, 2);
  };
  $dvt$$17$$.$Easing$.$quadraticOut$ = function $$dvt$$17$$$$Easing$$$quadraticOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Easing$.$PolyOut$($DvtSvgShadowUtils$$, 2);
  };
  $dvt$$17$$.$Easing$.$quadraticInOut$ = function $$dvt$$17$$$$Easing$$$quadraticInOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Easing$.$PolyInOut$($DvtSvgShadowUtils$$, 2);
  };
  $dvt$$17$$.$Easing$.$cubicIn$ = function $$dvt$$17$$$$Easing$$$cubicIn$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Easing$.$PolyIn$($DvtSvgShadowUtils$$, 3);
  };
  $dvt$$17$$.$Easing$.$cubicOut$ = function $$dvt$$17$$$$Easing$$$cubicOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Easing$.$PolyOut$($DvtSvgShadowUtils$$, 3);
  };
  $dvt$$17$$.$Easing$.$cubicInOut$ = function $$dvt$$17$$$$Easing$$$cubicInOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Easing$.$PolyInOut$($DvtSvgShadowUtils$$, 3);
  };
  $dvt$$17$$.$Easing$.$backOut$ = function $$dvt$$17$$$$Easing$$$backOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = 1.70158);
    $DvtSvgShadowUtils$$ = 1 - $DvtSvgShadowUtils$$;
    return 1 - $DvtSvgShadowUtils$$ * $DvtSvgShadowUtils$$ * (($DvtSvgPatternFillUtils$$ + 1) * $DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Easing$.$backIn$ = function $$dvt$$17$$$$Easing$$$backIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = 1.70158);
    return $DvtSvgShadowUtils$$ * $DvtSvgShadowUtils$$ * (($DvtSvgPatternFillUtils$$ + 1) * $DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Easing$.$elasticIn$ = function $$dvt$$17$$$$Easing$$$elasticIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if (0 >= $DvtSvgShadowUtils$$ || 1 <= $DvtSvgShadowUtils$$) {
      return $DvtSvgShadowUtils$$;
    }
    $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = .45);
    var $DvtSvgGradientUtils$$;
    !$DvtSvgPatternFillUtils$$ || 1 > $DvtSvgPatternFillUtils$$ ? ($DvtSvgPatternFillUtils$$ = 1, $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ / 4) : $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ / (2 * Math.PI) * Math.asin(1 / $DvtSvgPatternFillUtils$$);
    return -($DvtSvgPatternFillUtils$$ * Math.pow(2, 10 * --$DvtSvgShadowUtils$$) * Math.sin(2 * ($DvtSvgShadowUtils$$ - $DvtSvgGradientUtils$$) * Math.PI / $DvtSvgImageFillUtils$$));
  };
  $dvt$$17$$.$Easing$.$elasticOut$ = function $$dvt$$17$$$$Easing$$$elasticOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return 1 - $dvt$$17$$.$Easing$.$elasticIn$(1 - $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Easing$.$PolyIn$ = function $$dvt$$17$$$$Easing$$$PolyIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 > $DvtSvgShadowUtils$$ ? 0 : 1 < $DvtSvgShadowUtils$$ ? 1 : Math.pow($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Easing$.$PolyOut$ = function $$dvt$$17$$$$Easing$$$PolyOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 > $DvtSvgShadowUtils$$ ? 0 : 1 < $DvtSvgShadowUtils$$ ? 1 : 1 - Math.pow(1 - $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Easing$.$PolyInOut$ = function $$dvt$$17$$$$Easing$$$PolyInOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 > $DvtSvgShadowUtils$$ ? 0 : 1 < $DvtSvgShadowUtils$$ ? 1 : .5 > $DvtSvgShadowUtils$$ ? .5 * Math.pow(2 * $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) : .5 * (2 - Math.pow(2 * (1 - $DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$));
  };
  $dvt$$17$$.$Easing$.prototype.Init = function $$dvt$$17$$$$Easing$$$Init$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtInterpolator$$, $dvt$$17$$.$Obj$);
  $DvtInterpolator$$.$addInterpolator$ = function $$DvtInterpolator$$$$addInterpolator$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtInterpolator$$.$_map$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$;
  };
  $DvtInterpolator$$.$removeInterpolator$ = function $$DvtInterpolator$$$$removeInterpolator$$($DvtSvgShadowUtils$$) {
    delete $DvtInterpolator$$.$_map$[$DvtSvgShadowUtils$$];
  };
  $DvtInterpolator$$.$interpolate$ = function $$DvtInterpolator$$$$interpolate$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    return ($DvtSvgPatternFillUtils$$ = $DvtInterpolator$$.$_getInterpolator$($DvtSvgPatternFillUtils$$)) ? $DvtSvgPatternFillUtils$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) : $DvtSvgGradientUtils$$;
  };
  $DvtInterpolator$$.$_getInterpolator$ = function $$DvtInterpolator$$$$_getInterpolator$$($DvtSvgShadowUtils$$) {
    return $DvtInterpolator$$.$_map$[$DvtSvgShadowUtils$$];
  };
  $DvtInterpolator$$.$InterpolateNumber$ = function $$DvtInterpolator$$$$InterpolateNumber$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $dvt$$17$$.Math.$interpolateNumber$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $DvtInterpolator$$.$InterpolateNumberArray$ = function $$DvtInterpolator$$$$InterpolateNumberArray$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.length;
    for (var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.length, $DvtSvgFilterContext$$ = [], $dvt$$17$$ = 0;$dvt$$17$$ < Math.max($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$);$dvt$$17$$++) {
      $DvtSvgFilterContext$$.push($DvtInterpolator$$.$InterpolateNumber$(0, $dvt$$17$$ < $DvtSvgShadowUtils$$ ? $DvtSvgPatternFillUtils$$[$dvt$$17$$] : $DvtSvgPatternFillUtils$$[$DvtSvgShadowUtils$$ - 1], $dvt$$17$$ < $DvtSvgFilterUtils$$ ? $DvtSvgImageFillUtils$$[$dvt$$17$$] : $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$ - 1], $DvtSvgGradientUtils$$));
    }
    return $DvtSvgFilterContext$$;
  };
  $DvtInterpolator$$.$InterpolateMatrix$ = function $$DvtInterpolator$$$$InterpolateMatrix$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return new $dvt$$17$$.$Matrix$($DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_a$, $DvtSvgImageFillUtils$$.$_a$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_b$, $DvtSvgImageFillUtils$$.$_b$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_c$, $DvtSvgImageFillUtils$$.$_c$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_d$, $DvtSvgImageFillUtils$$.$_d$, 
    $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_tx$, $DvtSvgImageFillUtils$$.$_tx$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$_ty$, $DvtSvgImageFillUtils$$.$_ty$, $DvtSvgGradientUtils$$));
  };
  $DvtInterpolator$$.$InterpolateColor$ = function $$DvtInterpolator$$$$InterpolateColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$interpolateColor$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $DvtInterpolator$$.$InterpolateColorArray$ = function $$DvtInterpolator$$$$InterpolateColorArray$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.length;
    for (var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.length, $DvtSvgFilterContext$$ = [], $dvt$$17$$ = 0;$dvt$$17$$ < Math.max($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$);$dvt$$17$$++) {
      $DvtSvgFilterContext$$.push($DvtInterpolator$$.$InterpolateColor$(0, $dvt$$17$$ < $DvtSvgShadowUtils$$ ? $DvtSvgPatternFillUtils$$[$dvt$$17$$] : $DvtSvgPatternFillUtils$$[$DvtSvgShadowUtils$$ - 1], $dvt$$17$$ < $DvtSvgFilterUtils$$ ? $DvtSvgImageFillUtils$$[$dvt$$17$$] : $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$ - 1], $DvtSvgGradientUtils$$));
    }
    return $DvtSvgFilterContext$$;
  };
  $DvtInterpolator$$.$InterpolateGrowPolyline$ = function $$DvtInterpolator$$$$InterpolateGrowPolyline$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if (0 === $DvtSvgGradientUtils$$) {
      return [$DvtSvgImageFillUtils$$[0], $DvtSvgImageFillUtils$$[1]];
    }
    if (1 === $DvtSvgGradientUtils$$) {
      return $DvtSvgImageFillUtils$$;
    }
    var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.length;
    $DvtSvgShadowUtils$$ = [$DvtSvgImageFillUtils$$[0], $DvtSvgImageFillUtils$$[1]];
    for (var $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$ * $DvtInterpolator$$.$CalcPolylineLength$($DvtSvgImageFillUtils$$), $dvt$$17$$ = 0, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = 2;$DvtHtmlRichTooltipManager$$ < $DvtSvgFilterUtils$$ - 1;$DvtHtmlRichTooltipManager$$ += 2) {
      $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$ - 2];
      $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$ - 1];
      var $DvtDomXmlParser$$ = $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$], $DvtCustomTooltipItem$$ = $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$ + 1];
      $DvtSvgImplFactory$$ = $DvtInterpolator$$.$CalcPolylineLength$([$DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$]);
      if ($dvt$$17$$ + $DvtSvgImplFactory$$ > $DvtSvgFilterContext$$) {
        $DvtSvgImageFillUtils$$ = ($DvtSvgFilterContext$$ - $dvt$$17$$) / $DvtSvgImplFactory$$;
        $DvtSvgFilterUtils$$ = $DvtCustomTooltipItem$$ - $DvtSvgPatternFillUtils$$;
        $DvtSvgShadowUtils$$.push($DvtSvgGradientUtils$$ + $DvtSvgImageFillUtils$$ * ($DvtDomXmlParser$$ - $DvtSvgGradientUtils$$));
        $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$ + $DvtSvgImageFillUtils$$ * $DvtSvgFilterUtils$$);
        break;
      } else {
        $dvt$$17$$ += $DvtSvgImplFactory$$, $DvtSvgShadowUtils$$.push($DvtDomXmlParser$$), $DvtSvgShadowUtils$$.push($DvtCustomTooltipItem$$);
      }
    }
    return $DvtSvgShadowUtils$$;
  };
  $DvtInterpolator$$.$InterpolateGrowPath$ = function $$DvtInterpolator$$$$InterpolateGrowPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if (0 === $DvtSvgGradientUtils$$) {
      return [$DvtSvgImageFillUtils$$[0], $DvtSvgImageFillUtils$$[1]];
    }
    if (1 === $DvtSvgGradientUtils$$) {
      return $DvtSvgImageFillUtils$$;
    }
    $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$.length;
    $DvtSvgShadowUtils$$ = [];
    for (var $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$ * $DvtInterpolator$$.$CalcPathLength$($DvtSvgImageFillUtils$$), $DvtSvgFilterContext$$ = 0, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$, $DvtContextMenuTooltipItem$$, $DvtPolygonalShape$$, $DvtCustomTooltipEventHandler$$, $DvtCustomTooltip$$, $DvtCircularShape$$ = 0;$DvtCircularShape$$ < $DvtSvgPatternFillUtils$$;$DvtCircularShape$$++) {
      $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtCircularShape$$];
      var $DvtPopupSource$$;
      switch($DvtSvgGradientUtils$$) {
        case "M":
          $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$];
          $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$];
          $DvtCustomTooltipEventHandler$$ = $DvtSvgImplFactory$$;
          $DvtCustomTooltip$$ = $DvtHtmlRichTooltipManager$$;
          $DvtPopupSource$$ = [$DvtCustomTooltipEventHandler$$, $DvtCustomTooltip$$, $DvtCustomTooltipEventHandler$$, $DvtCustomTooltip$$];
          break;
        case "L":
          $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$];
          $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$];
          $DvtPopupSource$$ = [$DvtCustomTooltipEventHandler$$, $DvtCustomTooltip$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$];
          break;
        case "Q":
          $DvtDomXmlParser$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$];
          $DvtCustomTooltipItem$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$];
          $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$];
          $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$];
          $DvtPopupSource$$ = [$DvtCustomTooltipEventHandler$$, $DvtCustomTooltip$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$];
          break;
        case "C":
          $DvtDomXmlParser$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$], $DvtCustomTooltipItem$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$], $DvtContextMenuTooltipItem$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$], $DvtPolygonalShape$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$], $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$], $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[++$DvtCircularShape$$], $DvtPopupSource$$ = [$DvtCustomTooltipEventHandler$$, 
          $DvtCustomTooltip$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$];
      }
      $dvt$$17$$ = $DvtInterpolator$$.$CalcPolylineLength$($DvtPopupSource$$);
      if ($DvtSvgFilterContext$$ + $dvt$$17$$ > $DvtSvgFilterUtils$$) {
        $DvtSvgImageFillUtils$$ = ($DvtSvgFilterUtils$$ - $DvtSvgFilterContext$$) / $dvt$$17$$;
        $DvtSvgShadowUtils$$.push($DvtSvgGradientUtils$$);
        switch($DvtSvgGradientUtils$$) {
          case "Q":
            $DvtSvgShadowUtils$$.push($DvtCustomTooltipEventHandler$$ + $DvtSvgImageFillUtils$$ * ($DvtDomXmlParser$$ - $DvtCustomTooltipEventHandler$$), $DvtCustomTooltip$$ + $DvtSvgImageFillUtils$$ * ($DvtCustomTooltipItem$$ - $DvtCustomTooltip$$));
            break;
          case "C":
            $DvtSvgShadowUtils$$.push($DvtCustomTooltipEventHandler$$ + $DvtSvgImageFillUtils$$ * ($DvtDomXmlParser$$ - $DvtCustomTooltipEventHandler$$), $DvtCustomTooltip$$ + $DvtSvgImageFillUtils$$ * ($DvtCustomTooltipItem$$ - $DvtCustomTooltip$$), $DvtCustomTooltipEventHandler$$ + $DvtSvgImageFillUtils$$ * ($DvtContextMenuTooltipItem$$ - $DvtCustomTooltipEventHandler$$), $DvtCustomTooltip$$ + $DvtSvgImageFillUtils$$ * ($DvtPolygonalShape$$ - $DvtCustomTooltip$$));
        }
        $DvtSvgShadowUtils$$.push($DvtCustomTooltipEventHandler$$ + $DvtSvgImageFillUtils$$ * ($DvtSvgImplFactory$$ - $DvtCustomTooltipEventHandler$$), $DvtCustomTooltip$$ + $DvtSvgImageFillUtils$$ * ($DvtHtmlRichTooltipManager$$ - $DvtCustomTooltip$$));
        break;
      } else {
        $DvtSvgFilterContext$$ += $dvt$$17$$;
        $DvtSvgShadowUtils$$.push($DvtSvgGradientUtils$$);
        switch($DvtSvgGradientUtils$$) {
          case "Q":
            $DvtSvgShadowUtils$$.push($DvtDomXmlParser$$, $DvtCustomTooltipItem$$);
            break;
          case "C":
            $DvtSvgShadowUtils$$.push($DvtDomXmlParser$$, $DvtCustomTooltipItem$$, $DvtContextMenuTooltipItem$$, $DvtPolygonalShape$$);
        }
        $DvtSvgShadowUtils$$.push($DvtSvgImplFactory$$);
        $DvtSvgShadowUtils$$.push($DvtHtmlRichTooltipManager$$);
      }
      $DvtCustomTooltipEventHandler$$ = $DvtSvgImplFactory$$;
      $DvtCustomTooltip$$ = $DvtHtmlRichTooltipManager$$;
    }
    return $DvtSvgShadowUtils$$;
  };
  $DvtInterpolator$$.$CalcPolylineLength$ = function $$DvtInterpolator$$$$CalcPolylineLength$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$ = 0;$dvt$$17$$ < $DvtSvgShadowUtils$$.length;$dvt$$17$$ += 2) {
      $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$dvt$$17$$], $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$dvt$$17$$ + 1], 0 < $dvt$$17$$ && ($DvtSvgFilterUtils$$ === $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$ += Math.abs($DvtSvgFilterContext$$ - $DvtSvgGradientUtils$$) : $DvtSvgFilterContext$$ === $DvtSvgGradientUtils$$ ? $DvtSvgPatternFillUtils$$ += Math.abs($DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$) : ($DvtSvgImageFillUtils$$ = Math.abs($DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$), 
      $DvtSvgGradientUtils$$ = Math.abs($DvtSvgFilterContext$$ - $DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$ += Math.sqrt($DvtSvgImageFillUtils$$ * $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$))), $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$;
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $DvtInterpolator$$.$CalcPathLength$ = function $$DvtInterpolator$$$$CalcPathLength$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgShadowUtils$$.length;) {
      $dvt$$17$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$];
      switch($dvt$$17$$) {
        case "M":
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 1];
          $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 2];
          $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$;
          $DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$;
          $DvtSvgImplFactory$$ += 3;
          continue;
        case "L":
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 1];
          $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 2];
          $DvtSvgImplFactory$$ += 3;
          break;
        case "Q":
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 3];
          $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 4];
          $DvtSvgImplFactory$$ += 5;
          break;
        case "C":
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 5], $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$ + 6], $DvtSvgImplFactory$$ += 7;
      }
      0 < $DvtSvgImplFactory$$ && ($DvtSvgFilterUtils$$ === $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$ += Math.abs($DvtSvgFilterContext$$ - $DvtSvgGradientUtils$$) : $DvtSvgFilterContext$$ === $DvtSvgGradientUtils$$ ? $DvtSvgPatternFillUtils$$ += Math.abs($DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$) : ($DvtSvgImageFillUtils$$ = Math.abs($DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$ = Math.abs($DvtSvgFilterContext$$ - $DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$ += 
      Math.sqrt($DvtSvgImageFillUtils$$ * $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$)));
      $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$;
      $DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$;
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $DvtInterpolator$$.$InterpolateRectangle$ = function $$DvtInterpolator$$$$InterpolateRectangle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return new $dvt$$17$$.$Rectangle$($DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.x, $DvtSvgImageFillUtils$$.x, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.y, $DvtSvgImageFillUtils$$.y, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$w$, $DvtSvgImageFillUtils$$.$w$, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$h$, $DvtSvgImageFillUtils$$.$h$, 
    $DvtSvgGradientUtils$$));
  };
  $DvtInterpolator$$.$InterpolatePoint$ = function $$DvtInterpolator$$$$InterpolatePoint$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return new $dvt$$17$$.$Point$($DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.x, $DvtSvgImageFillUtils$$.x, $DvtSvgGradientUtils$$), $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.y, $DvtSvgImageFillUtils$$.y, $DvtSvgGradientUtils$$));
  };
  $DvtInterpolator$$.$InterpolatePath$ = function $$DvtInterpolator$$$$InterpolatePath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.length;
    var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.length;
    if ($DvtSvgShadowUtils$$ != $DvtSvgFilterUtils$$) {
      return $DvtSvgImageFillUtils$$;
    }
    for (var $DvtSvgFilterContext$$ = [], $dvt$$17$$ = 0, $DvtSvgImplFactory$$ = 0;$dvt$$17$$ < $DvtSvgShadowUtils$$ && $DvtSvgImplFactory$$ < $DvtSvgFilterUtils$$;) {
      var $DvtHtmlRichTooltipManager$$ = $DvtSvgPatternFillUtils$$[$dvt$$17$$], $DvtDomXmlParser$$ = $DvtSvgImageFillUtils$$[$DvtSvgImplFactory$$], $DvtCustomTooltipItem$$ = !isNaN($DvtHtmlRichTooltipManager$$), $DvtContextMenuTooltipItem$$ = !isNaN($DvtDomXmlParser$$);
      $DvtCustomTooltipItem$$ || $DvtContextMenuTooltipItem$$ ? $DvtCustomTooltipItem$$ && $DvtContextMenuTooltipItem$$ && $DvtSvgFilterContext$$.push($DvtInterpolator$$.$InterpolateNumber$(0, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtSvgGradientUtils$$)) : $DvtHtmlRichTooltipManager$$ === $DvtDomXmlParser$$ && $DvtSvgFilterContext$$.push($DvtHtmlRichTooltipManager$$);
      $dvt$$17$$++;
      $DvtSvgImplFactory$$++;
    }
    return $DvtSvgFilterContext$$;
  };
  $DvtInterpolator$$.$InterpolateFill$ = function $$DvtInterpolator$$$$InterpolateFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $DvtSvgPatternFillUtils$$ instanceof $dvt$$17$$.$SolidFill$ && $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$SolidFill$ ? ($DvtSvgShadowUtils$$ = $DvtInterpolator$$.$InterpolateColor$(0, $DvtSvgPatternFillUtils$$.$getColor$(), $DvtSvgImageFillUtils$$.$getColor$(), $DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$ = $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$getAlpha$(), $DvtSvgImageFillUtils$$.$getAlpha$(), $DvtSvgGradientUtils$$), new $dvt$$17$$.$SolidFill$($DvtSvgShadowUtils$$, 
    $DvtSvgPatternFillUtils$$)) : $DvtSvgImageFillUtils$$;
  };
  $DvtInterpolator$$.$InterpolateStroke$ = function $$DvtInterpolator$$$$InterpolateStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if ($DvtSvgPatternFillUtils$$ instanceof $dvt$$17$$.$SolidStroke$ && $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$SolidStroke$) {
      $DvtSvgShadowUtils$$ = $DvtInterpolator$$.$InterpolateColor$(0, $DvtSvgPatternFillUtils$$.$getColor$(), $DvtSvgImageFillUtils$$.$getColor$(), $DvtSvgGradientUtils$$);
      var $DvtSvgFilterUtils$$ = $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.$getAlpha$(), $DvtSvgImageFillUtils$$.$getAlpha$(), $DvtSvgGradientUtils$$);
      $DvtSvgPatternFillUtils$$ = $DvtInterpolator$$.$InterpolateNumber$(0, $DvtSvgPatternFillUtils$$.getWidth(), $DvtSvgImageFillUtils$$.getWidth(), $DvtSvgGradientUtils$$);
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.clone();
      $DvtSvgImageFillUtils$$.$setColor$($DvtSvgShadowUtils$$);
      $DvtSvgImageFillUtils$$.$setAlpha$($DvtSvgFilterUtils$$);
      $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgPatternFillUtils$$);
    }
    return $DvtSvgImageFillUtils$$;
  };
  $DvtInterpolator$$.$InterpolatePolyline$ = function $$DvtInterpolator$$$$InterpolatePolyline$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.length, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.length;
    $DvtSvgShadowUtils$$ = [];
    for (var $dvt$$17$$ = 0;$dvt$$17$$ < Math.max($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);$dvt$$17$$++) {
      var $DvtSvgImplFactory$$ = 2;
      1 == $dvt$$17$$ % 2 && ($DvtSvgImplFactory$$ = 1);
      $DvtSvgShadowUtils$$.push($DvtInterpolator$$.$InterpolateNumber$(0, $dvt$$17$$ < $DvtSvgFilterUtils$$ ? $DvtSvgPatternFillUtils$$[$dvt$$17$$] : $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$ - $DvtSvgImplFactory$$], $dvt$$17$$ < $DvtSvgFilterContext$$ ? $DvtSvgImageFillUtils$$[$dvt$$17$$] : $DvtSvgImageFillUtils$$[$DvtSvgFilterContext$$ - $DvtSvgImplFactory$$], $DvtSvgGradientUtils$$));
    }
    if ($DvtSvgFilterContext$$ < $DvtSvgFilterUtils$$) {
      for ($dvt$$17$$ = $DvtSvgShadowUtils$$.length, $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$dvt$$17$$ - 2], $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$dvt$$17$$ - 1], $dvt$$17$$ -= 4;0 <= $dvt$$17$$;$dvt$$17$$ -= 2) {
        if ($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$dvt$$17$$ + 1], $DvtSvgShadowUtils$$[$dvt$$17$$] == $DvtSvgPatternFillUtils$$ && $DvtSvgGradientUtils$$ == $DvtSvgImageFillUtils$$) {
          $DvtSvgShadowUtils$$.splice($dvt$$17$$, 2);
        } else {
          break;
        }
      }
    }
    return $DvtSvgShadowUtils$$;
  };
  $DvtInterpolator$$.prototype.Init = function $$DvtInterpolator$$$$Init$() {
  };
  $DvtInterpolator$$.$_map$ = {};
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_NUMBER$] = $DvtInterpolator$$.$InterpolateNumber$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_MATRIX$] = $DvtInterpolator$$.$InterpolateMatrix$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_NUMBER_ARRAY$] = $DvtInterpolator$$.$InterpolateNumberArray$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_COLOR$] = $DvtInterpolator$$.$InterpolateColor$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_COLOR_ARRAY$] = $DvtInterpolator$$.$InterpolateColorArray$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_GROW_POLYLINE$] = $DvtInterpolator$$.$InterpolateGrowPolyline$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_RECTANGLE$] = $DvtInterpolator$$.$InterpolateRectangle$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_POINT$] = $DvtInterpolator$$.$InterpolatePoint$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_PATH$] = $DvtInterpolator$$.$InterpolatePath$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_GROW_PATH$] = $DvtInterpolator$$.$InterpolateGrowPath$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_FILL$] = $DvtInterpolator$$.$InterpolateFill$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_STROKE$] = $DvtInterpolator$$.$InterpolateStroke$;
  $DvtInterpolator$$.$_map$[$dvt$$17$$.$Animator$.$TYPE_POLYLINE$] = $DvtInterpolator$$.$InterpolatePolyline$;
  $dvt$$17$$.$Timer$ = function $$dvt$$17$$$$Timer$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Timer$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Timer$.prototype.Init = function $$dvt$$17$$$$Timer$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_interval$ = $DvtSvgPatternFillUtils$$;
    this.$_callback$ = $DvtSvgImageFillUtils$$;
    this.$_callbackObj$ = $DvtSvgGradientUtils$$;
    this.$_repeatCount$ = $DvtSvgFilterUtils$$;
    this.$_bRunning$ = !1;
    this.$_numIterations$ = 0;
  };
  $dvt$$17$$.$Timer$.prototype.start = function $$dvt$$17$$$$Timer$$$start$() {
    this.$_bRunning$ || (this.$_bRunning$ = !0, this.$StartTimer$());
  };
  $dvt$$17$$.$Timer$.prototype.stop = function $$dvt$$17$$$$Timer$$$stop$() {
    this.$_bRunning$ && (this.$_bRunning$ = !1, this.$StopTimer$());
  };
  $dvt$$17$$.$Timer$.prototype.reset = function $$dvt$$17$$$$Timer$$$reset$() {
    this.$_bRunning$ && this.stop();
    this.$_numIterations$ = 0;
  };
  $dvt$$17$$.$Timer$.prototype.$isRunning$ = function $$dvt$$17$$$$Timer$$$$isRunning$$() {
    return this.$_bRunning$;
  };
  $dvt$$17$$.$Timer$.prototype.$HandleTimer$ = function $$dvt$$17$$$$Timer$$$$HandleTimer$$() {
    this.$_callback$ && (this.$_callback$.call(this.$_callbackObj$), this.$_repeatCount$ && (this.$_numIterations$++, this.$_numIterations$ >= this.$_repeatCount$ && this.stop()));
  };
  $dvt$$17$$.$Timer$.prototype.setInterval = function $$dvt$$17$$$$Timer$$$setInterval$($DvtSvgShadowUtils$$) {
    0 > $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = 0);
    var $DvtSvgPatternFillUtils$$ = this.$_bRunning$;
    $DvtSvgPatternFillUtils$$ && this.stop();
    this.$_interval$ = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$ && this.start();
  };
  $dvt$$17$$.$Timer$.prototype.$StartTimer$ = function $$dvt$$17$$$$Timer$$$$StartTimer$$() {
    var $DvtSvgShadowUtils$$ = this, $DvtSvgPatternFillUtils$$ = this.$HandleTimer$;
    this.$_timerId$ = window.setInterval(function() {
      $DvtSvgPatternFillUtils$$.call($DvtSvgShadowUtils$$);
    }, this.$_interval$);
  };
  $dvt$$17$$.$Timer$.prototype.$StopTimer$ = function $$dvt$$17$$$$Timer$$$$StopTimer$$() {
    this.$_timerId$ && (window.clearInterval(this.$_timerId$), this.$_timerId$ = null);
  };
  $dvt$$17$$.$BaseAnimation$ = function $$dvt$$17$$$$BaseAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$BaseAnimation$, $dvt$$17$$.$Playable$);
  $dvt$$17$$.$BaseAnimation$.$EASING_LINEAR$ = 1;
  $dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_IN_OUT$ = 2;
  $dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_IN$ = 3;
  $dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_OUT$ = 4;
  $dvt$$17$$.$BaseAnimation$.$EASING_QUADRATIC_IN_OUT$ = 5;
  $dvt$$17$$.$BaseAnimation$.$EASING_QUADRATIC_IN$ = 6;
  $dvt$$17$$.$BaseAnimation$.$EASING_QUADRATIC_OUT$ = 7;
  $dvt$$17$$.$BaseAnimation$.$EASING_BOUNCE_IN$ = 8;
  $dvt$$17$$.$BaseAnimation$.$EASING_BOUNCE_OUT$ = 9;
  $dvt$$17$$.$BaseAnimation$.$EASING_ELASTIC_IN$ = 10;
  $dvt$$17$$.$BaseAnimation$.$EASING_ELASTIC_OUT$ = 11;
  $dvt$$17$$.$BaseAnimation$.$DIR_C$ = 1;
  $dvt$$17$$.$BaseAnimation$.$DIR_N$ = 2;
  $dvt$$17$$.$BaseAnimation$.$DIR_NE$ = 3;
  $dvt$$17$$.$BaseAnimation$.$DIR_E$ = 4;
  $dvt$$17$$.$BaseAnimation$.$DIR_SE$ = 5;
  $dvt$$17$$.$BaseAnimation$.$DIR_S$ = 6;
  $dvt$$17$$.$BaseAnimation$.$DIR_SW$ = 7;
  $dvt$$17$$.$BaseAnimation$.$DIR_W$ = 8;
  $dvt$$17$$.$BaseAnimation$.$DIR_NW$ = 9;
  $dvt$$17$$.$BaseAnimation$.$AXIS_X$ = 1;
  $dvt$$17$$.$BaseAnimation$.$AXIS_Y$ = 2;
  $dvt$$17$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$ = 1;
  $dvt$$17$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$ = 2;
  $dvt$$17$$.$BaseAnimation$.$GetEasingFunction$ = function $$dvt$$17$$$$BaseAnimation$$$GetEasingFunction$$($DvtSvgShadowUtils$$) {
    switch($DvtSvgShadowUtils$$) {
      case $dvt$$17$$.$BaseAnimation$.$EASING_LINEAR$:
        return $dvt$$17$$.$Easing$.$linear$;
      case $dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_IN$:
        return $dvt$$17$$.$Easing$.$cubicIn$;
      case $dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_OUT$:
        return $dvt$$17$$.$Easing$.$cubicOut$;
      case $dvt$$17$$.$BaseAnimation$.$EASING_QUADRATIC_IN_OUT$:
        return $dvt$$17$$.$Easing$.$quadraticInOut$;
      case $dvt$$17$$.$BaseAnimation$.$EASING_QUADRATIC_IN$:
        return $dvt$$17$$.$Easing$.$quadraticIn$;
      case $dvt$$17$$.$BaseAnimation$.$EASING_QUADRATIC_OUT$:
        return $dvt$$17$$.$Easing$.$quadraticOut$;
      case $dvt$$17$$.$BaseAnimation$.$EASING_BOUNCE_IN$:
        return $dvt$$17$$.$Easing$.$backIn$;
      case $dvt$$17$$.$BaseAnimation$.$EASING_BOUNCE_OUT$:
        return $dvt$$17$$.$Easing$.$backOut$;
      case $dvt$$17$$.$BaseAnimation$.$EASING_ELASTIC_IN$:
        return $dvt$$17$$.$Easing$.$elasticIn$;
      case $dvt$$17$$.$BaseAnimation$.$EASING_ELASTIC_OUT$:
        return $dvt$$17$$.$Easing$.$elasticOut$;
      default:
        return $dvt$$17$$.$Easing$.$cubicInOut$;
    }
  };
  $dvt$$17$$.$BaseAnimation$.$GetCompassPoint$ = function $$dvt$$17$$$$BaseAnimation$$$GetCompassPoint$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    switch($DvtSvgPatternFillUtils$$) {
      case $dvt$$17$$.$BaseAnimation$.$DIR_N$:
        return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x + .5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y);
      case $dvt$$17$$.$BaseAnimation$.$DIR_NE$:
        return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y);
      case $dvt$$17$$.$BaseAnimation$.$DIR_E$:
        return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + .5 * $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_SE$:
        return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_S$:
        return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x + .5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_SW$:
        return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_W$:
        return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y + .5 * $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_NW$:
        return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y);
      default:
        return new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x + .5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + .5 * $DvtSvgShadowUtils$$.$h$);
    }
  };
  $dvt$$17$$.$BaseAnimation$.$GetAlignCompassPoint$ = function $$dvt$$17$$$$BaseAnimation$$$GetAlignCompassPoint$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$BaseAnimation$.$GetCompassPoint$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    switch($DvtSvgImageFillUtils$$) {
      case $dvt$$17$$.$BaseAnimation$.$DIR_N$:
        return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.x - .5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y);
      case $dvt$$17$$.$BaseAnimation$.$DIR_NE$:
        return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.x - $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y);
      case $dvt$$17$$.$BaseAnimation$.$DIR_E$:
        return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.x - $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y - .5 * $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_SE$:
        return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.x - $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y - $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_S$:
        return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.x - .5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y - $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_SW$:
        return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y - $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_W$:
        return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y - .5 * $DvtSvgShadowUtils$$.$h$);
      case $dvt$$17$$.$BaseAnimation$.$DIR_NW$:
        return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y);
      default:
        return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.x - .5 * $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.y - .5 * $DvtSvgShadowUtils$$.$h$);
    }
  };
  $dvt$$17$$.$BaseAnimation$.prototype.Init = function $$dvt$$17$$$$BaseAnimation$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$17$$.$BaseAnimation$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_arObjects$ = $DvtSvgPatternFillUtils$$ instanceof Array ? $DvtSvgPatternFillUtils$$ : [$DvtSvgPatternFillUtils$$];
    this.$_duration$ = $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : .5;
    this.$_delay$ = $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : 0;
    this.$_easing$ = $dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_IN_OUT$;
    this.$_bSaveAndRestoreOriginalMatrices$ = this.$_bInitialized$ = !1;
    this.$_origMatrixArray$ = null;
    this.$_bHideObjectsOnEnd$ = !1;
    this.$CreateAnimator$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$isRunning$ = function $$dvt$$17$$$$BaseAnimation$$$$isRunning$$() {
    return this.$_animator$ ? this.$_animator$.$isRunning$() : !1;
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$initialize$ = function $$dvt$$17$$$$BaseAnimation$$$$initialize$$() {
    this.$_bInitialized$ || (this.$_initializeEndStates$(this.$_arObjects$), this.$_initializeStartStates$(this.$_arObjects$), this.$InitializePlay$(), this.$_bInitialized$ = !0);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.play = function $$dvt$$17$$$$BaseAnimation$$$play$($DvtSvgShadowUtils$$) {
    this.$initialize$();
    this.$_animator$ && this.$_animator$.play($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.stop = function $$dvt$$17$$$$BaseAnimation$$$stop$($DvtSvgShadowUtils$$) {
    this.$_animator$ && this.$_animator$.stop($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$getDuration$ = function $$dvt$$17$$$$BaseAnimation$$$$getDuration$$() {
    return this.$_duration$;
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$setDuration$ = function $$dvt$$17$$$$BaseAnimation$$$$setDuration$$($DvtSvgShadowUtils$$) {
    this.$_duration$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0;
    this.$_animator$ && this.$_animator$.$setDuration$(this.$_duration$);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$setDelay$ = function $$dvt$$17$$$$BaseAnimation$$$$setDelay$$($DvtSvgShadowUtils$$) {
    this.$_delay$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0;
    this.$_animator$ && this.$_animator$.$setDelay$(this.$_delay$);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$setEasing$ = function $$dvt$$17$$$$BaseAnimation$$$$setEasing$$($DvtSvgShadowUtils$$) {
    this.$_easing$ = $DvtSvgShadowUtils$$;
    this.$_animator$ && this.$_animator$.$setEasing$($dvt$$17$$.$BaseAnimation$.$GetEasingFunction$(this.$_easing$));
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$CreateAnimator$ = function $$dvt$$17$$$$BaseAnimation$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    this.$_animator$ = new $dvt$$17$$.$Animator$($DvtSvgShadowUtils$$, this.$_duration$, this.$_delay$, $dvt$$17$$.$BaseAnimation$.$GetEasingFunction$(this.$_easing$));
    this.$_animator$.$setOnEnd$(this.$OnAnimEnd$, this);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$OnAnimEnd$ = function $$dvt$$17$$$$BaseAnimation$$$$OnAnimEnd$$() {
    this.$_bHideObjectsOnEnd$ && this.$HideObjects$();
    this.$_bSaveAndRestoreOriginalMatrices$ && this.$RestoreOriginalMatrices$();
    this.$_onEnd$ && this.$_onEnd$.call(this.$_onEndObj$);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$InitializePlay$ = function $$dvt$$17$$$$BaseAnimation$$$$InitializePlay$$() {
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$_initializeStartStates$ = function $$dvt$$17$$$$BaseAnimation$$$$_initializeStartStates$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      for (var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        if ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]) {
          this.$_bSaveAndRestoreOriginalMatrices$ && (this.$_origMatrixArray$ || (this.$_origMatrixArray$ = []), this.$_origMatrixArray$.push($DvtSvgPatternFillUtils$$.$getMatrix$())), this.$InitStartState$($DvtSvgPatternFillUtils$$);
        }
      }
    }
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$_initializeEndStates$ = function $$dvt$$17$$$$BaseAnimation$$$$_initializeEndStates$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      for (var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]) && this.$InitEndState$($DvtSvgPatternFillUtils$$);
      }
    }
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$InitStartState$ = function $$dvt$$17$$$$BaseAnimation$$$$InitStartState$$() {
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$InitEndState$ = function $$dvt$$17$$$$BaseAnimation$$$$InitEndState$$() {
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$ShowObjects$ = function $$dvt$$17$$$$BaseAnimation$$$$ShowObjects$$() {
    this.$SetObjectsVisible$(!0);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$HideObjects$ = function $$dvt$$17$$$$BaseAnimation$$$$HideObjects$$() {
    this.$SetObjectsVisible$(!1);
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$SetObjectsVisible$ = function $$dvt$$17$$$$BaseAnimation$$$$SetObjectsVisible$$($DvtSvgShadowUtils$$) {
    if (this.$_arObjects$) {
      for (var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = this.$_arObjects$.length - 1;0 <= $DvtSvgImageFillUtils$$;$DvtSvgImageFillUtils$$--) {
        ($DvtSvgPatternFillUtils$$ = this.$_arObjects$[$DvtSvgImageFillUtils$$]) && $DvtSvgPatternFillUtils$$.$setVisible$($DvtSvgShadowUtils$$);
      }
    }
  };
  $dvt$$17$$.$BaseAnimation$.prototype.$RestoreOriginalMatrices$ = function $$dvt$$17$$$$BaseAnimation$$$$RestoreOriginalMatrices$$() {
    if (this.$_arObjects$) {
      for (var $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ = this.$_arObjects$.length - 1;0 <= $DvtSvgPatternFillUtils$$;$DvtSvgPatternFillUtils$$--) {
        ($DvtSvgShadowUtils$$ = this.$_arObjects$[$DvtSvgPatternFillUtils$$]) && this.$_origMatrixArray$ && $DvtSvgShadowUtils$$.$setMatrix$(this.$_origMatrixArray$.pop());
      }
    }
  };
  $dvt$$17$$.$CustomAnimation$ = function $$dvt$$17$$$$CustomAnimation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$CustomAnimation$, $dvt$$17$$.$BaseAnimation$);
  $dvt$$17$$.$Obj$.$createSubclass$($DvtAnimConveyorIn$$, $dvt$$17$$.$BaseAnimation$);
  $DvtAnimConveyorIn$$.prototype.Init = function $$DvtAnimConveyorIn$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtAnimConveyorIn$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_direction$ = $DvtSvgImageFillUtils$$;
    this.$_SCALE$ = .2;
    this.$_SKEW_ANGLE$ = Math.PI / 12;
    this.$_bSaveAndRestoreOriginalMatrices$ = !0;
  };
  $DvtAnimConveyorIn$$.prototype.$CreateAnimator$ = function $$DvtAnimConveyorIn$$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorIn$$.$superclass$.$CreateAnimator$.call(this, $DvtSvgShadowUtils$$);
    this.$setEasing$($dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_IN$);
    this.$_animator$.$setDuration$(this.$getDuration$() / 2);
    this.$_animator$.$setOnEnd$(this.$PlayEndAnim$, this);
    this.$_endAnim$ = new $dvt$$17$$.$Animator$($DvtSvgShadowUtils$$, this.$getDuration$() / 2, 0, $dvt$$17$$.$BaseAnimation$.$GetEasingFunction$($dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_OUT$));
    this.$_endAnim$.$setOnEnd$(this.$OnAnimEnd$, this);
  };
  $DvtAnimConveyorIn$$.prototype.$InitializePlay$ = function $$DvtAnimConveyorIn$$$$$InitializePlay$$() {
    $DvtAnimConveyorIn$$.$superclass$.$InitializePlay$.call(this);
    this.$ShowObjects$();
  };
  $DvtAnimConveyorIn$$.prototype.$InitStartState$ = function $$DvtAnimConveyorIn$$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorIn$$.$superclass$.$InitStartState$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$setVisible$(!1);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgImageFillUtils$$ = this.$GetConcatenatedRotationMatrix$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = new $dvt$$17$$.$Matrix$;
    this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_E$ ? this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ ? $DvtSvgGradientUtils$$.translate($DvtSvgPatternFillUtils$$.$w$, 0) : $DvtSvgGradientUtils$$.translate(-$DvtSvgPatternFillUtils$$.$w$, 0) : this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_N$ ? $DvtSvgGradientUtils$$.translate(0, $DvtSvgPatternFillUtils$$.$h$) : $DvtSvgGradientUtils$$.translate(0, -$DvtSvgPatternFillUtils$$.$h$);
    $DvtSvgGradientUtils$$.concat($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$.$setMatrix$($DvtSvgGradientUtils$$);
    $DvtSvgShadowUtils$$.$setAlpha$(0);
  };
  $DvtAnimConveyorIn$$.prototype.$InitEndState$ = function $$DvtAnimConveyorIn$$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorIn$$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgPatternFillUtils$$ = this.$GetConcatenatedRotationMatrix$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgPatternFillUtils$$);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 1);
    $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getMatrix$();
    this.$_endAnim$.$addProp$($dvt$$17$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgPatternFillUtils$$);
  };
  $DvtAnimConveyorIn$$.prototype.$PlayEndAnim$ = function $$DvtAnimConveyorIn$$$$$PlayEndAnim$$() {
    this.$_endAnim$.play(!0);
  };
  $DvtAnimConveyorIn$$.prototype.$GetConcatenatedRotationMatrix$ = function $$DvtAnimConveyorIn$$$$$GetConcatenatedRotationMatrix$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_SCALE$, $DvtSvgGradientUtils$$ = 1 - $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$w$ * $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$h$ * $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ = this.$_SKEW_ANGLE$;
    if (this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_S$) {
      $DvtSvgFilterContext$$ = -$DvtSvgFilterContext$$;
    }
    var $DvtSvgImplFactory$$ = Math.tan($DvtSvgFilterContext$$), $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$.$getMatrix$(), $DvtDomXmlParser$$ = new $dvt$$17$$.$Matrix$;
    this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_E$ ? ($DvtDomXmlParser$$.$skew$(0, $DvtSvgFilterContext$$), $DvtDomXmlParser$$.scale($DvtSvgImageFillUtils$$, 1), this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ ? $DvtDomXmlParser$$.translate(0, 0) : $DvtDomXmlParser$$.translate($DvtSvgFilterUtils$$, -$DvtSvgPatternFillUtils$$.$w$ * $DvtSvgImplFactory$$)) : ($DvtDomXmlParser$$.$skew$($DvtSvgFilterContext$$, 0), $DvtDomXmlParser$$.scale(1, 
    $DvtSvgImageFillUtils$$), this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_N$ ? $DvtDomXmlParser$$.translate(0, 0) : $DvtDomXmlParser$$.translate(-$DvtSvgPatternFillUtils$$.$h$ * $DvtSvgImplFactory$$, $DvtSvgGradientUtils$$));
    $DvtDomXmlParser$$.concat($DvtHtmlRichTooltipManager$$);
    return $DvtDomXmlParser$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtAnimConveyorOut$$, $dvt$$17$$.$BaseAnimation$);
  $DvtAnimConveyorOut$$.prototype.Init = function $$DvtAnimConveyorOut$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtAnimConveyorOut$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_direction$ = $DvtSvgImageFillUtils$$;
    this.$_bHideObjectsOnEnd$ = this.$_bSaveAndRestoreOriginalMatrices$ = !0;
  };
  $DvtAnimConveyorOut$$.prototype.$CreateAnimator$ = function $$DvtAnimConveyorOut$$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorOut$$.$superclass$.$CreateAnimator$.call(this, $DvtSvgShadowUtils$$);
    this.$setEasing$($dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_IN$);
    this.$_animator$.$setDuration$(this.$getDuration$() / 2);
    this.$_animator$.$setOnEnd$(this.$PlayEndAnim$, this);
    this.$_endAnim$ = new $dvt$$17$$.$Animator$($DvtSvgShadowUtils$$, this.$getDuration$() / 2, 0, $dvt$$17$$.$BaseAnimation$.$GetEasingFunction$($dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_OUT$));
    this.$_endAnim$.$setOnEnd$(this.$OnAnimEnd$, this);
  };
  $DvtAnimConveyorOut$$.prototype.$InitEndState$ = function $$DvtAnimConveyorOut$$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $DvtAnimConveyorOut$$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgImageFillUtils$$ = .8 * $DvtSvgPatternFillUtils$$.$w$, $DvtSvgGradientUtils$$ = .8 * $DvtSvgPatternFillUtils$$.$h$, $DvtSvgFilterUtils$$ = Math.PI / 12;
    if (this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_S$) {
      $DvtSvgFilterUtils$$ = -$DvtSvgFilterUtils$$;
    }
    var $DvtSvgFilterContext$$ = Math.tan($DvtSvgFilterUtils$$), $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$getMatrix$(), $DvtHtmlRichTooltipManager$$ = new $dvt$$17$$.$Matrix$;
    this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_E$ ? ($DvtHtmlRichTooltipManager$$.$skew$(0, $DvtSvgFilterUtils$$), $DvtHtmlRichTooltipManager$$.scale(.2, 1), this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ ? $DvtHtmlRichTooltipManager$$.translate(0, 0) : $DvtHtmlRichTooltipManager$$.translate($DvtSvgImageFillUtils$$, -$DvtSvgPatternFillUtils$$.$w$ * $DvtSvgFilterContext$$)) : ($DvtHtmlRichTooltipManager$$.$skew$($DvtSvgFilterUtils$$, 
    0), $DvtHtmlRichTooltipManager$$.scale(1, .2), this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_N$ ? $DvtHtmlRichTooltipManager$$.translate(0, 0) : $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgPatternFillUtils$$.$h$ * $DvtSvgFilterContext$$, $DvtSvgGradientUtils$$));
    $DvtHtmlRichTooltipManager$$.concat($DvtSvgImplFactory$$);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtHtmlRichTooltipManager$$);
    $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$Matrix$;
    this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ || this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_E$ ? this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_W$ ? $DvtSvgImageFillUtils$$.translate($DvtSvgPatternFillUtils$$.$w$, 0) : $DvtSvgImageFillUtils$$.translate(-$DvtSvgPatternFillUtils$$.$w$, 0) : this.$_direction$ === $dvt$$17$$.$BaseAnimation$.$DIR_N$ ? $DvtSvgImageFillUtils$$.translate(0, $DvtSvgPatternFillUtils$$.$h$) : $DvtSvgImageFillUtils$$.translate(0, -$DvtSvgPatternFillUtils$$.$h$);
    $DvtSvgImageFillUtils$$.concat($DvtHtmlRichTooltipManager$$);
    this.$_endAnim$.$addProp$($dvt$$17$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgImageFillUtils$$);
    this.$_endAnim$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 0);
  };
  $DvtAnimConveyorOut$$.prototype.$PlayEndAnim$ = function $$DvtAnimConveyorOut$$$$$PlayEndAnim$$() {
    this.$_endAnim$.play(!0);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtAnimFlipIn$$, $dvt$$17$$.$BaseAnimation$);
  $DvtAnimFlipIn$$.prototype.Init = function $$DvtAnimFlipIn$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtAnimFlipIn$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    this.$_axis$ = $DvtSvgImageFillUtils$$;
    this.$_rotationDir$ = $DvtSvgGradientUtils$$;
    this.$_bSaveAndRestoreOriginalMatrices$ = !0;
    this.$_cubeEffect$ = !1;
  };
  $DvtAnimFlipIn$$.prototype.$InitStartState$ = function $$DvtAnimFlipIn$$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    $DvtAnimFlipIn$$.$superclass$.$InitStartState$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$setVisible$(!1);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$w$ / 2, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$h$ / 2, $DvtSvgFilterUtils$$ = Math.PI / 6;
    this.$_rotationDir$ === $dvt$$17$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$ && ($DvtSvgFilterUtils$$ = -$DvtSvgFilterUtils$$);
    var $DvtSvgFilterContext$$ = Math.tan($DvtSvgFilterUtils$$), $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$getMatrix$(), $DvtHtmlRichTooltipManager$$ = new $dvt$$17$$.$Matrix$;
    this.$_axis$ === $dvt$$17$$.$BaseAnimation$.$AXIS_Y$ ? ($DvtHtmlRichTooltipManager$$.$skew$(0, $DvtSvgFilterUtils$$), $DvtHtmlRichTooltipManager$$.scale(0, 1), this.$_cubeEffect$ ? this.$_rotationDir$ === $dvt$$17$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$ ? $DvtHtmlRichTooltipManager$$.translate($DvtSvgPatternFillUtils$$.$w$, 0) : $DvtHtmlRichTooltipManager$$.translate(0, -$DvtSvgPatternFillUtils$$.$w$ * $DvtSvgFilterContext$$) : $DvtHtmlRichTooltipManager$$.translate($DvtSvgImageFillUtils$$, 
    -$DvtSvgImageFillUtils$$ * $DvtSvgFilterContext$$)) : ($DvtHtmlRichTooltipManager$$.$skew$($DvtSvgFilterUtils$$, 0), $DvtHtmlRichTooltipManager$$.scale(1, 0), this.$_cubeEffect$ ? this.$_rotationDir$ === $dvt$$17$$.$BaseAnimation$.$ROT_DIR_COUNTERCLOCKWISE$ ? $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgPatternFillUtils$$.$h$ * $DvtSvgFilterContext$$, 0) : $DvtHtmlRichTooltipManager$$.translate(0, $DvtSvgPatternFillUtils$$.$h$) : $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgGradientUtils$$ * 
    $DvtSvgFilterContext$$, $DvtSvgGradientUtils$$));
    $DvtHtmlRichTooltipManager$$.concat($DvtSvgImplFactory$$);
    $DvtSvgShadowUtils$$.$setMatrix$($DvtHtmlRichTooltipManager$$);
    this.$_cubeEffect$ && $DvtSvgShadowUtils$$.$setAlpha$(0);
  };
  $DvtAnimFlipIn$$.prototype.$InitEndState$ = function $$DvtAnimFlipIn$$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $DvtAnimFlipIn$$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getMatrix$();
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgPatternFillUtils$$);
    this.$_cubeEffect$ && this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 1);
  };
  $DvtAnimFlipIn$$.prototype.$InitializePlay$ = function $$DvtAnimFlipIn$$$$$InitializePlay$$() {
    $DvtAnimFlipIn$$.$superclass$.$InitializePlay$.call(this);
    this.$ShowObjects$();
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtAnimFlipOut$$, $dvt$$17$$.$BaseAnimation$);
  $DvtAnimFlipOut$$.prototype.Init = function $$DvtAnimFlipOut$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtAnimFlipOut$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    this.$_axis$ = $DvtSvgImageFillUtils$$;
    this.$_rotationDir$ = $DvtSvgGradientUtils$$;
    this.$_bHideObjectsOnEnd$ = this.$_bSaveAndRestoreOriginalMatrices$ = !0;
    this.$_cubeEffect$ = !1;
  };
  $DvtAnimFlipOut$$.prototype.$InitEndState$ = function $$DvtAnimFlipOut$$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $DvtAnimFlipOut$$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$w$ / 2, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$h$ / 2, $DvtSvgFilterUtils$$ = Math.PI / 6;
    this.$_rotationDir$ === $dvt$$17$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$ && ($DvtSvgFilterUtils$$ = -$DvtSvgFilterUtils$$);
    var $DvtSvgFilterContext$$ = Math.tan($DvtSvgFilterUtils$$), $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$getMatrix$(), $DvtHtmlRichTooltipManager$$ = new $dvt$$17$$.$Matrix$;
    this.$_axis$ === $dvt$$17$$.$BaseAnimation$.$AXIS_Y$ ? ($DvtHtmlRichTooltipManager$$.$skew$(0, $DvtSvgFilterUtils$$), $DvtHtmlRichTooltipManager$$.scale(0, 1), this.$_cubeEffect$ ? this.$_rotationDir$ === $dvt$$17$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$ ? $DvtHtmlRichTooltipManager$$.translate($DvtSvgPatternFillUtils$$.$w$, 0) : $DvtHtmlRichTooltipManager$$.translate(0, -$DvtSvgPatternFillUtils$$.$w$ * $DvtSvgFilterContext$$) : $DvtHtmlRichTooltipManager$$.translate($DvtSvgImageFillUtils$$, -$DvtSvgImageFillUtils$$ * 
    $DvtSvgFilterContext$$)) : ($DvtHtmlRichTooltipManager$$.$skew$($DvtSvgFilterUtils$$, 0), $DvtHtmlRichTooltipManager$$.scale(1, 0), this.$_cubeEffect$ ? this.$_rotationDir$ === $dvt$$17$$.$BaseAnimation$.$ROT_DIR_CLOCKWISE$ ? $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgPatternFillUtils$$.$h$ * $DvtSvgFilterContext$$, 0) : $DvtHtmlRichTooltipManager$$.translate(0, $DvtSvgPatternFillUtils$$.$h$) : $DvtHtmlRichTooltipManager$$.translate(-$DvtSvgGradientUtils$$ * $DvtSvgFilterContext$$, $DvtSvgGradientUtils$$));
    $DvtHtmlRichTooltipManager$$.concat($DvtSvgImplFactory$$);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtHtmlRichTooltipManager$$);
    this.$_cubeEffect$ && this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 0);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtAnimCubeIn$$, $DvtAnimFlipIn$$);
  $DvtAnimCubeIn$$.prototype.Init = function $$DvtAnimCubeIn$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtAnimCubeIn$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    this.$_cubeEffect$ = !0;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtAnimCubeOut$$, $DvtAnimFlipOut$$);
  $DvtAnimCubeOut$$.prototype.Init = function $$DvtAnimCubeOut$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtAnimCubeOut$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    this.$_cubeEffect$ = !0;
  };
  $dvt$$17$$.$AnimFadeIn$ = function $$dvt$$17$$$$AnimFadeIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimFadeIn$, $dvt$$17$$.$BaseAnimation$);
  $dvt$$17$$.$AnimFadeIn$.prototype.Init = function $$dvt$$17$$$$AnimFadeIn$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$17$$.$AnimFadeIn$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$AnimFadeIn$.prototype.$InitStartState$ = function $$dvt$$17$$$$AnimFadeIn$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$setAlpha$(0);
  };
  $dvt$$17$$.$AnimFadeIn$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimFadeIn$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 1);
  };
  $dvt$$17$$.$AnimFadeOut$ = function $$dvt$$17$$$$AnimFadeOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimFadeOut$, $dvt$$17$$.$BaseAnimation$);
  $dvt$$17$$.$AnimFadeOut$.prototype.Init = function $$dvt$$17$$$$AnimFadeOut$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$17$$.$AnimFadeOut$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$AnimFadeOut$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimFadeOut$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getAlpha$, $DvtSvgShadowUtils$$.$setAlpha$, 0);
  };
  $dvt$$17$$.$AnimMoveBy$ = function $$dvt$$17$$$$AnimMoveBy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimMoveBy$, $dvt$$17$$.$BaseAnimation$);
  $dvt$$17$$.$AnimMoveBy$.prototype.Init = function $$dvt$$17$$$$AnimMoveBy$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_arOffsets$ = $DvtSvgImageFillUtils$$ instanceof Array ? $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$Point$ ? [$DvtSvgImageFillUtils$$] : [new $dvt$$17$$.$Point$(0, 0)];
    this.$_currIndex$ = 0;
    $dvt$$17$$.$AnimMoveBy$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$AnimMoveBy$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimMoveBy$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgPatternFillUtils$$ = this.$_currIndex$ < this.$_arOffsets$.length ? this.$_arOffsets$[this.$_currIndex$] : this.$_arOffsets$[this.$_arOffsets$.length - 1];
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateX$, $DvtSvgShadowUtils$$.$setTranslateX$, $DvtSvgShadowUtils$$.$getTranslateX$() + $DvtSvgPatternFillUtils$$.x);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateY$, $DvtSvgShadowUtils$$.$setTranslateY$, $DvtSvgShadowUtils$$.$getTranslateY$() + $DvtSvgPatternFillUtils$$.y);
    this.$_currIndex$++;
  };
  $dvt$$17$$.$AnimMoveTo$ = function $$dvt$$17$$$$AnimMoveTo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimMoveTo$, $dvt$$17$$.$BaseAnimation$);
  $dvt$$17$$.$AnimMoveTo$.prototype.Init = function $$dvt$$17$$$$AnimMoveTo$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_arPoints$ = $DvtSvgImageFillUtils$$ instanceof Array ? $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$Point$ ? [$DvtSvgImageFillUtils$$] : [new $dvt$$17$$.$Point$(0, 0)];
    this.$_currIndex$ = 0;
    $dvt$$17$$.$AnimMoveTo$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$AnimMoveTo$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimMoveTo$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgPatternFillUtils$$ = this.$_currIndex$ < this.$_arPoints$.length ? this.$_arPoints$[this.$_currIndex$] : this.$_arPoints$[this.$_arPoints$.length - 1];
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateX$, $DvtSvgShadowUtils$$.$setTranslateX$, $DvtSvgPatternFillUtils$$.x);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateY$, $DvtSvgShadowUtils$$.$setTranslateY$, $DvtSvgPatternFillUtils$$.y);
    this.$_currIndex$++;
  };
  $dvt$$17$$.$AnimScaleBy$ = function $$dvt$$17$$$$AnimScaleBy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimScaleBy$, $dvt$$17$$.$BaseAnimation$);
  $dvt$$17$$.$AnimScaleBy$.prototype.Init = function $$dvt$$17$$$$AnimScaleBy$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_arScales$ = $DvtSvgImageFillUtils$$ instanceof Array ? $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$Point$ ? [$DvtSvgImageFillUtils$$] : [new $dvt$$17$$.$Point$(1, 1)];
    this.$_currIndex$ = 0;
    $dvt$$17$$.$AnimScaleBy$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$AnimScaleBy$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimScaleBy$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgPatternFillUtils$$ = this.$_currIndex$ < this.$_arScales$.length ? this.$_arScales$[this.$_currIndex$] : this.$_arScales$[this.$_arScales$.length - 1];
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, $DvtSvgShadowUtils$$.$getScaleX$() * $DvtSvgPatternFillUtils$$.x);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, $DvtSvgShadowUtils$$.$getScaleY$() * $DvtSvgPatternFillUtils$$.y);
    this.$_currIndex$++;
  };
  $dvt$$17$$.$AnimScaleFadeIn$ = function $$dvt$$17$$$$AnimScaleFadeIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimScaleFadeIn$, $dvt$$17$$.$AnimFadeIn$);
  $dvt$$17$$.$AnimScaleFadeIn$.prototype.Init = function $$dvt$$17$$$$AnimScaleFadeIn$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    this.$_boundsRect$ = $DvtSvgImageFillUtils$$;
    this.$_direction$ = $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : $dvt$$17$$.$BaseAnimation$.$DIR_NW$;
    this.$_minScale$ = $DvtSvgFilterUtils$$ ? $DvtSvgFilterUtils$$ : .5;
    $dvt$$17$$.$AnimScaleFadeIn$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    this.$_bSaveAndRestoreOriginalMatrices$ = !0;
  };
  $dvt$$17$$.$AnimScaleFadeIn$.prototype.$InitStartState$ = function $$dvt$$17$$$$AnimScaleFadeIn$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$AnimScaleFadeIn$.$superclass$.$InitStartState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$_minScale$ * $DvtSvgShadowUtils$$.$getScaleX$(), $DvtSvgImageFillUtils$$ = this.$_minScale$ * $DvtSvgShadowUtils$$.$getScaleY$(), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgGradientUtils$$ = $dvt$$17$$.$BaseAnimation$.$GetAlignCompassPoint$(new $dvt$$17$$.$Rectangle$(0, 0, $DvtSvgPatternFillUtils$$ * $DvtSvgGradientUtils$$.$w$, $DvtSvgImageFillUtils$$ * $DvtSvgGradientUtils$$.$h$), this.$_boundsRect$, this.$_direction$);
    $DvtSvgShadowUtils$$.$setTranslate$($DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y);
    $DvtSvgShadowUtils$$.$setScale$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$AnimScaleFadeIn$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimScaleFadeIn$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$AnimScaleFadeIn$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getMatrix$();
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_MATRIX$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getMatrix$, $DvtSvgShadowUtils$$.$setMatrix$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$AnimScaleFadeOut$ = function $$dvt$$17$$$$AnimScaleFadeOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimScaleFadeOut$, $dvt$$17$$.$AnimFadeOut$);
  $dvt$$17$$.$AnimScaleFadeOut$.prototype.Init = function $$dvt$$17$$$$AnimScaleFadeOut$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    this.$_boundsRect$ = $DvtSvgImageFillUtils$$;
    this.$_direction$ = $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : $dvt$$17$$.$BaseAnimation$.$DIR_NE$;
    this.$_minScale$ = $DvtSvgFilterUtils$$ ? $DvtSvgFilterUtils$$ : .5;
    $dvt$$17$$.$AnimScaleFadeOut$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    this.$_bSaveAndRestoreOriginalMatrices$ = !0;
  };
  $dvt$$17$$.$AnimScaleFadeOut$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimScaleFadeOut$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$AnimScaleFadeOut$.$superclass$.$InitEndState$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$_minScale$ * $DvtSvgShadowUtils$$.$getScaleX$(), $DvtSvgImageFillUtils$$ = this.$_minScale$ * $DvtSvgShadowUtils$$.$getScaleY$(), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$(), $DvtSvgGradientUtils$$ = $dvt$$17$$.$BaseAnimation$.$GetAlignCompassPoint$(new $dvt$$17$$.$Rectangle$(0, 0, $DvtSvgPatternFillUtils$$ * $DvtSvgGradientUtils$$.$w$, $DvtSvgImageFillUtils$$ * $DvtSvgGradientUtils$$.$h$), this.$_boundsRect$, this.$_direction$);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, $DvtSvgPatternFillUtils$$);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, $DvtSvgImageFillUtils$$);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateX$, $DvtSvgShadowUtils$$.$setTranslateX$, $DvtSvgGradientUtils$$.x);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getTranslateY$, $DvtSvgShadowUtils$$.$setTranslateY$, $DvtSvgGradientUtils$$.y);
  };
  $dvt$$17$$.$AnimScaleTo$ = function $$dvt$$17$$$$AnimScaleTo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimScaleTo$, $dvt$$17$$.$BaseAnimation$);
  $dvt$$17$$.$AnimScaleTo$.prototype.Init = function $$dvt$$17$$$$AnimScaleTo$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_arScales$ = $DvtSvgImageFillUtils$$ instanceof Array ? $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$Point$ ? [$DvtSvgImageFillUtils$$] : [new $dvt$$17$$.$Point$(1, 1)];
    this.$_currIndex$ = 0;
    $dvt$$17$$.$AnimScaleTo$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$AnimScaleTo$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimScaleTo$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgPatternFillUtils$$ = this.$_currIndex$ < this.$_arScales$.length ? this.$_arScales$[this.$_currIndex$] : this.$_arScales$[this.$_arScales$.length - 1];
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, $DvtSvgPatternFillUtils$$.x);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, $DvtSvgPatternFillUtils$$.y);
    this.$_currIndex$++;
  };
  $dvt$$17$$.$AnimPopIn$ = function $$dvt$$17$$$$AnimPopIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimPopIn$, $dvt$$17$$.$BaseAnimation$);
  $dvt$$17$$.$AnimPopIn$.$BackOut$ = function $$dvt$$17$$$$AnimPopIn$$$BackOut$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Easing$.$backOut$($DvtSvgShadowUtils$$, 2.5);
  };
  $dvt$$17$$.$AnimPopIn$.prototype.Init = function $$dvt$$17$$$$AnimPopIn$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    if (this.$_bCenter$ = $DvtSvgImageFillUtils$$) {
      this.$_tempContainers$ = [], this.$_currIndex$ = 0;
    }
    $dvt$$17$$.$AnimPopIn$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$AnimPopIn$.prototype.$setEasing$ = function $$dvt$$17$$$$AnimPopIn$$$$setEasing$$() {
  };
  $dvt$$17$$.$AnimPopIn$.prototype.$CreateAnimator$ = function $$dvt$$17$$$$AnimPopIn$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$AnimPopIn$.$superclass$.$CreateAnimator$.call(this, $DvtSvgShadowUtils$$);
    this.$_animator$.$setEasing$($dvt$$17$$.$AnimPopIn$.$BackOut$);
    this.$_bCenter$ && $dvt$$17$$.$Playable$.$appendOnEnd$(this.$_animator$, this.$RemoveTempContainers$, this);
  };
  $dvt$$17$$.$AnimPopIn$.prototype.$InitStartState$ = function $$dvt$$17$$$$AnimPopIn$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    if (this.$_bCenter$) {
      var $DvtSvgPatternFillUtils$$ = this.$_tempContainers$[this.$_currIndex$], $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$();
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$ = $DvtSvgShadowUtils$$.$getTranslateX$();
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$ = $DvtSvgShadowUtils$$.$getTranslateY$();
      var $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.x + .5 * $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.y + .5 * $DvtSvgImageFillUtils$$.$h$;
      $DvtSvgPatternFillUtils$$.$setTranslate$($DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$ + $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$ + $DvtSvgImageFillUtils$$);
      $DvtSvgShadowUtils$$.$setTranslate$(-$DvtSvgGradientUtils$$, -$DvtSvgImageFillUtils$$);
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.getParent().$getChildIndex$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInChildIndex$ = $DvtSvgGradientUtils$$;
      $DvtSvgShadowUtils$$.getParent().$addChildAt$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
      $DvtSvgPatternFillUtils$$.$addChild$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$setScale$(.01, .01);
      this.$_currIndex$++;
    } else {
      $DvtSvgShadowUtils$$.$setScale$(.01, .01);
    }
    $DvtSvgShadowUtils$$.$setVisible$(!0);
  };
  $dvt$$17$$.$AnimPopIn$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimPopIn$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    this.$_bCenter$ && ($DvtSvgShadowUtils$$ = new $dvt$$17$$.$Container$(this.$_context$), this.$_tempContainers$.push($DvtSvgShadowUtils$$));
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, 1);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, 1);
  };
  $dvt$$17$$.$AnimPopIn$.prototype.$RemoveTempContainers$ = function $$dvt$$17$$$$AnimPopIn$$$$RemoveTempContainers$$() {
    if (this.$_tempContainers$) {
      for (var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_tempContainers$.length;$DvtSvgShadowUtils$$++) {
        var $DvtSvgPatternFillUtils$$ = this.$_tempContainers$[$DvtSvgShadowUtils$$];
        this.$_tempContainers$[$DvtSvgShadowUtils$$] = null;
        if (0 < $DvtSvgPatternFillUtils$$.$getNumChildren$()) {
          var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getChildAt$(0);
          $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$), $DvtSvgPatternFillUtils$$.getParent().$addChildAt$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInChildIndex$));
        }
        $DvtSvgPatternFillUtils$$.getParent().removeChild($DvtSvgPatternFillUtils$$);
      }
      this.$_tempContainers$ = null;
    }
  };
  $dvt$$17$$.$AnimPopOut$ = function $$dvt$$17$$$$AnimPopOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$AnimPopOut$, $dvt$$17$$.$BaseAnimation$);
  $dvt$$17$$.$AnimPopOut$.$BackIn$ = function $$dvt$$17$$$$AnimPopOut$$$BackIn$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Easing$.$backIn$($DvtSvgShadowUtils$$, 2.5);
  };
  $dvt$$17$$.$AnimPopOut$.prototype.Init = function $$dvt$$17$$$$AnimPopOut$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    if (this.$_bCenter$ = $DvtSvgImageFillUtils$$) {
      this.$_tempContainers$ = [], this.$_currIndex$ = 0;
    }
    $dvt$$17$$.$AnimPopOut$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_bSaveAndRestoreOriginalMatrices$ = !this.$_bCenter$;
    this.$_bHideObjectsOnEnd$ = !0;
  };
  $dvt$$17$$.$AnimPopOut$.prototype.$setEasing$ = function $$dvt$$17$$$$AnimPopOut$$$$setEasing$$() {
  };
  $dvt$$17$$.$AnimPopOut$.prototype.$CreateAnimator$ = function $$dvt$$17$$$$AnimPopOut$$$$CreateAnimator$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$AnimPopOut$.$superclass$.$CreateAnimator$.call(this, $DvtSvgShadowUtils$$);
    this.$_animator$.$setEasing$($dvt$$17$$.$AnimPopOut$.$BackIn$);
    this.$_bCenter$ && $dvt$$17$$.$Playable$.$appendOnEnd$(this.$_animator$, this.$RemoveTempContainers$, this);
  };
  $dvt$$17$$.$AnimPopOut$.prototype.$InitStartState$ = function $$dvt$$17$$$$AnimPopOut$$$$InitStartState$$($DvtSvgShadowUtils$$) {
    if (this.$_bCenter$) {
      var $DvtSvgPatternFillUtils$$ = this.$_tempContainers$[this.$_currIndex$], $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$();
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$ = $DvtSvgShadowUtils$$.$getTranslateX$();
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$ = $DvtSvgShadowUtils$$.$getTranslateY$();
      var $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.x + .5 * $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.y + .5 * $DvtSvgImageFillUtils$$.$h$;
      $DvtSvgPatternFillUtils$$.$setTranslate$($DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$ + $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$ + $DvtSvgImageFillUtils$$);
      $DvtSvgShadowUtils$$.$setTranslate$(-$DvtSvgGradientUtils$$, -$DvtSvgImageFillUtils$$);
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.getParent().$getChildIndex$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$_dvtAnimPopInChildIndex$ = $DvtSvgGradientUtils$$;
      $DvtSvgShadowUtils$$.getParent().$addChildAt$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
      $DvtSvgPatternFillUtils$$.$addChild$($DvtSvgShadowUtils$$);
      this.$_currIndex$++;
    }
  };
  $dvt$$17$$.$AnimPopOut$.prototype.$InitEndState$ = function $$dvt$$17$$$$AnimPopOut$$$$InitEndState$$($DvtSvgShadowUtils$$) {
    this.$_bCenter$ && ($DvtSvgShadowUtils$$ = new $dvt$$17$$.$Container$(this.$_context$), this.$_tempContainers$.push($DvtSvgShadowUtils$$));
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleX$, $DvtSvgShadowUtils$$.$setScaleX$, .01);
    this.$_animator$.$addProp$($dvt$$17$$.$Animator$.$TYPE_NUMBER$, $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$.$getScaleY$, $DvtSvgShadowUtils$$.$setScaleY$, .01);
  };
  $dvt$$17$$.$AnimPopOut$.prototype.$RemoveTempContainers$ = function $$dvt$$17$$$$AnimPopOut$$$$RemoveTempContainers$$() {
    if (this.$_tempContainers$) {
      for (var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_tempContainers$.length;$DvtSvgShadowUtils$$++) {
        var $DvtSvgPatternFillUtils$$ = this.$_tempContainers$[$DvtSvgShadowUtils$$];
        this.$_tempContainers$[$DvtSvgShadowUtils$$] = null;
        if (0 < $DvtSvgPatternFillUtils$$.$getNumChildren$()) {
          var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getChildAt$(0);
          $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTx$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInOrigTy$), $DvtSvgPatternFillUtils$$.getParent().$addChildAt$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$.$_dvtAnimPopInChildIndex$));
        }
        $DvtSvgPatternFillUtils$$.getParent().removeChild($DvtSvgPatternFillUtils$$);
      }
      this.$_tempContainers$ = null;
    }
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCombinedAnimConveyor$$, $dvt$$17$$.$ParallelPlayable$);
  $DvtCombinedAnimConveyor$$.prototype.Init = function $$DvtCombinedAnimConveyor$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = .5);
    $dvt$$17$$ || ($dvt$$17$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $DvtAnimConveyorOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
    $DvtSvgImageFillUtils$$ = new $DvtAnimConveyorIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgFilterContext$$ / 3 + $dvt$$17$$);
    $DvtCombinedAnimConveyor$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$]);
  };
  $dvt$$17$$.$CombinedAnimCube$ = function $$dvt$$17$$$$CombinedAnimCube$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$CombinedAnimCube$, $dvt$$17$$.$ParallelPlayable$);
  $dvt$$17$$.$CombinedAnimCube$.prototype.Init = function $$dvt$$17$$$$CombinedAnimCube$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = .5);
    $DvtSvgImplFactory$$ || ($DvtSvgImplFactory$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $DvtAnimCubeOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgImageFillUtils$$ = new $DvtAnimCubeIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $dvt$$17$$.$CombinedAnimCube$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$]);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCombinedAnimFade$$, $dvt$$17$$.$ParallelPlayable$);
  $DvtCombinedAnimFade$$.prototype.Init = function $$DvtCombinedAnimFade$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgGradientUtils$$ || ($DvtSvgGradientUtils$$ = .5);
    $DvtSvgFilterUtils$$ || ($DvtSvgFilterUtils$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$AnimFadeOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$AnimFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, .5 * $DvtSvgPatternFillUtils$$.$getDuration$() + $DvtSvgFilterUtils$$);
    $DvtCombinedAnimFade$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$]);
  };
  $dvt$$17$$.$CombinedAnimFlip$ = function $$dvt$$17$$$$CombinedAnimFlip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$CombinedAnimFlip$, $dvt$$17$$.$SequentialPlayable$);
  $dvt$$17$$.$CombinedAnimFlip$.prototype.Init = function $$dvt$$17$$$$CombinedAnimFlip$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = .5);
    $DvtSvgImplFactory$$ || ($DvtSvgImplFactory$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $DvtAnimFlipOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgPatternFillUtils$$.$setEasing$($dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_IN$);
    $DvtSvgImageFillUtils$$ = new $DvtAnimFlipIn$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgImageFillUtils$$.$setEasing$($dvt$$17$$.$BaseAnimation$.$EASING_CUBIC_OUT$);
    $DvtSvgImageFillUtils$$.$HideObjects$();
    $dvt$$17$$.$CombinedAnimFlip$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$]);
  };
  $dvt$$17$$.$CombinedAnimMoveBy$ = function $$dvt$$17$$$$CombinedAnimMoveBy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$CombinedAnimMoveBy$, $dvt$$17$$.$ParallelPlayable$);
  $dvt$$17$$.$CombinedAnimMoveBy$.prototype.Init = function $$dvt$$17$$$$CombinedAnimMoveBy$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = .5);
    $DvtSvgImplFactory$$ || ($DvtSvgImplFactory$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$AnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$AnimMoveBy$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $dvt$$17$$.$CombinedAnimMoveBy$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$]);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCombinedAnimScaleFade$$, $dvt$$17$$.$ParallelPlayable$);
  $DvtCombinedAnimScaleFade$$.prototype.Init = function $$DvtCombinedAnimScaleFade$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    $DvtSvgFilterUtils$$ || ($DvtSvgFilterUtils$$ = $dvt$$17$$.$BaseAnimation$.$DIR_NE$);
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = $dvt$$17$$.$BaseAnimation$.$DIR_NW$);
    $DvtSvgImplFactory$$ || ($DvtSvgImplFactory$$ = .5);
    $DvtHtmlRichTooltipManager$$ || ($DvtHtmlRichTooltipManager$$ = .5);
    $DvtDomXmlParser$$ || ($DvtDomXmlParser$$ = 0);
    $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$AnimScaleFadeOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$);
    $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$AnimScaleFadeIn$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, .3 * $DvtSvgPatternFillUtils$$.$getDuration$() + $DvtDomXmlParser$$);
    $DvtCombinedAnimScaleFade$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, [$DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$]);
  };
  $dvt$$17$$.$CombinedAnimPopIn$ = function $$dvt$$17$$$$CombinedAnimPopIn$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$CombinedAnimPopIn$, $dvt$$17$$.$ParallelPlayable$);
  $dvt$$17$$.$CombinedAnimPopIn$.prototype.Init = function $$dvt$$17$$$$CombinedAnimPopIn$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$ = [];
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ instanceof Array ? $DvtSvgPatternFillUtils$$ : [$DvtSvgPatternFillUtils$$];
    $DvtSvgFilterContext$$ = null === $DvtSvgFilterContext$$ || isNaN($DvtSvgFilterContext$$) ? 0 : $DvtSvgFilterContext$$;
    for (var $DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgPatternFillUtils$$.length;$DvtHtmlRichTooltipManager$$++) {
      var $DvtDomXmlParser$$ = new $dvt$$17$$.$AnimPopIn$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ + Math.random() * ($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$));
      $DvtSvgImplFactory$$.push($DvtDomXmlParser$$);
    }
    $dvt$$17$$.$CombinedAnimPopIn$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgImplFactory$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCombinedAnimPopOut$$, $dvt$$17$$.$ParallelPlayable$);
  $DvtCombinedAnimPopOut$$.prototype.Init = function $$DvtCombinedAnimPopOut$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$ = [];
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ instanceof Array ? $DvtSvgPatternFillUtils$$ : [$DvtSvgPatternFillUtils$$];
    $DvtSvgFilterContext$$ = null === $DvtSvgFilterContext$$ || isNaN($DvtSvgFilterContext$$) ? 0 : $DvtSvgFilterContext$$;
    for (var $DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgPatternFillUtils$$.length;$DvtHtmlRichTooltipManager$$++) {
      var $DvtDomXmlParser$$ = new $dvt$$17$$.$AnimPopOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ + Math.random() * ($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$));
      $DvtSvgImplFactory$$.push($DvtDomXmlParser$$);
    }
    $DvtCombinedAnimPopOut$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgImplFactory$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtBaseDrawEffect$$, $DvtLockable$$);
  $DvtBaseDrawEffect$$.prototype.$_Init$ = function $$DvtBaseDrawEffect$$$$$_Init$$() {
    $DvtBaseDrawEffect$$.$superclass$.$_Init$.call(this);
  };
  $DvtBaseDrawEffect$$.prototype.getId = function $$DvtBaseDrawEffect$$$$getId$() {
    return this.$_id$;
  };
  $DvtBaseDrawEffect$$.prototype.setId = function $$DvtBaseDrawEffect$$$$setId$($DvtSvgShadowUtils$$) {
    this.$_id$ = $DvtSvgShadowUtils$$;
  };
  $DvtBaseDrawEffect$$.prototype.$mergeProps$ = function $$DvtBaseDrawEffect$$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.setId(this.$_id$);
  };
  $dvt$$17$$.$ColorUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ColorUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ColorUtils$.$_RED$ = 0;
  $dvt$$17$$.$ColorUtils$.$_GREEN$ = 1;
  $dvt$$17$$.$ColorUtils$.$_BLUE$ = 2;
  $dvt$$17$$.$ColorUtils$.$_ALPHA$ = 3;
  $dvt$$17$$.$ColorUtils$.$_RGBA$ = "rgba(";
  $dvt$$17$$.$ColorUtils$.$_RGB$ = "rgb(";
  $dvt$$17$$.$ColorUtils$.$_POUND$ = "#";
  $dvt$$17$$.$ColorUtils$.$_FACTOR$ = .15;
  $dvt$$17$$.$ColorUtils$.$getColorFromName$ = function $$dvt$$17$$$$ColorUtils$$$getColorFromName$$($DvtSvgShadowUtils$$) {
    if (!$dvt$$17$$.$ColorUtils$.$_names$) {
      var $DvtSvgPatternFillUtils$$ = [];
      $DvtSvgPatternFillUtils$$.aliceblue = "#f0f8ff";
      $DvtSvgPatternFillUtils$$.antiquewhite = "#faEbd7";
      $DvtSvgPatternFillUtils$$.aqua = "#00ffff";
      $DvtSvgPatternFillUtils$$.aquamarine = "#7fffd4";
      $DvtSvgPatternFillUtils$$.azure = "#f0ffff";
      $DvtSvgPatternFillUtils$$.beige = "#f5f5dc";
      $DvtSvgPatternFillUtils$$.bisque = "#ffE4c4";
      $DvtSvgPatternFillUtils$$.black = "#000000";
      $DvtSvgPatternFillUtils$$.blanchedalmond = "#ffEbcd";
      $DvtSvgPatternFillUtils$$.blue = "#0000ff";
      $DvtSvgPatternFillUtils$$.blueviolet = "#8a2bE2";
      $DvtSvgPatternFillUtils$$.brown = "#a52a2a";
      $DvtSvgPatternFillUtils$$.burlywood = "#dEb887";
      $DvtSvgPatternFillUtils$$.cadetblue = "#5f9Ea0";
      $DvtSvgPatternFillUtils$$.chartreuse = "#7fff00";
      $DvtSvgPatternFillUtils$$.chocolate = "#d2691E";
      $DvtSvgPatternFillUtils$$.coral = "#ff7f50";
      $DvtSvgPatternFillUtils$$.cornflowerblue = "#6495Ed";
      $DvtSvgPatternFillUtils$$.cornsilk = "#fff8dc";
      $DvtSvgPatternFillUtils$$.crimson = "#dc143c";
      $DvtSvgPatternFillUtils$$.cyan = "#00ffff";
      $DvtSvgPatternFillUtils$$.darkblue = "#00008b";
      $DvtSvgPatternFillUtils$$.darkcyan = "#008b8b";
      $DvtSvgPatternFillUtils$$.darkgoldenrod = "#b8860b";
      $DvtSvgPatternFillUtils$$.darkgray = "#a9a9a9";
      $DvtSvgPatternFillUtils$$.darkgreen = "#006400";
      $DvtSvgPatternFillUtils$$.darkkhaki = "#bdb76b";
      $DvtSvgPatternFillUtils$$.darkmagenta = "#8b008b";
      $DvtSvgPatternFillUtils$$.darkolivegreen = "#556b2f";
      $DvtSvgPatternFillUtils$$.darkorange = "#ff8c00";
      $DvtSvgPatternFillUtils$$.darkorchid = "#9932cc";
      $DvtSvgPatternFillUtils$$.darkred = "#8b0000";
      $DvtSvgPatternFillUtils$$.darksalmon = "#E9967a";
      $DvtSvgPatternFillUtils$$.darkseagreen = "#8fbc8f";
      $DvtSvgPatternFillUtils$$.darkslateblue = "#483d8b";
      $DvtSvgPatternFillUtils$$.darkslategray = "#2f4f4f";
      $DvtSvgPatternFillUtils$$.darkturquoise = "#00cEd1";
      $DvtSvgPatternFillUtils$$.darkviolet = "#9400d3";
      $DvtSvgPatternFillUtils$$.deeppink = "#ff1493";
      $DvtSvgPatternFillUtils$$.deepskyblue = "#00bfff";
      $DvtSvgPatternFillUtils$$.dimgray = "#696969";
      $DvtSvgPatternFillUtils$$.dodgerblue = "#1E90ff";
      $DvtSvgPatternFillUtils$$.firebrick = "#b22222";
      $DvtSvgPatternFillUtils$$.floralwhite = "#fffaf0";
      $DvtSvgPatternFillUtils$$.forestgreen = "#228b22";
      $DvtSvgPatternFillUtils$$.fuchsia = "#ff00ff";
      $DvtSvgPatternFillUtils$$.gainsboro = "#dcdcdc";
      $DvtSvgPatternFillUtils$$.ghostwhite = "#f8f8ff";
      $DvtSvgPatternFillUtils$$.gold = "#ffd700";
      $DvtSvgPatternFillUtils$$.goldenrod = "#daa520";
      $DvtSvgPatternFillUtils$$.gray = "#808080";
      $DvtSvgPatternFillUtils$$.green = "#008000";
      $DvtSvgPatternFillUtils$$.greenyellow = "#adff2f";
      $DvtSvgPatternFillUtils$$.honeydew = "#f0fff0";
      $DvtSvgPatternFillUtils$$.hotpink = "#ff69b4";
      $DvtSvgPatternFillUtils$$["indianred "] = "#cd5c5c";
      $DvtSvgPatternFillUtils$$["indigo "] = "#4b0082";
      $DvtSvgPatternFillUtils$$.ivory = "#fffff0";
      $DvtSvgPatternFillUtils$$.khaki = "#f0E68c";
      $DvtSvgPatternFillUtils$$.lavender = "#E6E6fa";
      $DvtSvgPatternFillUtils$$.lavenderblush = "#fff0f5";
      $DvtSvgPatternFillUtils$$.lawngreen = "#7cfc00";
      $DvtSvgPatternFillUtils$$.lemonchiffon = "#fffacd";
      $DvtSvgPatternFillUtils$$.lightblue = "#add8E6";
      $DvtSvgPatternFillUtils$$.lightcoral = "#f08080";
      $DvtSvgPatternFillUtils$$.lightcyan = "#E0ffff";
      $DvtSvgPatternFillUtils$$.lightgoldenrodyellow = "#fafad2";
      $DvtSvgPatternFillUtils$$.lightgray = "#d3d3d3";
      $DvtSvgPatternFillUtils$$.lightgreen = "#90EE90";
      $DvtSvgPatternFillUtils$$.lightpink = "#ffb6c1";
      $DvtSvgPatternFillUtils$$.lightsalmon = "#ffa07a";
      $DvtSvgPatternFillUtils$$.lightseagreen = "#20b2aa";
      $DvtSvgPatternFillUtils$$.lightskyblue = "#87cEfa";
      $DvtSvgPatternFillUtils$$.lightslategray = "#778899";
      $DvtSvgPatternFillUtils$$.lightsteelblue = "#b0c4dE";
      $DvtSvgPatternFillUtils$$.lightyellow = "#ffffE0";
      $DvtSvgPatternFillUtils$$.lime = "#00ff00";
      $DvtSvgPatternFillUtils$$.limegreen = "#32cd32";
      $DvtSvgPatternFillUtils$$.linen = "#faf0E6";
      $DvtSvgPatternFillUtils$$.magenta = "#ff00ff";
      $DvtSvgPatternFillUtils$$.maroon = "#800000";
      $DvtSvgPatternFillUtils$$.mediumaquamarine = "#66cdaa";
      $DvtSvgPatternFillUtils$$.mediumblue = "#0000cd";
      $DvtSvgPatternFillUtils$$.mediumorchid = "#ba55d3";
      $DvtSvgPatternFillUtils$$.mediumpurple = "#9370db";
      $DvtSvgPatternFillUtils$$.mediumseagreen = "#3cb371";
      $DvtSvgPatternFillUtils$$.mediumslateblue = "#7b68EE";
      $DvtSvgPatternFillUtils$$.mediumspringgreen = "#00fa9a";
      $DvtSvgPatternFillUtils$$.mediumturquoise = "#48d1cc";
      $DvtSvgPatternFillUtils$$.mediumvioletred = "#c71585";
      $DvtSvgPatternFillUtils$$.midnightblue = "#191970";
      $DvtSvgPatternFillUtils$$.mintcream = "#f5fffa";
      $DvtSvgPatternFillUtils$$.mistyrose = "#ffE4E1";
      $DvtSvgPatternFillUtils$$.moccasin = "#ffE4b5";
      $DvtSvgPatternFillUtils$$.navajowhite = "#ffdEad";
      $DvtSvgPatternFillUtils$$.navy = "#000080";
      $DvtSvgPatternFillUtils$$.oldlace = "#fdf5E6";
      $DvtSvgPatternFillUtils$$.olive = "#808000";
      $DvtSvgPatternFillUtils$$.olivedrab = "#6b8E23";
      $DvtSvgPatternFillUtils$$.orange = "#ffa500";
      $DvtSvgPatternFillUtils$$.orangered = "#ff4500";
      $DvtSvgPatternFillUtils$$.orchid = "#da70d6";
      $DvtSvgPatternFillUtils$$.palegoldenrod = "#EEE8aa";
      $DvtSvgPatternFillUtils$$.palegreen = "#98fb98";
      $DvtSvgPatternFillUtils$$.paleturquoise = "#afEEEE";
      $DvtSvgPatternFillUtils$$.palevioletred = "#db7093";
      $DvtSvgPatternFillUtils$$.papayawhip = "#ffEfd5";
      $DvtSvgPatternFillUtils$$.peachpuff = "#ffdab9";
      $DvtSvgPatternFillUtils$$.peru = "#cd853f";
      $DvtSvgPatternFillUtils$$.pink = "#ffc0cb";
      $DvtSvgPatternFillUtils$$.plum = "#dda0dd";
      $DvtSvgPatternFillUtils$$.powderblue = "#b0E0E6";
      $DvtSvgPatternFillUtils$$.purple = "#800080";
      $DvtSvgPatternFillUtils$$.rebeccapurple = "#663399";
      $DvtSvgPatternFillUtils$$.red = "#ff0000";
      $DvtSvgPatternFillUtils$$.rosybrown = "#bc8f8f";
      $DvtSvgPatternFillUtils$$.royalblue = "#4169E1";
      $DvtSvgPatternFillUtils$$.saddlebrown = "#8b4513";
      $DvtSvgPatternFillUtils$$.salmon = "#fa8072";
      $DvtSvgPatternFillUtils$$.sandybrown = "#f4a460";
      $DvtSvgPatternFillUtils$$.seagreen = "#2E8b57";
      $DvtSvgPatternFillUtils$$.seashell = "#fff5EE";
      $DvtSvgPatternFillUtils$$.sienna = "#a0522d";
      $DvtSvgPatternFillUtils$$.silver = "#c0c0c0";
      $DvtSvgPatternFillUtils$$.skyblue = "#87cEEb";
      $DvtSvgPatternFillUtils$$.slateblue = "#6a5acd";
      $DvtSvgPatternFillUtils$$.slategray = "#708090";
      $DvtSvgPatternFillUtils$$.snow = "#fffafa";
      $DvtSvgPatternFillUtils$$.springgreen = "#00ff7f";
      $DvtSvgPatternFillUtils$$.steelblue = "#4682b4";
      $DvtSvgPatternFillUtils$$.tan = "#d2b48c";
      $DvtSvgPatternFillUtils$$.teal = "#008080";
      $DvtSvgPatternFillUtils$$.thistle = "#d8bfd8";
      $DvtSvgPatternFillUtils$$.tomato = "#ff6347";
      $DvtSvgPatternFillUtils$$.turquoise = "#40E0d0";
      $DvtSvgPatternFillUtils$$.violet = "#EE82EE";
      $DvtSvgPatternFillUtils$$.wheat = "#f5dEb3";
      $DvtSvgPatternFillUtils$$.white = "#ffffff";
      $DvtSvgPatternFillUtils$$.whitesmoke = "#f5f5f5";
      $DvtSvgPatternFillUtils$$.yellow = "#ffff00";
      $DvtSvgPatternFillUtils$$.yellowgreen = "#9acd32";
      $DvtSvgPatternFillUtils$$.transparent = "rgba(255,255,255,0)";
      $dvt$$17$$.$ColorUtils$.$_names$ = $DvtSvgPatternFillUtils$$;
    }
    return $dvt$$17$$.$ColorUtils$.$_names$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$ColorUtils$.$isColor$ = function $$dvt$$17$$$$ColorUtils$$$isColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!$DvtSvgPatternFillUtils$$) {
      return $DvtSvgShadowUtils$$.charAt(0) === $dvt$$17$$.$ColorUtils$.$_POUND$ || 0 === $DvtSvgShadowUtils$$.indexOf($dvt$$17$$.$ColorUtils$.$_RGBA$) || 0 === $DvtSvgShadowUtils$$.indexOf($dvt$$17$$.$ColorUtils$.$_RGB$);
    }
    var $DvtSvgImageFillUtils$$ = !1;
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.toLowerCase();
    if ($DvtSvgShadowUtils$$.charAt(0) === $dvt$$17$$.$ColorUtils$.$_POUND$) {
      7 === $DvtSvgShadowUtils$$.length && ($DvtSvgImageFillUtils$$ = (new RegExp(/^#[0-9a-f]{6}$/i)).test($DvtSvgShadowUtils$$));
    } else {
      var $DvtSvgGradientUtils$$ = 0 === $DvtSvgShadowUtils$$.indexOf($dvt$$17$$.$ColorUtils$.$_RGBA$), $DvtSvgFilterUtils$$;
      $DvtSvgGradientUtils$$ || ($DvtSvgFilterUtils$$ = 0 === $DvtSvgShadowUtils$$.indexOf($dvt$$17$$.$ColorUtils$.$_RGB$));
      if ($DvtSvgGradientUtils$$ || $DvtSvgFilterUtils$$) {
        if ($DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.indexOf(")"), 0 <= $DvtSvgFilterUtils$$) {
          $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.substring($DvtSvgGradientUtils$$ ? 5 : 4, $DvtSvgFilterUtils$$).split(",");
          for (var $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.length, $DvtSvgImplFactory$$ = !0, $DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgFilterContext$$;$DvtHtmlRichTooltipManager$$++) {
            var $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$[$DvtHtmlRichTooltipManager$$];
            if (0 > $DvtDomXmlParser$$ || 255 < $DvtDomXmlParser$$ || 3 < $DvtHtmlRichTooltipManager$$ && (0 > $DvtDomXmlParser$$ || 1 < $DvtDomXmlParser$$)) {
              $DvtSvgImplFactory$$ = !1;
              break;
            }
          }
          $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$ ? 4 === $DvtSvgFilterContext$$ : 3 === $DvtSvgFilterContext$$);
        }
      }
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$ColorUtils$.$getAlpha$ = function $$dvt$$17$$$$ColorUtils$$$getAlpha$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_ALPHA$);
  };
  $dvt$$17$$.$ColorUtils$.$setAlpha$ = function $$dvt$$17$$$$ColorUtils$$$setAlpha$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$_setChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_ALPHA$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ColorUtils$.$getRed$ = function $$dvt$$17$$$$ColorUtils$$$getRed$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_RED$);
  };
  $dvt$$17$$.$ColorUtils$.$setRed$ = function $$dvt$$17$$$$ColorUtils$$$setRed$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$_setChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_RED$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ColorUtils$.$getBlue$ = function $$dvt$$17$$$$ColorUtils$$$getBlue$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_BLUE$);
  };
  $dvt$$17$$.$ColorUtils$.$setBlue$ = function $$dvt$$17$$$$ColorUtils$$$setBlue$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$_setChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_BLUE$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ColorUtils$.$getGreen$ = function $$dvt$$17$$$$ColorUtils$$$getGreen$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_GREEN$);
  };
  $dvt$$17$$.$ColorUtils$.$setGreen$ = function $$dvt$$17$$$$ColorUtils$$$setGreen$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$_setChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_GREEN$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ColorUtils$.$_getChannel$ = function $$dvt$$17$$$$ColorUtils$$$_getChannel$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$ = null;
    ($DvtSvgGradientUtils$$ = $dvt$$17$$.$ColorUtils$.$getColorFromName$($DvtSvgImageFillUtils$$)) && ($DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$);
    if ($DvtSvgPatternFillUtils$$ === $dvt$$17$$.$ColorUtils$.$_ALPHA$) {
      if ("#" === $DvtSvgImageFillUtils$$.charAt(0)) {
        return 7 < $DvtSvgImageFillUtils$$.length ? parseInt($DvtSvgImageFillUtils$$.substring(1, 3), 16) / 255 : 1;
      }
      if ("none" === $DvtSvgImageFillUtils$$) {
        return 0;
      }
    }
    $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.indexOf("(");
    0 > $DvtSvgGradientUtils$$ ? ($DvtSvgGradientUtils$$ = [], 7 < $DvtSvgImageFillUtils$$.length ? ($DvtSvgGradientUtils$$[0] = parseInt($DvtSvgImageFillUtils$$.substr(3, 2), 16), $DvtSvgGradientUtils$$[1] = parseInt($DvtSvgImageFillUtils$$.substr(5, 2), 16), $DvtSvgGradientUtils$$[2] = parseInt($DvtSvgImageFillUtils$$.substr(7, 2), 16), $DvtSvgGradientUtils$$[3] = parseInt($DvtSvgImageFillUtils$$.substr(1, 2), 16) / 255) : ($DvtSvgGradientUtils$$[0] = parseInt($DvtSvgImageFillUtils$$.substr(1, 
    2), 16), $DvtSvgGradientUtils$$[1] = parseInt($DvtSvgImageFillUtils$$.substr(3, 2), 16), $DvtSvgGradientUtils$$[2] = parseInt($DvtSvgImageFillUtils$$.substr(5, 2), 16), $DvtSvgGradientUtils$$[3] = 1), $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$]) : ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.substring($DvtSvgGradientUtils$$ + 1, $DvtSvgImageFillUtils$$.indexOf(")")).split(","), 3 === $DvtSvgGradientUtils$$.length && $DvtSvgPatternFillUtils$$ === $dvt$$17$$.$ColorUtils$.$_ALPHA$ ? 
    $DvtSvgGradientUtils$$ = 1 : ($DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$], $DvtSvgGradientUtils$$ = parseFloat($DvtSvgGradientUtils$$)));
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$ColorUtils$.$getDarker$ = function $$dvt$$17$$$$ColorUtils$$$getDarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_RED$), $DvtSvgGradientUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_GREEN$), $DvtSvgFilterUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_BLUE$), $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_ALPHA$);
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_FACTOR$);
    $DvtSvgImageFillUtils$$ = Math.max(parseInt($DvtSvgImageFillUtils$$ * (1 - $DvtSvgPatternFillUtils$$)), 0);
    $DvtSvgGradientUtils$$ = Math.max(parseInt($DvtSvgGradientUtils$$ * (1 - $DvtSvgPatternFillUtils$$)), 0);
    $DvtSvgFilterUtils$$ = Math.max(parseInt($DvtSvgFilterUtils$$ * (1 - $DvtSvgPatternFillUtils$$)), 0);
    return $dvt$$17$$.$ColorUtils$.$makeRGBA$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$ColorUtils$.$getBrighter$ = function $$dvt$$17$$$$ColorUtils$$$getBrighter$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_ALPHA$), $DvtSvgGradientUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_RED$), $DvtSvgFilterUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_GREEN$), $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_BLUE$);
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_FACTOR$);
    return $dvt$$17$$.$ColorUtils$.$makeRGBA$(Math.min($DvtSvgGradientUtils$$ + parseInt((255 - $DvtSvgGradientUtils$$) * $DvtSvgPatternFillUtils$$), 255), Math.min($DvtSvgFilterUtils$$ + parseInt((255 - $DvtSvgFilterUtils$$) * $DvtSvgPatternFillUtils$$), 255), Math.min($DvtSvgFilterContext$$ + parseInt((255 - $DvtSvgFilterContext$$) * $DvtSvgPatternFillUtils$$), 255), $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$ColorUtils$.$getGrey$ = function $$dvt$$17$$$$ColorUtils$$$getGrey$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_RED$), $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_BLUE$), $DvtSvgGradientUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_GREEN$), $DvtSvgPatternFillUtils$$ = Math.round(.3 * $DvtSvgPatternFillUtils$$ + .59 * $DvtSvgImageFillUtils$$ + .11 * $DvtSvgGradientUtils$$);
    return this.$setRGB$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ColorUtils$.$invert$ = function $$dvt$$17$$$$ColorUtils$$$invert$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = 255 - $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_RED$), $DvtSvgImageFillUtils$$ = 255 - $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_BLUE$), $DvtSvgGradientUtils$$ = 255 - $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_GREEN$);
    return "#" === $DvtSvgShadowUtils$$.charAt(0) ? $dvt$$17$$.$ColorUtils$.$makePound$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) : $DvtSvgShadowUtils$$.substr(0, 4) === $dvt$$17$$.$ColorUtils$.$_RGB$ ? $dvt$$17$$.$ColorUtils$.$makeRGB$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) : $dvt$$17$$.$ColorUtils$.$makeRGBA$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, 
    $dvt$$17$$.$ColorUtils$.$_ALPHA$));
  };
  $dvt$$17$$.$ColorUtils$.$isRGBA$ = function $$dvt$$17$$$$ColorUtils$$$isRGBA$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.substr(0, 5) === $dvt$$17$$.$ColorUtils$.$_RGBA$;
  };
  $dvt$$17$$.$ColorUtils$.$makeRGB$ = function $$dvt$$17$$$$ColorUtils$$$makeRGB$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgImageFillUtils$$ = null === $DvtSvgImageFillUtils$$ || isNaN($DvtSvgImageFillUtils$$) ? 0 : $DvtSvgImageFillUtils$$;
    $DvtSvgPatternFillUtils$$ = null === $DvtSvgPatternFillUtils$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$ = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    return $dvt$$17$$.$ColorUtils$.$_RGB$ + $DvtSvgShadowUtils$$ + "," + $DvtSvgPatternFillUtils$$ + "," + $DvtSvgImageFillUtils$$ + ")";
  };
  $dvt$$17$$.$ColorUtils$.$makeRGBA$ = function $$dvt$$17$$$$ColorUtils$$$makeRGBA$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgImageFillUtils$$ = null === $DvtSvgImageFillUtils$$ || isNaN($DvtSvgImageFillUtils$$) ? 0 : Math.round($DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$ = null === $DvtSvgPatternFillUtils$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : Math.round($DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$ = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : Math.round($DvtSvgShadowUtils$$);
    $DvtSvgGradientUtils$$ = null === $DvtSvgGradientUtils$$ || isNaN($DvtSvgGradientUtils$$) ? 1 : $DvtSvgGradientUtils$$;
    return $dvt$$17$$.$ColorUtils$.$_RGBA$ + $DvtSvgShadowUtils$$ + "," + $DvtSvgPatternFillUtils$$ + "," + $DvtSvgImageFillUtils$$ + "," + $DvtSvgGradientUtils$$ + ")";
  };
  $dvt$$17$$.$ColorUtils$.$makePound$ = function $$dvt$$17$$$$ColorUtils$$$makePound$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = Math.round($DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$ = Math.round($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$ = Math.round($DvtSvgShadowUtils$$).toString(16);
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.toString(16);
    $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.toString(16);
    return "#" + (1 === $DvtSvgShadowUtils$$.length ? "0" : "") + $DvtSvgShadowUtils$$ + (1 === $DvtSvgPatternFillUtils$$.length ? "0" : "") + $DvtSvgPatternFillUtils$$ + (1 === $DvtSvgImageFillUtils$$.length ? "0" : "") + $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$ColorUtils$.$getPound$ = function $$dvt$$17$$$$ColorUtils$$$getPound$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    if ("#" === $DvtSvgShadowUtils$$.charAt(0)) {
      if (7 >= $DvtSvgShadowUtils$$.length) {
        return $DvtSvgShadowUtils$$;
      }
      $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_POUND$;
      $DvtSvgPatternFillUtils$$ += $DvtSvgShadowUtils$$.substring(3, 5) + $DvtSvgShadowUtils$$.substring(5, 7) + $DvtSvgShadowUtils$$.substring(7, 9);
    } else {
      $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgShadowUtils$$);
      var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgShadowUtils$$);
      $DvtSvgShadowUtils$$ = $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$makePound$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$ColorUtils$.$getRGB$ = function $$dvt$$17$$$$ColorUtils$$$getRGB$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$getColorFromName$($DvtSvgShadowUtils$$)) && ($DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$);
    if ("#" === $DvtSvgShadowUtils$$.charAt(0)) {
      $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_RGB$;
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length;
      if (7 < $DvtSvgImageFillUtils$$) {
        $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(5, 7), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(7, 9), 16);
      } else {
        if (7 === $DvtSvgImageFillUtils$$) {
          $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + "," + parseInt($DvtSvgShadowUtils$$.substr(5), 16);
        } else {
          if (4 === $DvtSvgImageFillUtils$$) {
            var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.substring(1, 2), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.substring(2, 3);
            $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(3);
            $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgImageFillUtils$$ + $DvtSvgImageFillUtils$$, 16) + "," + parseInt($DvtSvgGradientUtils$$ + $DvtSvgGradientUtils$$, 16) + "," + parseInt($DvtSvgShadowUtils$$ + $DvtSvgShadowUtils$$, 16);
          } else {
            5 === $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + ",0,1" : 3 === $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + ",0,0,1");
          }
        }
      }
      $DvtSvgPatternFillUtils$$ += ")";
    } else {
      $DvtSvgShadowUtils$$.substr(0, 5) === $dvt$$17$$.$ColorUtils$.$_RGBA$ ? ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.lastIndexOf(","), $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_RGB$, $DvtSvgPatternFillUtils$$ += $DvtSvgShadowUtils$$.substring(5, $DvtSvgImageFillUtils$$), $DvtSvgPatternFillUtils$$ += ")") : $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$;
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$ColorUtils$.$getRGBA$ = function $$dvt$$17$$$$ColorUtils$$$getRGBA$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$getColorFromName$($DvtSvgShadowUtils$$)) && ($DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$);
    if ("#" === $DvtSvgShadowUtils$$.charAt(0)) {
      $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_RGBA$;
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length;
      if (7 < $DvtSvgImageFillUtils$$) {
        $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(5, 7), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(7, 9), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) / 255;
      } else {
        if (7 === $DvtSvgImageFillUtils$$) {
          $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + "," + parseInt($DvtSvgShadowUtils$$.substr(5), 16) + ",1";
        } else {
          if (5 === $DvtSvgImageFillUtils$$) {
            $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + "," + parseInt($DvtSvgShadowUtils$$.substring(3, 5), 16) + ",0,1";
          } else {
            if (4 === $DvtSvgImageFillUtils$$) {
              var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.substring(1, 2), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.substring(2, 3);
              $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(3);
              $DvtSvgPatternFillUtils$$ += parseInt($DvtSvgImageFillUtils$$ + $DvtSvgImageFillUtils$$, 16) + "," + parseInt($DvtSvgGradientUtils$$ + $DvtSvgGradientUtils$$, 16) + "," + parseInt($DvtSvgShadowUtils$$ + $DvtSvgShadowUtils$$, 16) + ",1";
            } else {
              3 === $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ += parseInt($DvtSvgShadowUtils$$.substring(1, 3), 16) + ",0,0,1");
            }
          }
        }
      }
      $DvtSvgPatternFillUtils$$ += ")";
    } else {
      $DvtSvgShadowUtils$$.substr(0, 4) === $dvt$$17$$.$ColorUtils$.$_RGB$ ? ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_RGBA$, $DvtSvgPatternFillUtils$$ += $DvtSvgShadowUtils$$.substring(4, $DvtSvgShadowUtils$$.length - 1) + ",1)") : $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$;
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$ColorUtils$.$_setChannel$ = function $$dvt$$17$$$$ColorUtils$$$_setChannel$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if (void 0 === $DvtSvgPatternFillUtils$$ || void 0 === $DvtSvgImageFillUtils$$ || $DvtSvgPatternFillUtils$$ < $dvt$$17$$.$ColorUtils$.$_RED$ || $DvtSvgPatternFillUtils$$ > $dvt$$17$$.$ColorUtils$.$_ALPHA$) {
      return $DvtSvgShadowUtils$$;
    }
    var $DvtSvgGradientUtils$$ = $dvt$$17$$.$ColorUtils$.$getColorFromName$($DvtSvgShadowUtils$$);
    $DvtSvgGradientUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgGradientUtils$$);
    var $DvtSvgFilterUtils$$ = "#" === $DvtSvgShadowUtils$$.charAt(0), $DvtSvgFilterContext$$;
    $DvtSvgFilterUtils$$ ? ($DvtSvgGradientUtils$$ = [], $DvtSvgGradientUtils$$.push(parseInt($DvtSvgShadowUtils$$.substr(1, 2), 16)), $DvtSvgGradientUtils$$.push(parseInt($DvtSvgShadowUtils$$.substr(3, 2), 16)), $DvtSvgGradientUtils$$.push(parseInt($DvtSvgShadowUtils$$.substr(5, 2), 16)), $DvtSvgPatternFillUtils$$ === $dvt$$17$$.$ColorUtils$.$_ALPHA$ && ($DvtSvgGradientUtils$$.push($DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ = !1, $DvtSvgFilterContext$$ = !0)) : ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.substr(0, 
    5) === $dvt$$17$$.$ColorUtils$.$_RGBA$, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.substring($DvtSvgShadowUtils$$.indexOf("(") + 1, $DvtSvgShadowUtils$$.indexOf(")")).split(","), $DvtSvgFilterContext$$ || $DvtSvgPatternFillUtils$$ !== $dvt$$17$$.$ColorUtils$.$_ALPHA$ || ($DvtSvgGradientUtils$$.push($DvtSvgImageFillUtils$$), $DvtSvgFilterContext$$ = !0));
    $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$;
    return $DvtSvgFilterUtils$$ ? $dvt$$17$$.$ColorUtils$.$makePound$($DvtSvgGradientUtils$$[0], $DvtSvgGradientUtils$$[1], $DvtSvgGradientUtils$$[2]) : $DvtSvgFilterContext$$ ? $dvt$$17$$.$ColorUtils$.$makeRGBA$($DvtSvgGradientUtils$$[0], $DvtSvgGradientUtils$$[1], $DvtSvgGradientUtils$$[2], $DvtSvgGradientUtils$$[3]) : $dvt$$17$$.$ColorUtils$.$makeRGB$($DvtSvgGradientUtils$$[0], $DvtSvgGradientUtils$$[1], $DvtSvgGradientUtils$$[2]);
  };
  $dvt$$17$$.$ColorUtils$.$setRGB$ = function $$dvt$$17$$$$ColorUtils$$$setRGB$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgGradientUtils$$ = null === $DvtSvgGradientUtils$$ || isNaN($DvtSvgGradientUtils$$) ? 0 : $DvtSvgGradientUtils$$;
    $DvtSvgImageFillUtils$$ = null === $DvtSvgImageFillUtils$$ || isNaN($DvtSvgImageFillUtils$$) ? 0 : $DvtSvgImageFillUtils$$;
    $DvtSvgPatternFillUtils$$ = null === $DvtSvgPatternFillUtils$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$;
    if ("#" === $DvtSvgShadowUtils$$.charAt(0)) {
      return $dvt$$17$$.$ColorUtils$.$makePound$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    }
    var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.substr(0, 5) === $dvt$$17$$.$ColorUtils$.$_RGBA$;
    $DvtSvgPatternFillUtils$$ = ($DvtSvgFilterUtils$$ ? $dvt$$17$$.$ColorUtils$.$_RGBA$ : $dvt$$17$$.$ColorUtils$.$_RGB$) + $DvtSvgPatternFillUtils$$ + "," + $DvtSvgImageFillUtils$$ + "," + $DvtSvgGradientUtils$$;
    $DvtSvgFilterUtils$$ && ($DvtSvgPatternFillUtils$$ += "," + $DvtSvgShadowUtils$$.substring($DvtSvgShadowUtils$$.lastIndexOf(5, ",") + 1, $DvtSvgShadowUtils$$.indexOf(")")));
    return $DvtSvgPatternFillUtils$$ + ")";
  };
  $dvt$$17$$.$ColorUtils$.$rgb2hsl$ = function $$dvt$$17$$$$ColorUtils$$$rgb2hsl$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ /= 255;
    $DvtSvgPatternFillUtils$$ /= 255;
    $DvtSvgImageFillUtils$$ /= 255;
    var $DvtSvgGradientUtils$$ = Math.max($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ = Math.min($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$ + $DvtSvgFilterUtils$$, $dvt$$17$$, $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$ / 2;
    $DvtSvgGradientUtils$$ == $DvtSvgFilterUtils$$ ? $DvtSvgFilterContext$$ = $dvt$$17$$ = 0 : ($DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = .5 < $DvtSvgImplFactory$$ ? $DvtSvgFilterUtils$$ / (2 - $DvtSvgFilterContext$$) : $DvtSvgFilterUtils$$ / $DvtSvgFilterContext$$, $DvtSvgGradientUtils$$ == $DvtSvgShadowUtils$$ ? $dvt$$17$$ = ($DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$) / $DvtSvgFilterUtils$$ + ($DvtSvgPatternFillUtils$$ < $DvtSvgImageFillUtils$$ ? 
    6 : 0) : $DvtSvgGradientUtils$$ == $DvtSvgPatternFillUtils$$ ? $dvt$$17$$ = ($DvtSvgImageFillUtils$$ - $DvtSvgShadowUtils$$) / $DvtSvgFilterUtils$$ + 2 : $DvtSvgGradientUtils$$ == $DvtSvgImageFillUtils$$ && ($dvt$$17$$ = ($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$) / $DvtSvgFilterUtils$$ + 4), $dvt$$17$$ /= 6);
    return {$h$:360 * $dvt$$17$$, $s$:$DvtSvgFilterContext$$, $l$:$DvtSvgImplFactory$$};
  };
  $dvt$$17$$.$ColorUtils$.$hsl2rgb$ = function $$dvt$$17$$$$ColorUtils$$$hsl2rgb$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ /= 360;
    if (0 == $DvtSvgPatternFillUtils$$) {
      $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$;
    } else {
      var $DvtSvgGradientUtils$$ = .5 > $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ * (1 + $DvtSvgPatternFillUtils$$) : $DvtSvgImageFillUtils$$ + $DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$ * $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$ = 2 * $DvtSvgImageFillUtils$$ - $DvtSvgGradientUtils$$;
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_hue2rgb$($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$ + 1 / 3);
      $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$_hue2rgb$($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$);
      $DvtSvgShadowUtils$$ = $dvt$$17$$.$ColorUtils$.$_hue2rgb$($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$ - 1 / 3);
    }
    return {r:255 * $DvtSvgImageFillUtils$$, $g$:255 * $DvtSvgPatternFillUtils$$, $b$:255 * $DvtSvgShadowUtils$$};
  };
  $dvt$$17$$.$ColorUtils$.$_hue2rgb$ = function $$dvt$$17$$$$ColorUtils$$$_hue2rgb$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    0 > $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ += 1 : 1 < $DvtSvgImageFillUtils$$ && --$DvtSvgImageFillUtils$$;
    return $DvtSvgImageFillUtils$$ < 1 / 6 ? $DvtSvgShadowUtils$$ + 6 * ($DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$) * $DvtSvgImageFillUtils$$ : .5 > $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgImageFillUtils$$ < 2 / 3 ? $DvtSvgShadowUtils$$ + ($DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$) * (2 / 3 - $DvtSvgImageFillUtils$$) * 6 : $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ColorUtils$.$hsv2rgb$ = function $$dvt$$17$$$$ColorUtils$$$hsv2rgb$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$;
    if (0 == $DvtSvgImageFillUtils$$) {
      return {r:0, $g$:0, $v$:0};
    }
    $DvtSvgPatternFillUtils$$ /= 100;
    $DvtSvgImageFillUtils$$ /= 100;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ % 360 / 60;
    $dvt$$17$$ = Math.floor($DvtSvgShadowUtils$$);
    $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$ - $dvt$$17$$;
    $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$ * (1 - $DvtSvgPatternFillUtils$$);
    $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$ * (1 - $DvtSvgPatternFillUtils$$ * $DvtSvgImplFactory$$);
    $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$ * (1 - $DvtSvgPatternFillUtils$$ * (1 - $DvtSvgImplFactory$$));
    0 == $dvt$$17$$ ? ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$) : 1 == $dvt$$17$$ ? ($DvtSvgGradientUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$) : 2 == $dvt$$17$$ ? ($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$) : 
    3 == $dvt$$17$$ ? ($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$) : 4 == $dvt$$17$$ ? ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$) : 5 == $dvt$$17$$ && ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgFilterContext$$ = $DvtHtmlRichTooltipManager$$);
    $DvtSvgGradientUtils$$ = Math.floor(255 * $DvtSvgGradientUtils$$);
    $DvtSvgFilterUtils$$ = Math.floor(255 * $DvtSvgFilterUtils$$);
    $DvtSvgFilterContext$$ = Math.floor(255 * $DvtSvgFilterContext$$);
    return {r:$DvtSvgGradientUtils$$, $g$:$DvtSvgFilterUtils$$, $b$:$DvtSvgFilterContext$$};
  };
  $dvt$$17$$.$ColorUtils$.$rgb2hsv$ = function $$dvt$$17$$$$ColorUtils$$$rgb2hsv$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$;
    $DvtSvgShadowUtils$$ /= 255;
    $DvtSvgPatternFillUtils$$ /= 255;
    $DvtSvgImageFillUtils$$ /= 255;
    $DvtSvgGradientUtils$$ = Math.min($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$ = Math.max($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    if ($DvtSvgGradientUtils$$ == $DvtSvgFilterUtils$$) {
      return {$h$:void 0, $s$:0, $v$:100 * $DvtSvgFilterUtils$$};
    }
    $DvtSvgShadowUtils$$ = Math.floor(60 * (($DvtSvgShadowUtils$$ == $DvtSvgGradientUtils$$ ? 3 : $DvtSvgPatternFillUtils$$ == $DvtSvgGradientUtils$$ ? 5 : 1) - ($DvtSvgShadowUtils$$ == $DvtSvgGradientUtils$$ ? $DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$ : $DvtSvgPatternFillUtils$$ == $DvtSvgGradientUtils$$ ? $DvtSvgImageFillUtils$$ - $DvtSvgShadowUtils$$ : $DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$) / ($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$))) % 360;
    $DvtSvgGradientUtils$$ = Math.floor(($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$) / $DvtSvgFilterUtils$$ * 100);
    $DvtSvgFilterUtils$$ = Math.floor(100 * $DvtSvgFilterUtils$$);
    return {$h$:$DvtSvgShadowUtils$$, $s$:$DvtSvgGradientUtils$$, $v$:$DvtSvgFilterUtils$$};
  };
  $dvt$$17$$.$ColorUtils$.$adjustHSL$ = function $$dvt$$17$$$$ColorUtils$$$adjustHSL$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$ColorUtils$.$_hslCache$ || ($dvt$$17$$.$ColorUtils$.$_hslCache$ = new $dvt$$17$$.Cache(100));
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$ + ":0:" + $DvtSvgPatternFillUtils$$ + ":" + $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $dvt$$17$$.$ColorUtils$.$_hslCache$.get($DvtSvgGradientUtils$$);
    if (null != $DvtSvgFilterUtils$$) {
      return $DvtSvgFilterUtils$$;
    }
    var $DvtSvgFilterUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_RED$), $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_GREEN$), $DvtSvgImplFactory$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_BLUE$);
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$ColorUtils$.$_getChannel$($DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$_ALPHA$);
    $DvtSvgFilterUtils$$ = $dvt$$17$$.$ColorUtils$.$rgb2hsl$($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$hsl2rgb$(Math.min(Math.max(0, $DvtSvgFilterUtils$$.$h$ + 0), 360), Math.min(Math.max(0, $DvtSvgFilterUtils$$.$s$ + $DvtSvgPatternFillUtils$$), 1), Math.min(Math.max(0, $DvtSvgFilterUtils$$.$l$ + $DvtSvgImageFillUtils$$), 1));
    $DvtSvgFilterUtils$$ = 1 == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$ColorUtils$.$makePound$($DvtSvgPatternFillUtils$$.r, $DvtSvgPatternFillUtils$$.$g$, $DvtSvgPatternFillUtils$$.$b$) : $dvt$$17$$.$ColorUtils$.$makeRGBA$($DvtSvgPatternFillUtils$$.r, $DvtSvgPatternFillUtils$$.$g$, $DvtSvgPatternFillUtils$$.$b$, $DvtSvgShadowUtils$$);
    $dvt$$17$$.$ColorUtils$.$_hslCache$.put($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    return $DvtSvgFilterUtils$$;
  };
  $dvt$$17$$.$ColorUtils$.$interpolateColor$ = function $$dvt$$17$$$$ColorUtils$$$interpolateColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgShadowUtils$$), $DvtSvgFilterUtils$$ = $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgShadowUtils$$), $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgShadowUtils$$);
    var $DvtSvgImplFactory$$ = $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgPatternFillUtils$$), $DvtHtmlRichTooltipManager$$ = $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgPatternFillUtils$$), $DvtDomXmlParser$$ = $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgPatternFillUtils$$);
    $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgPatternFillUtils$$);
    return $dvt$$17$$.$ColorUtils$.$makeRGBA$(Math.round($dvt$$17$$.Math.$interpolateNumber$($DvtSvgGradientUtils$$, $DvtSvgImplFactory$$, $DvtSvgImageFillUtils$$)), Math.round($dvt$$17$$.Math.$interpolateNumber$($DvtSvgFilterUtils$$, $DvtHtmlRichTooltipManager$$, $DvtSvgImageFillUtils$$)), Math.round($dvt$$17$$.Math.$interpolateNumber$($DvtSvgFilterContext$$, $DvtDomXmlParser$$, $DvtSvgImageFillUtils$$)), $dvt$$17$$.Math.$interpolateNumber$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$));
  };
  $dvt$$17$$.$ColorUtils$.$inferColor$ = function $$dvt$$17$$$$ColorUtils$$$inferColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgShadowUtils$$ == $DvtSvgPatternFillUtils$$) {
      return $DvtSvgImageFillUtils$$;
    }
    if ($DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$) {
      return $DvtSvgPatternFillUtils$$;
    }
    var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgShadowUtils$$), $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$ == $DvtSvgFilterContext$$ ? $DvtSvgGradientUtils$$ = $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgImageFillUtils$$) : (0 == $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = 1), $DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$ / $DvtSvgFilterUtils$$ * $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgImageFillUtils$$));
    var $DvtSvgImplFactory$$, $DvtSvgFilterUtils$$ = $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgShadowUtils$$), $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$ == $DvtSvgFilterContext$$ ? $DvtSvgImplFactory$$ = $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgImageFillUtils$$) : (0 == $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = 1), $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$ / $DvtSvgFilterUtils$$ * $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgImageFillUtils$$));
    $DvtSvgFilterUtils$$ = $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgShadowUtils$$);
    $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$ == $DvtSvgFilterContext$$ ? $DvtSvgShadowUtils$$ = $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgImageFillUtils$$) : (0 == $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = 1), $DvtSvgShadowUtils$$ = $DvtSvgFilterContext$$ / $DvtSvgFilterUtils$$ * $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgImageFillUtils$$));
    return $dvt$$17$$.$ColorUtils$.$makePound$($DvtSvgGradientUtils$$, $DvtSvgImplFactory$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$ColorUtils$.$getContrastingTextColor$ = function $$dvt$$17$$$$ColorUtils$$$getContrastingTextColor$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgShadowUtils$$);
    return 128 <= (299 * $DvtSvgPatternFillUtils$$ + 587 * $DvtSvgImageFillUtils$$ + 114 * $DvtSvgShadowUtils$$) / 1E3 ? "#000000" : "#FFFFFF";
  };
  $dvt$$17$$.$ColorUtils$.$fixColorForPlatform$ = function $$dvt$$17$$$$ColorUtils$$$fixColorForPlatform$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!$DvtSvgShadowUtils$$) {
      return null;
    }
    "#" == $DvtSvgShadowUtils$$.charAt(0) && 8 < $DvtSvgShadowUtils$$.length && ($DvtSvgShadowUtils$$ = $dvt$$17$$.$ColorUtils$.$getRGBA$($DvtSvgShadowUtils$$));
    var $DvtSvgImageFillUtils$$ = {};
    $dvt$$17$$.$Agent$.$isEnvironmentBatik$() && -1 !== $DvtSvgShadowUtils$$.indexOf("rgba") ? ($DvtSvgImageFillUtils$$.color = $dvt$$17$$.$ColorUtils$.$getRGB$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.alpha = null != $DvtSvgPatternFillUtils$$ ? $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgShadowUtils$$) * $DvtSvgPatternFillUtils$$ : $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgShadowUtils$$)) : ($DvtSvgImageFillUtils$$.color = $DvtSvgShadowUtils$$, null != $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$.alpha = 
    $DvtSvgPatternFillUtils$$));
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$ClipPath$ = function $$dvt$$17$$$$ClipPath$$($DvtSvgShadowUtils$$) {
    this.$_id$ = ($DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ + "$" : "") + "cp" + $dvt$$17$$.$ClipPath$.$_uniqueSeed$++;
    this.$_regions$ = [];
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ClipPath$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ClipPath$.$_uniqueSeed$ = 0;
  $dvt$$17$$.$ClipPath$.NONE = 0;
  $dvt$$17$$.$ClipPath$.$RECT$ = 1;
  $dvt$$17$$.$ClipPath$.$PATH$ = 2;
  $dvt$$17$$.$ClipPath$.$POLYGON$ = 3;
  $dvt$$17$$.$ClipPath$.$ELLIPSE$ = 4;
  $dvt$$17$$.$ClipPath$.$CIRCLE$ = 5;
  $dvt$$17$$.$ClipPath$.prototype.$_addRegion$ = function $$dvt$$17$$$$ClipPath$$$$_addRegion$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && this.$_regions$.push($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$ClipPath$.prototype.getId = function $$dvt$$17$$$$ClipPath$$$getId$() {
    return this.$_id$;
  };
  $dvt$$17$$.$ClipPath$.prototype.$addRect$ = function $$dvt$$17$$$$ClipPath$$$$addRect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$ = {};
    $DvtSvgImplFactory$$.type = $dvt$$17$$.$ClipPath$.$RECT$;
    $DvtSvgImplFactory$$.x = $DvtSvgShadowUtils$$;
    $DvtSvgImplFactory$$.y = $DvtSvgPatternFillUtils$$;
    $DvtSvgImplFactory$$.$w$ = $DvtSvgImageFillUtils$$;
    $DvtSvgImplFactory$$.$h$ = $DvtSvgGradientUtils$$;
    $DvtSvgImplFactory$$.$rx$ = $DvtSvgFilterUtils$$;
    $DvtSvgImplFactory$$.$ry$ = $DvtSvgFilterContext$$;
    this.$_addRegion$($DvtSvgImplFactory$$);
  };
  $dvt$$17$$.$ClipPath$.prototype.$addCircle$ = function $$dvt$$17$$$$ClipPath$$$$addCircle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = {};
    $DvtSvgGradientUtils$$.type = $dvt$$17$$.$ClipPath$.$CIRCLE$;
    $DvtSvgGradientUtils$$.$cx$ = $DvtSvgShadowUtils$$;
    $DvtSvgGradientUtils$$.$cy$ = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.r = $DvtSvgImageFillUtils$$;
    this.$_addRegion$($DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$ClipPath$.prototype.$addPolygon$ = function $$dvt$$17$$$$ClipPath$$$$addPolygon$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = {};
    $DvtSvgPatternFillUtils$$.type = $dvt$$17$$.$ClipPath$.$POLYGON$;
    $DvtSvgPatternFillUtils$$.$points$ = $DvtSvgShadowUtils$$;
    this.$_addRegion$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ClipPath$.prototype.$addPath$ = function $$dvt$$17$$$$ClipPath$$$$addPath$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = {};
    $DvtSvgPatternFillUtils$$.type = $dvt$$17$$.$ClipPath$.$PATH$;
    $DvtSvgPatternFillUtils$$.d = $DvtSvgShadowUtils$$;
    this.$_addRegion$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Mask$ = function $$dvt$$17$$$$Mask$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_id$ = "mask" + $dvt$$17$$.$Mask$.$_uniqueSeed$++;
    this.$_gradient$ = $DvtSvgShadowUtils$$;
    this.$_bounds$ = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Mask$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Mask$.$_uniqueSeed$ = 0;
  $dvt$$17$$.$Mask$.prototype.getId = function $$dvt$$17$$$$Mask$$$getId$() {
    return this.$_id$;
  };
  $dvt$$17$$.$Mask$.prototype.$getBounds$ = function $$dvt$$17$$$$Mask$$$$getBounds$$() {
    return this.$_bounds$;
  };
  $dvt$$17$$.$Fill$ = function $$dvt$$17$$$$Fill$$() {
    this.$_Init$();
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Fill$, $DvtLockable$$);
  $dvt$$17$$.$Fill$.NONE = 0;
  $dvt$$17$$.$Fill$.$COLOR$ = 1;
  $dvt$$17$$.$Fill$.$GRADIENT$ = 2;
  $dvt$$17$$.$Fill$.$PATTERN$ = 3;
  $dvt$$17$$.$Fill$.IMAGE = 4;
  $dvt$$17$$.$Fill$.prototype.$_Init$ = function $$dvt$$17$$$$Fill$$$$_Init$$() {
    $dvt$$17$$.$Fill$.$superclass$.$_Init$.call(this);
  };
  $dvt$$17$$.$Fill$.prototype.getId = function $$dvt$$17$$$$Fill$$$getId$() {
    return this.$_id$;
  };
  $dvt$$17$$.$Fill$.prototype.setId = function $$dvt$$17$$$$Fill$$$setId$($DvtSvgShadowUtils$$) {
    this.$_id$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Fill$.prototype.$equals$ = function $$dvt$$17$$$$Fill$$$$equals$$() {
    return !0;
  };
  $dvt$$17$$.$SolidFill$ = function $$dvt$$17$$$$SolidFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SolidFill$, $dvt$$17$$.$Fill$);
  $dvt$$17$$.$SolidFill$.prototype.clone = function $$dvt$$17$$$$SolidFill$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$SolidFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$SolidFill$.prototype.$_Init$ = function $$dvt$$17$$$$SolidFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$17$$.$SolidFill$.$superclass$.$_Init$.call(this);
    this.$_fc$ = $DvtSvgShadowUtils$$;
    this.$_fa$ = null != $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : 1;
  };
  $dvt$$17$$.$SolidFill$.prototype.$getColor$ = function $$dvt$$17$$$$SolidFill$$$$getColor$$() {
    return this.$_fc$;
  };
  $dvt$$17$$.$SolidFill$.prototype.$setColor$ = function $$dvt$$17$$$$SolidFill$$$$setColor$$($DvtSvgShadowUtils$$) {
    this.$_bLocked$ || (this.$_fc$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$SolidFill$.prototype.$getAlpha$ = function $$dvt$$17$$$$SolidFill$$$$getAlpha$$() {
    return this.$_fa$;
  };
  $dvt$$17$$.$SolidFill$.prototype.$setAlpha$ = function $$dvt$$17$$$$SolidFill$$$$setAlpha$$($DvtSvgShadowUtils$$) {
    this.$_bLocked$ || (this.$_fa$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$SolidFill$.prototype.$mergeProps$ = function $$dvt$$17$$$$SolidFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$SolidFill$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_fc$ = this.$_fc$;
    $DvtSvgShadowUtils$$.$_fa$ = this.$_fa$;
  };
  $dvt$$17$$.$SolidFill$.$invisibleFill$ = function $$dvt$$17$$$$SolidFill$$$invisibleFill$$() {
    $dvt$$17$$.$SolidFill$.$_INVISIBLE_FILL$ || ($dvt$$17$$.$SolidFill$.$_INVISIBLE_FILL$ = new $dvt$$17$$.$SolidFill$("rgba(0,0,0,0)"));
    return $dvt$$17$$.$SolidFill$.$_INVISIBLE_FILL$;
  };
  $dvt$$17$$.$SolidFill$.prototype.$equals$ = function $$dvt$$17$$$$SolidFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$SolidFill$ && $DvtSvgShadowUtils$$.$_fc$ == this.$_fc$ && $DvtSvgShadowUtils$$.$_fa$ == this.$_fa$ ? $dvt$$17$$.$SolidFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : !1;
  };
  $dvt$$17$$.$Stroke$ = function $$dvt$$17$$$$Stroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Stroke$, $DvtLockable$$);
  $dvt$$17$$.$Stroke$.$SOLID$ = 0;
  $dvt$$17$$.$Stroke$.$DASHED$ = 1;
  $dvt$$17$$.$Stroke$.$DOTTED$ = 2;
  $dvt$$17$$.$Stroke$.$DASHED_DOTTED$ = 3;
  $dvt$$17$$.$Stroke$.$SQUARE$ = "square";
  $dvt$$17$$.$Stroke$.$ROUND$ = "round";
  $dvt$$17$$.$Stroke$.$BEVEL$ = "bevel";
  $dvt$$17$$.$Stroke$.$MITER$ = "miter";
  $dvt$$17$$.$Stroke$.$BUTT$ = "butt";
  $dvt$$17$$.$Stroke$.$convertTypeString$ = function $$dvt$$17$$$$Stroke$$$convertTypeString$$($DvtSvgShadowUtils$$) {
    return "solid" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$Stroke$.$SOLID$ : "dashed" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$Stroke$.$DASHED$ : "dotted" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$Stroke$.$DOTTED$ : $dvt$$17$$.$Stroke$.$SOLID$;
  };
  $dvt$$17$$.$Stroke$.prototype.$_Init$ = function $$dvt$$17$$$$Stroke$$$$_Init$$($DvtSvgShadowUtils$$) {
    this.$_sw$ = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 1 : $DvtSvgShadowUtils$$;
    $dvt$$17$$.$Stroke$.$superclass$.$_Init$.call(this);
    this.$_bFixedWidth$ = !1;
  };
  $dvt$$17$$.$Stroke$.prototype.getId = function $$dvt$$17$$$$Stroke$$$getId$() {
    return this.$_id$;
  };
  $dvt$$17$$.$Stroke$.prototype.setId = function $$dvt$$17$$$$Stroke$$$setId$($DvtSvgShadowUtils$$) {
    this.$_id$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Stroke$.prototype.$mergeProps$ = function $$dvt$$17$$$$Stroke$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_sw$ = this.$_sw$;
    $DvtSvgShadowUtils$$.$_st$ = this.$_st$;
    $DvtSvgShadowUtils$$.$_sd$ = this.$_sd$;
    $DvtSvgShadowUtils$$.$_sdo$ = this.$_sdo$;
    $DvtSvgShadowUtils$$.$_sj$ = this.$_sj$;
    $DvtSvgShadowUtils$$.$_se$ = this.$_se$;
    $DvtSvgShadowUtils$$.$_sm$ = this.$_sm$;
    $DvtSvgShadowUtils$$.$_bFixedWidth$ = this.$_bFixedWidth$;
    $dvt$$17$$.$Stroke$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Stroke$.prototype.$setStyle$ = function $$dvt$$17$$$$Stroke$$$$setStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_bLocked$ || ($DvtSvgShadowUtils$$ && !$DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Stroke$.$getDefaultDash$($DvtSvgShadowUtils$$, this.$_sw$)), this.$_st$ = $DvtSvgShadowUtils$$, this.$_sd$ = $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ && (this.$_sj$ = $DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$ && (this.$_se$ = $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$ && (this.$_sm$ = $DvtSvgFilterUtils$$));
  };
  $dvt$$17$$.$Stroke$.prototype.$setMiterLimit$ = function $$dvt$$17$$$$Stroke$$$$setMiterLimit$$() {
    this.$_bLocked$ || (this.$_sm$ = 1);
  };
  $dvt$$17$$.$Stroke$.prototype.$getType$ = function $$dvt$$17$$$$Stroke$$$$getType$$() {
    return this.$_st$;
  };
  $dvt$$17$$.$Stroke$.prototype.$setType$ = function $$dvt$$17$$$$Stroke$$$$setType$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_bLocked$ || ($DvtSvgShadowUtils$$ === $dvt$$17$$.$Stroke$.$SOLID$ ? $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ = null : $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Stroke$.$getDefaultDash$($DvtSvgShadowUtils$$, this.$_sw$)), this.$_st$ = $DvtSvgShadowUtils$$, this.$_sd$ = $DvtSvgPatternFillUtils$$, this.$_sdo$ = $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Stroke$.prototype.getWidth = function $$dvt$$17$$$$Stroke$$$getWidth$() {
    return this.$_sw$;
  };
  $dvt$$17$$.$Stroke$.prototype.$setWidth$ = function $$dvt$$17$$$$Stroke$$$$setWidth$$($DvtSvgShadowUtils$$) {
    this.$_bLocked$ || (this.$_sw$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Stroke$.prototype.$setFixedWidth$ = function $$dvt$$17$$$$Stroke$$$$setFixedWidth$$($DvtSvgShadowUtils$$) {
    this.$_bFixedWidth$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Stroke$.$getDefaultDash$ = function $$dvt$$17$$$$Stroke$$$getDefaultDash$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = Math.ceil($DvtSvgPatternFillUtils$$);
    var $DvtSvgImageFillUtils$$ = Math.max(6, 2 * $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = Math.max(2, $DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$ = Math.floor(($DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$) / 2);
    return $DvtSvgShadowUtils$$ == $dvt$$17$$.$Stroke$.$DASHED$ ? "" + $DvtSvgImageFillUtils$$ : $DvtSvgShadowUtils$$ == $dvt$$17$$.$Stroke$.$DOTTED$ ? "" + $DvtSvgGradientUtils$$ : $DvtSvgShadowUtils$$ == $dvt$$17$$.$Stroke$.$DASHED_DOTTED$ ? "" + $DvtSvgImageFillUtils$$ + "," + $DvtSvgFilterUtils$$ + "," + $DvtSvgGradientUtils$$ + "," + $DvtSvgFilterUtils$$ : null;
  };
  $dvt$$17$$.$GradientStroke$ = function $$dvt$$17$$$$GradientStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$GradientStroke$, $dvt$$17$$.$Stroke$);
  $dvt$$17$$.$GradientStroke$.prototype.$getAlpha$ = function $$dvt$$17$$$$GradientStroke$$$$getAlpha$$() {
    return 1;
  };
  $dvt$$17$$.$GradientStroke$.prototype.$getAlphas$ = function $$dvt$$17$$$$GradientStroke$$$$getAlphas$$() {
    return this.$_arAlphas$;
  };
  $dvt$$17$$.$GradientStroke$.prototype.$getBounds$ = function $$dvt$$17$$$$GradientStroke$$$$getBounds$$() {
    return this.$_arBounds$;
  };
  $dvt$$17$$.$GradientStroke$.prototype.$_Init$ = function $$dvt$$17$$$$GradientStroke$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$17$$.$GradientStroke$.$superclass$.$_Init$.call(this, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    this.$_arColors$ = $DvtSvgShadowUtils$$;
    this.$_arBounds$ = $DvtSvgGradientUtils$$;
    $DvtSvgGradientUtils$$ = 0;
    $DvtSvgShadowUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.length - 1);
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$GradientStroke$.$createDefaultAlphas$($DvtSvgGradientUtils$$));
    this.$_arAlphas$ = $DvtSvgPatternFillUtils$$;
    $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$GradientStroke$.$createDefaultStops$($DvtSvgGradientUtils$$));
    this.$_arStops$ = $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$GradientStroke$.$createDefaultAlphas$ = function $$dvt$$17$$$$GradientStroke$$$createDefaultAlphas$$($DvtSvgShadowUtils$$) {
    if (0 > $DvtSvgShadowUtils$$) {
      return null;
    }
    for (var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push(1);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$GradientStroke$.$createDefaultStops$ = function $$dvt$$17$$$$GradientStroke$$$createDefaultStops$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 1 / $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$ = 0;
    do {
      $DvtSvgPatternFillUtils$$.push($DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ += $DvtSvgImageFillUtils$$;
    } while (0 < --$DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$.push(1);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$GradientStroke$.prototype.$mergeProps$ = function $$dvt$$17$$$$GradientStroke$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_arColors$ = this.$_arColors$;
    $DvtSvgShadowUtils$$.$_arStops$ = this.$_arStops$;
    $DvtSvgShadowUtils$$.$_arAlphas$ = this.$_arAlphas$;
    $DvtSvgShadowUtils$$.$_arBounds$ = this.$_arBounds$;
    $dvt$$17$$.$GradientStroke$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$LinearGradientStroke$ = function $$dvt$$17$$$$LinearGradientStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$LinearGradientStroke$, $dvt$$17$$.$GradientStroke$);
  $dvt$$17$$.$LinearGradientStroke$.prototype.clone = function $$dvt$$17$$$$LinearGradientStroke$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$LinearGradientStroke$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$LinearGradientStroke$.prototype.$_Init$ = function $$dvt$$17$$$$LinearGradientStroke$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $dvt$$17$$.$LinearGradientStroke$.$superclass$.$_Init$.call(this, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
    this.$_angle$ = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$LinearGradientStroke$.prototype.$getAngle$ = function $$dvt$$17$$$$LinearGradientStroke$$$$getAngle$$() {
    return this.$_angle$;
  };
  $dvt$$17$$.$LinearGradientStroke$.prototype.$mergeProps$ = function $$dvt$$17$$$$LinearGradientStroke$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$LinearGradientStroke$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_angle$ = this.$_angle$;
  };
  $dvt$$17$$.$LinearGradientStroke$.prototype.$setAngle$ = function $$dvt$$17$$$$LinearGradientStroke$$$$setAngle$$($DvtSvgShadowUtils$$) {
    this.$_bLocked$ || 0 === $DvtSvgShadowUtils$$ || (360 < Math.abs($DvtSvgShadowUtils$$) && ($DvtSvgShadowUtils$$ %= 360), this.$_angle$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$SolidStroke$ = function $$dvt$$17$$$$SolidStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SolidStroke$, $dvt$$17$$.$Stroke$);
  $dvt$$17$$.$SolidStroke$.prototype.clone = function $$dvt$$17$$$$SolidStroke$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$SolidStroke$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$SolidStroke$.prototype.$_Init$ = function $$dvt$$17$$$$SolidStroke$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_sc$ = $DvtSvgShadowUtils$$;
    this.$_sa$ = null != $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : 1;
    this.$_st$ = $dvt$$17$$.$Stroke$.$SOLID$;
    $dvt$$17$$.$SolidStroke$.$superclass$.$_Init$.call(this, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$SolidStroke$.prototype.$getAlpha$ = function $$dvt$$17$$$$SolidStroke$$$$getAlpha$$() {
    return this.$_sa$;
  };
  $dvt$$17$$.$SolidStroke$.prototype.$setAlpha$ = function $$dvt$$17$$$$SolidStroke$$$$setAlpha$$($DvtSvgShadowUtils$$) {
    this.$bLocked$ || (this.$_sa$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$SolidStroke$.prototype.$getColor$ = function $$dvt$$17$$$$SolidStroke$$$$getColor$$() {
    return this.$_sc$;
  };
  $dvt$$17$$.$SolidStroke$.prototype.$setColor$ = function $$dvt$$17$$$$SolidStroke$$$$setColor$$($DvtSvgShadowUtils$$) {
    this.$bLocked$ || (this.$_sc$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$SolidStroke$.prototype.$mergeProps$ = function $$dvt$$17$$$$SolidStroke$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$SolidStroke$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_sc$ = this.$_sc$;
    $DvtSvgShadowUtils$$.$_sa$ = this.$_sa$;
  };
  $dvt$$17$$.$Shadow$ = function $$dvt$$17$$$$Shadow$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Shadow$, $DvtBaseDrawEffect$$);
  $dvt$$17$$.$Shadow$.$_uniqueId$ = 1;
  $dvt$$17$$.$Shadow$.prototype.$_Init$ = function $$dvt$$17$$$$Shadow$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    $dvt$$17$$.$Shadow$.$superclass$.$_Init$.call(this);
    this.$_rgba$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : "rgba(48,48,48,0.35)";
    this.$_distance$ = null === $DvtSvgPatternFillUtils$$ || isNaN($DvtSvgPatternFillUtils$$) ? 4 : $DvtSvgPatternFillUtils$$;
    this.$_strength$ = null === $DvtSvgFilterContext$$ || isNaN($DvtSvgFilterContext$$) ? 1 : $DvtSvgFilterContext$$;
    this.$_blurX$ = null === $DvtSvgImageFillUtils$$ || isNaN($DvtSvgImageFillUtils$$) ? 4 : $DvtSvgImageFillUtils$$;
    this.$_blurY$ = null === $DvtSvgGradientUtils$$ || isNaN($DvtSvgGradientUtils$$) ? 4 : $DvtSvgGradientUtils$$;
    this.$_angle$ = null === $DvtSvgFilterUtils$$ || isNaN($DvtSvgFilterUtils$$) ? 45 : $DvtSvgFilterUtils$$;
    this.$_quality$ = null === $DvtSvgImplFactory$$ || isNaN($DvtSvgImplFactory$$) ? 1 : $DvtSvgImplFactory$$;
    this.$_bInner$ = $DvtHtmlRichTooltipManager$$ ? !0 : !1;
    this.$_bHide$ = this.$_bKnockout$ = !1;
    this.$_Id$ = "ds" + $dvt$$17$$.$Shadow$.$_uniqueId$++;
  };
  $dvt$$17$$.$Shadow$.prototype.clone = function $$dvt$$17$$$$Shadow$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$Shadow$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Shadow$.prototype.$mergeProps$ = function $$dvt$$17$$$$Shadow$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$Shadow$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_rgba$ = this.$_rgba$;
    $DvtSvgShadowUtils$$.$_distance$ = this.$_distance$;
    $DvtSvgShadowUtils$$.$_strength$ = this.$_strength$;
    $DvtSvgShadowUtils$$.$_blurX$ = this.$_blurX$;
    $DvtSvgShadowUtils$$.$_blurY$ = this.$_blurY$;
    $DvtSvgShadowUtils$$.$_angle$ = this.$_angle$;
    $DvtSvgShadowUtils$$.$_quality$ = this.$_quality$;
    $DvtSvgShadowUtils$$.$_bInner$ = this.$_bInner$;
    $DvtSvgShadowUtils$$.$_bKnockout$ = this.$_bKnockout$;
    $DvtSvgShadowUtils$$.$_bHide$ = this.$_bHide$;
    $DvtSvgShadowUtils$$.$_Id$ = this.$_Id$;
  };
  $dvt$$17$$.$GradientFill$ = function $$dvt$$17$$$$GradientFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$GradientFill$, $dvt$$17$$.$Fill$);
  $dvt$$17$$.$GradientFill$.prototype.$getAlphas$ = function $$dvt$$17$$$$GradientFill$$$$getAlphas$$() {
    return this.$_arAlphas$;
  };
  $dvt$$17$$.$GradientFill$.prototype.$getBounds$ = function $$dvt$$17$$$$GradientFill$$$$getBounds$$() {
    return this.$_arBounds$;
  };
  $dvt$$17$$.$GradientFill$.prototype.$_Init$ = function $$dvt$$17$$$$GradientFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$17$$.$GradientFill$.$superclass$.$_Init$.call(this);
    this.$_arColors$ = $DvtSvgShadowUtils$$;
    this.$_arBounds$ = $DvtSvgGradientUtils$$;
    if (!$DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = [], $DvtSvgShadowUtils$$)) {
      for ($DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
        $DvtSvgPatternFillUtils$$.push(1);
      }
    }
    this.$_arAlphas$ = $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.length - 1 : 0;
    if (!$DvtSvgImageFillUtils$$) {
      $DvtSvgImageFillUtils$$ = [];
      $DvtSvgPatternFillUtils$$ = 0 < $DvtSvgShadowUtils$$ ? 1 / $DvtSvgShadowUtils$$ : 0;
      $DvtSvgGradientUtils$$ = 0;
      do {
        $DvtSvgImageFillUtils$$.push($DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ += $DvtSvgPatternFillUtils$$;
      } while (0 < --$DvtSvgShadowUtils$$);
      $DvtSvgImageFillUtils$$.push(1);
    }
    this.$_arStops$ = $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$GradientFill$.prototype.$mergeProps$ = function $$dvt$$17$$$$GradientFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_arColors$ = this.$_arColors$;
    $DvtSvgShadowUtils$$.$_arStops$ = this.$_arStops$;
    $DvtSvgShadowUtils$$.$_arAlphas$ = this.$_arAlphas$;
    $DvtSvgShadowUtils$$.$_arBounds$ = this.$_arBounds$;
    $dvt$$17$$.$GradientFill$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$GradientFill$.prototype.$equals$ = function $$dvt$$17$$$$GradientFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$GradientFill$ && $dvt$$17$$.$ArrayUtils$.$equals$(this.$_arColors$, $DvtSvgShadowUtils$$.$_arColors$) && $dvt$$17$$.$ArrayUtils$.$equals$(this.$_arStops$, $DvtSvgShadowUtils$$.$_arStops$) && $dvt$$17$$.$ArrayUtils$.$equals$(this.$_arAlphas$, $DvtSvgShadowUtils$$.$_arAlphas$) && $dvt$$17$$.$ArrayUtils$.$equals$(this.$_arBounds$, $DvtSvgShadowUtils$$.$_arBounds$) ? $dvt$$17$$.$GradientFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : 
    !1;
  };
  $dvt$$17$$.$LinearGradientFill$ = function $$dvt$$17$$$$LinearGradientFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$LinearGradientFill$, $dvt$$17$$.$GradientFill$);
  $dvt$$17$$.$LinearGradientFill$.prototype.clone = function $$dvt$$17$$$$LinearGradientFill$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$LinearGradientFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$LinearGradientFill$.prototype.$_Init$ = function $$dvt$$17$$$$LinearGradientFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$17$$.$LinearGradientFill$.$superclass$.$_Init$.call(this, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_angle$ = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$LinearGradientFill$.prototype.$getAngle$ = function $$dvt$$17$$$$LinearGradientFill$$$$getAngle$$() {
    return this.$_angle$;
  };
  $dvt$$17$$.$LinearGradientFill$.prototype.clone = function $$dvt$$17$$$$LinearGradientFill$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$LinearGradientFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$LinearGradientFill$.prototype.$mergeProps$ = function $$dvt$$17$$$$LinearGradientFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$LinearGradientFill$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_angle$ = this.$_angle$;
  };
  $dvt$$17$$.$LinearGradientFill$.prototype.$setAngle$ = function $$dvt$$17$$$$LinearGradientFill$$$$setAngle$$($DvtSvgShadowUtils$$) {
    this.$_bLocked$ || 0 === $DvtSvgShadowUtils$$ || (360 < Math.abs($DvtSvgShadowUtils$$) && ($DvtSvgShadowUtils$$ %= 360), this.$_angle$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$LinearGradientFill$.prototype.$equals$ = function $$dvt$$17$$$$LinearGradientFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$LinearGradientFill$ && $DvtSvgShadowUtils$$.$_angle$ == this.$_angle$ ? $dvt$$17$$.$LinearGradientFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : !1;
  };
  $dvt$$17$$.$ImageFill$ = function $$dvt$$17$$$$ImageFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ImageFill$, $dvt$$17$$.$Fill$);
  $dvt$$17$$.$ImageFill$.prototype.$getSrc$ = function $$dvt$$17$$$$ImageFill$$$$getSrc$$() {
    return this.$_src$;
  };
  $dvt$$17$$.$ImageFill$.prototype.$_Init$ = function $$dvt$$17$$$$ImageFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$ImageFill$.$superclass$.$_Init$.call(this);
    this.$_src$ = $DvtSvgShadowUtils$$;
    this.$_bound$ = $DvtSvgPatternFillUtils$$;
    this.$_repeat$ = $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$ImageFill$.prototype.clone = function $$dvt$$17$$$$ImageFill$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$ImageFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ImageFill$.prototype.$mergeProps$ = function $$dvt$$17$$$$ImageFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_src$ = this.$_src$;
    $DvtSvgShadowUtils$$.$_bound$ = this.$_bound$;
    $DvtSvgShadowUtils$$.$_repeat$ = this.$_repeat$;
    $dvt$$17$$.$ImageFill$.$superclass$.$mergeProps$.call(this);
  };
  $dvt$$17$$.$ImageFill$.prototype.$equals$ = function $$dvt$$17$$$$ImageFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ImageFill$ && $DvtSvgShadowUtils$$.$_src$ == this.$_src$ && $DvtSvgShadowUtils$$.$_repeat$ == this.$_repeat$ && (this.$_bound$ && $DvtSvgShadowUtils$$.$_bound$ && this.$_bound$.x == $DvtSvgShadowUtils$$.bound.x && this.$_bound$.y == $DvtSvgShadowUtils$$.bound.y && this.$_bound$.$w$ == $DvtSvgShadowUtils$$.bound.$w$ && this.$_bound$.$h$ == $DvtSvgShadowUtils$$.bound.$h$ || !this.$_bound$ && !$DvtSvgShadowUtils$$.$_bound$) ? $dvt$$17$$.$ImageFill$.$superclass$.$equals$.call(this, 
    $DvtSvgShadowUtils$$) : !1;
  };
  $dvt$$17$$.$PatternFill$ = function $$dvt$$17$$$$PatternFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$PatternFill$, $dvt$$17$$.$Fill$);
  $dvt$$17$$.$PatternFill$.$SM_DIAG_UP_LT$ = "sDUL";
  $dvt$$17$$.$PatternFill$.$LG_DIAG_UP_LT$ = "lDUL";
  $dvt$$17$$.$PatternFill$.$SM_DIAG_UP_RT$ = "sDUR";
  $dvt$$17$$.$PatternFill$.$LG_DIAG_UP_RT$ = "lDUR";
  $dvt$$17$$.$PatternFill$.$SM_CROSSHATCH$ = "sC";
  $dvt$$17$$.$PatternFill$.$LG_CROSSHATCH$ = "lC";
  $dvt$$17$$.$PatternFill$.$SM_CHECK$ = "sCh";
  $dvt$$17$$.$PatternFill$.$LG_CHECK$ = "lCh";
  $dvt$$17$$.$PatternFill$.$SM_TRIANGLE_CHECK$ = "sTCh";
  $dvt$$17$$.$PatternFill$.$LG_TRIANGLE_CHECK$ = "lTCh";
  $dvt$$17$$.$PatternFill$.$SM_DIAMOND_CHECK$ = "sDCh";
  $dvt$$17$$.$PatternFill$.$LG_DIAMOND_CHECK$ = "lDCh";
  $dvt$$17$$.$PatternFill$.prototype.Init = function $$dvt$$17$$$$PatternFill$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$PatternFill$.$superclass$.$_Init$.call(this);
    this.$_pattern$ = $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$_convertPatternValue$($DvtSvgShadowUtils$$) : $dvt$$17$$.$PatternFill$.$SM_DIAG_UP_LT$;
    this.$_fillColor$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : "#000000";
    this.$_backgroundColor$ = $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : "#ffffff";
  };
  $dvt$$17$$.$PatternFill$.prototype.$getPattern$ = function $$dvt$$17$$$$PatternFill$$$$getPattern$$() {
    return this.$_pattern$;
  };
  $dvt$$17$$.$PatternFill$.prototype.$getColor$ = function $$dvt$$17$$$$PatternFill$$$$getColor$$() {
    return this.$_fillColor$;
  };
  $dvt$$17$$.$PatternFill$.prototype.$getBackgroundColor$ = function $$dvt$$17$$$$PatternFill$$$$getBackgroundColor$$() {
    return this.$_backgroundColor$;
  };
  $dvt$$17$$.$PatternFill$.prototype.clone = function $$dvt$$17$$$$PatternFill$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$PatternFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$PatternFill$.prototype.$mergeProps$ = function $$dvt$$17$$$$PatternFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$_pattern$ = this.$_pattern$;
    $DvtSvgShadowUtils$$.$_fillColor$ = this.$_fillColor$;
    $DvtSvgShadowUtils$$.$_backgroundColor$ = this.$_backgroundColor$;
    $dvt$$17$$.$PatternFill$.$superclass$.$mergeProps$.call(this);
  };
  $dvt$$17$$.$PatternFill$.prototype.$equals$ = function $$dvt$$17$$$$PatternFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$PatternFill$ && $DvtSvgShadowUtils$$.$_pattern$ == this.$_pattern$ && $DvtSvgShadowUtils$$.$_fillColor$ == this.$_fillColor$ && $DvtSvgShadowUtils$$.$_backgroundColor$ == this.$_backgroundColor$ ? $dvt$$17$$.$PatternFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : !1;
  };
  $dvt$$17$$.$PatternFill$.prototype.$getMatrix$ = function $$dvt$$17$$$$PatternFill$$$$getMatrix$$() {
    return this.$_matrix$ ? this.$_matrix$ : new $dvt$$17$$.$Matrix$;
  };
  $dvt$$17$$.$PatternFill$.prototype.$setMatrix$ = function $$dvt$$17$$$$PatternFill$$$$setMatrix$$($DvtSvgShadowUtils$$) {
    (this.$_matrix$ = $DvtSvgShadowUtils$$) && !this.$_matrix$.$_bLocked$ && this.$_matrix$.$__lock$();
  };
  $dvt$$17$$.$PatternFill$.$_convertPatternValue$ = function $$dvt$$17$$$$PatternFill$$$_convertPatternValue$$($DvtSvgShadowUtils$$) {
    return "smallDiagonalLeft" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$SM_DIAG_UP_LT$ : "largeDiagonalLeft" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$LG_DIAG_UP_LT$ : "smallDiagonalRight" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$SM_DIAG_UP_RT$ : "largeDiagonalRight" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$LG_DIAG_UP_RT$ : "smallCrosshatch" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$SM_CROSSHATCH$ : "largeCrosshatch" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$LG_CROSSHATCH$ : 
    "smallChecker" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$SM_CHECK$ : "largeChecker" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$LG_CHECK$ : "smallTriangle" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$SM_TRIANGLE_CHECK$ : "largeTriangle" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$LG_TRIANGLE_CHECK$ : "smallDiamond" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$SM_DIAMOND_CHECK$ : "largeDiamond" == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$PatternFill$.$LG_DIAMOND_CHECK$ : 
    $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$RadialGradientFill$ = function $$dvt$$17$$$$RadialGradientFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.$_Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$RadialGradientFill$, $dvt$$17$$.$GradientFill$);
  $dvt$$17$$.$RadialGradientFill$.prototype.clone = function $$dvt$$17$$$$RadialGradientFill$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$RadialGradientFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$RadialGradientFill$.prototype.$getRadius$ = function $$dvt$$17$$$$RadialGradientFill$$$$getRadius$$() {
    return this.$_r$;
  };
  $dvt$$17$$.$RadialGradientFill$.prototype.$getCx$ = function $$dvt$$17$$$$RadialGradientFill$$$$getCx$$() {
    return this.$_cx$;
  };
  $dvt$$17$$.$RadialGradientFill$.prototype.$getCy$ = function $$dvt$$17$$$$RadialGradientFill$$$$getCy$$() {
    return this.$_cy$;
  };
  $dvt$$17$$.$RadialGradientFill$.prototype.$_Init$ = function $$dvt$$17$$$$RadialGradientFill$$$$_Init$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $dvt$$17$$.$RadialGradientFill$.$superclass$.$_Init$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImplFactory$$);
    this.$_cx$ = $DvtSvgGradientUtils$$;
    this.$_cy$ = $DvtSvgFilterUtils$$;
    this.$_r$ = $DvtSvgFilterContext$$;
  };
  $dvt$$17$$.$RadialGradientFill$.prototype.clone = function $$dvt$$17$$$$RadialGradientFill$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$RadialGradientFill$;
    this.$mergeProps$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$RadialGradientFill$.prototype.$mergeProps$ = function $$dvt$$17$$$$RadialGradientFill$$$$mergeProps$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$RadialGradientFill$.$superclass$.$mergeProps$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$_cx$ = this.$_cx$;
    $DvtSvgShadowUtils$$.$_cy$ = this.$_cy$;
    $DvtSvgShadowUtils$$.$_r$ = this.$_r$;
  };
  $dvt$$17$$.$RadialGradientFill$.prototype.$equals$ = function $$dvt$$17$$$$RadialGradientFill$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$RadialGradientFill$ && $DvtSvgShadowUtils$$.$_cx$ == this.$_cx$ && $DvtSvgShadowUtils$$.$_cy$ == this.$_cy$ && $DvtSvgShadowUtils$$.$_r$ == this.$_r$ ? $dvt$$17$$.$RadialGradientFill$.$superclass$.$equals$.call(this, $DvtSvgShadowUtils$$) : !1;
  };
  $dvt$$17$$.$SelectionEffectUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SelectionEffectUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$SelectionEffectUtils$.$getHoverBorderColor$ = function $$dvt$$17$$$$SelectionEffectUtils$$$getHoverBorderColor$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$ColorUtils$.$adjustHSL$($DvtSvgShadowUtils$$, 0, .15);
  };
  $dvt$$17$$.$SelectionEffectUtils$.$applyDrawEffect$ = function $$dvt$$17$$$$SelectionEffectUtils$$$applyDrawEffect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (0 == $DvtSvgShadowUtils$$.$getNumDrawEffects$()) {
      $DvtSvgShadowUtils$$.$addDrawEffect$($DvtSvgPatternFillUtils$$);
    } else {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDrawEffectIndex$($DvtSvgPatternFillUtils$$);
      -1 < $DvtSvgImageFillUtils$$ ? ($DvtSvgShadowUtils$$.$removeDrawEffectAt$($DvtSvgImageFillUtils$$), $DvtSvgShadowUtils$$.$addDrawEffectAt$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)) : $DvtSvgShadowUtils$$.$addDrawEffect$($DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$SelectionEffectUtils$.$createSelectingStroke$ = function $$dvt$$17$$$$SelectionEffectUtils$$$createSelectingStroke$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = new $dvt$$17$$.$SolidStroke$($dvt$$17$$.$SelectionEffectUtils$.$getHoverBorderColor$($DvtSvgShadowUtils$$), 1, 2);
    $DvtSvgShadowUtils$$.$setMiterLimit$();
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$SelectionEffectUtils$.$getSelectingCursor$ = function $$dvt$$17$$$$SelectionEffectUtils$$$getSelectingCursor$$() {
    return "pointer";
  };
  $dvt$$17$$.$KeyboardFocusEffect$ = function $$dvt$$17$$$$KeyboardFocusEffect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$KeyboardFocusEffect$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$KeyboardFocusEffect$.$FOCUS_BORDER_RADIUS$ = 1;
  $dvt$$17$$.$KeyboardFocusEffect$.$FOCUS_STROKE_WIDTH$ = 1;
  $dvt$$17$$.$KeyboardFocusEffect$.$FOCUS_STROKE_ALPHA$ = 1;
  $dvt$$17$$.$KeyboardFocusEffect$.$FOCUS_STROKE_TYPE$ = $dvt$$17$$.$Stroke$.$DOTTED$;
  $dvt$$17$$.$KeyboardFocusEffect$.prototype.Init = function $$dvt$$17$$$$KeyboardFocusEffect$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.$_container$ = $DvtSvgPatternFillUtils$$;
    this.$_focusEffect$ = new $dvt$$17$$.Rect($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$.$h$, $DvtSvgFilterUtils$$);
    $DvtSvgShadowUtils$$ = this.$CreateStroke$();
    this.$_focusEffect$.$setStroke$($DvtSvgShadowUtils$$);
    this.$_focusEffect$.$setRx$($dvt$$17$$.$KeyboardFocusEffect$.$FOCUS_BORDER_RADIUS$);
    this.$_focusEffect$.$setRy$($dvt$$17$$.$KeyboardFocusEffect$.$FOCUS_BORDER_RADIUS$);
    $DvtSvgGradientUtils$$ && this.$_focusEffect$.$setMatrix$($DvtSvgGradientUtils$$);
    this.$_focusEffect$.$setFill$(null);
    this.$_appendLast$ = $DvtSvgFilterContext$$;
  };
  $dvt$$17$$.$KeyboardFocusEffect$.prototype.$CreateStroke$ = function $$dvt$$17$$$$KeyboardFocusEffect$$$$CreateStroke$$() {
    var $DvtSvgShadowUtils$$ = $dvt$$17$$.$Agent$.$getFocusColor$(), $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$KeyboardFocusEffect$.$FOCUS_STROKE_WIDTH$, $DvtSvgImageFillUtils$$ = $dvt$$17$$.$KeyboardFocusEffect$.$FOCUS_STROKE_ALPHA$, $DvtSvgGradientUtils$$ = $dvt$$17$$.$KeyboardFocusEffect$.$FOCUS_STROKE_TYPE$;
    $dvt$$17$$.$Agent$.$isPlatformWebkit$() && ($DvtSvgPatternFillUtils$$ = 2, $DvtSvgGradientUtils$$ = $dvt$$17$$.$Stroke$.$SOLID$);
    $DvtSvgShadowUtils$$ = new $dvt$$17$$.$SolidStroke$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$.$setType$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$KeyboardFocusEffect$.prototype.$getEffect$ = function $$dvt$$17$$$$KeyboardFocusEffect$$$$getEffect$$() {
    return this.$_focusEffect$;
  };
  $dvt$$17$$.$KeyboardFocusEffect$.prototype.show = function $$dvt$$17$$$$KeyboardFocusEffect$$$show$() {
    this.$_focusEffect$ instanceof $dvt$$17$$.$Shape$ && (this.$_appendLast$ ? this.$_container$.$addChild$(this.$_focusEffect$) : this.$_container$.$addChildAt$(this.$_focusEffect$, 0));
  };
  $dvt$$17$$.$KeyboardFocusEffect$.prototype.$hide$ = function $$dvt$$17$$$$KeyboardFocusEffect$$$$hide$$() {
    this.$_focusEffect$ instanceof $dvt$$17$$.$Shape$ && this.$_container$.removeChild(this.$_focusEffect$);
  };
  $dvt$$17$$.$Dimension$ = function $$dvt$$17$$$$Dimension$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Dimension$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Dimension$.prototype.Init = function $$dvt$$17$$$$Dimension$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$w$ = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.$h$ = null === $DvtSvgPatternFillUtils$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Dimension$.prototype.getWidth = function $$dvt$$17$$$$Dimension$$$getWidth$() {
    return this.$w$;
  };
  $dvt$$17$$.$Dimension$.prototype.getHeight = function $$dvt$$17$$$$Dimension$$$getHeight$() {
    return this.$h$;
  };
  $dvt$$17$$.$Matrix$ = function $$dvt$$17$$$$Matrix$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Matrix$, $DvtLockable$$);
  $dvt$$17$$.$Matrix$.$_DECOMP_TX$ = 0;
  $dvt$$17$$.$Matrix$.$_DECOMP_TY$ = 1;
  $dvt$$17$$.$Matrix$.$_DECOMP_R$ = 2;
  $dvt$$17$$.$Matrix$.$_DECOMP_SKEWX$ = 3;
  $dvt$$17$$.$Matrix$.$_DECOMP_SX$ = 4;
  $dvt$$17$$.$Matrix$.$_DECOMP_SY$ = 5;
  $dvt$$17$$.$Matrix$.prototype.Init = function $$dvt$$17$$$$Matrix$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.$_a$ = null == $DvtSvgShadowUtils$$ ? 1 : $DvtSvgShadowUtils$$;
    this.$_b$ = null == $DvtSvgPatternFillUtils$$ ? 0 : $DvtSvgPatternFillUtils$$;
    this.$_c$ = null == $DvtSvgImageFillUtils$$ ? 0 : $DvtSvgImageFillUtils$$;
    this.$_d$ = null == $DvtSvgGradientUtils$$ ? 1 : $DvtSvgGradientUtils$$;
    this.$_tx$ = null == $DvtSvgFilterUtils$$ ? 0 : $DvtSvgFilterUtils$$;
    this.$_ty$ = null == $DvtSvgFilterContext$$ ? 0 : $DvtSvgFilterContext$$;
    this.$_v$ = this.$_u$ = 0;
    this.$_w$ = 1;
    $dvt$$17$$.$Matrix$.$superclass$.$_Init$.call(this);
  };
  $dvt$$17$$.$Matrix$.prototype.$Identity$ = function $$dvt$$17$$$$Matrix$$$$Identity$$() {
    this.$_a$ = 1;
    this.$_c$ = this.$_b$ = 0;
    this.$_d$ = 1;
    this.$_ty$ = this.$_tx$ = 0;
  };
  $dvt$$17$$.$Matrix$.prototype.clone = function $$dvt$$17$$$$Matrix$$$clone$() {
    return new $dvt$$17$$.$Matrix$(this.$_a$, this.$_b$, this.$_c$, this.$_d$, this.$_tx$, this.$_ty$);
  };
  $dvt$$17$$.$Matrix$.prototype.concat = function $$dvt$$17$$$$Matrix$$$concat$($DvtSvgShadowUtils$$) {
    if (!this.$_bLocked$) {
      var $DvtSvgPatternFillUtils$$ = this.$_b$ * $DvtSvgShadowUtils$$.$_a$ + this.$_d$ * $DvtSvgShadowUtils$$.$_b$ + this.$_v$ * $DvtSvgShadowUtils$$.$_tx$, $DvtSvgImageFillUtils$$ = this.$_tx$ * $DvtSvgShadowUtils$$.$_a$ + this.$_ty$ * $DvtSvgShadowUtils$$.$_b$ + this.$_w$ * $DvtSvgShadowUtils$$.$_tx$, $DvtSvgGradientUtils$$ = this.$_a$ * $DvtSvgShadowUtils$$.$_c$ + this.$_c$ * $DvtSvgShadowUtils$$.$_d$ + this.$_u$ * $DvtSvgShadowUtils$$.$_ty$, $DvtSvgFilterUtils$$ = this.$_b$ * $DvtSvgShadowUtils$$.$_c$ + 
      this.$_d$ * $DvtSvgShadowUtils$$.$_d$ + this.$_v$ * $DvtSvgShadowUtils$$.$_ty$, $DvtSvgFilterContext$$ = this.$_tx$ * $DvtSvgShadowUtils$$.$_c$ + this.$_ty$ * $DvtSvgShadowUtils$$.$_d$ + this.$_w$ * $DvtSvgShadowUtils$$.$_ty$;
      this.$_a$ = this.$_a$ * $DvtSvgShadowUtils$$.$_a$ + this.$_c$ * $DvtSvgShadowUtils$$.$_b$ + this.$_u$ * $DvtSvgShadowUtils$$.$_tx$;
      this.$_b$ = $DvtSvgPatternFillUtils$$;
      this.$_c$ = $DvtSvgGradientUtils$$;
      this.$_d$ = $DvtSvgFilterUtils$$;
      this.$_tx$ = $DvtSvgImageFillUtils$$;
      this.$_ty$ = $DvtSvgFilterContext$$;
    }
  };
  $dvt$$17$$.$Matrix$.prototype.translate = function $$dvt$$17$$$$Matrix$$$translate$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!this.$_bLocked$) {
      var $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$Matrix$;
      $DvtSvgImageFillUtils$$.$_tx$ = $DvtSvgShadowUtils$$;
      $DvtSvgImageFillUtils$$.$_ty$ = $DvtSvgPatternFillUtils$$;
      this.concat($DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$Matrix$.prototype.scale = function $$dvt$$17$$$$Matrix$$$scale$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if (!this.$_bLocked$) {
      ($DvtSvgImageFillUtils$$ || $DvtSvgGradientUtils$$) && this.translate(-$DvtSvgImageFillUtils$$, -$DvtSvgGradientUtils$$);
      var $DvtSvgFilterUtils$$ = new $dvt$$17$$.$Matrix$;
      $DvtSvgFilterUtils$$.$_a$ = $DvtSvgShadowUtils$$;
      $DvtSvgFilterUtils$$.$_d$ = $DvtSvgPatternFillUtils$$;
      this.concat($DvtSvgFilterUtils$$);
      ($DvtSvgImageFillUtils$$ || $DvtSvgGradientUtils$$) && this.translate($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    }
  };
  $dvt$$17$$.$Matrix$.prototype.rotate = function $$dvt$$17$$$$Matrix$$$rotate$($DvtSvgShadowUtils$$) {
    if (!this.$_bLocked$) {
      var $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Matrix$;
      $DvtSvgPatternFillUtils$$.$_a$ = Math.cos($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$_d$ = $DvtSvgPatternFillUtils$$.$_a$;
      $DvtSvgPatternFillUtils$$.$_c$ = Math.sin($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.$_b$ = -$DvtSvgPatternFillUtils$$.$_c$;
      this.concat($DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Matrix$.prototype.$skew$ = function $$dvt$$17$$$$Matrix$$$$skew$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!this.$_bLocked$) {
      var $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$Matrix$;
      $DvtSvgImageFillUtils$$.$_b$ = Math.tan($DvtSvgShadowUtils$$);
      $DvtSvgImageFillUtils$$.$_c$ = Math.tan($DvtSvgPatternFillUtils$$);
      this.concat($DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$Matrix$.prototype.$Determinant$ = function $$dvt$$17$$$$Matrix$$$$Determinant$$() {
    return this.$_a$ * (this.$_d$ * this.$_w$ - this.$_ty$ * this.$_v$) - this.$_b$ * (this.$_c$ * this.$_w$ - this.$_ty$ * this.$_u$) + this.$_tx$ * (this.$_c$ * this.$_v$ - this.$_d$ * this.$_u$);
  };
  $dvt$$17$$.$Matrix$.prototype.$invert$ = function $$dvt$$17$$$$Matrix$$$$invert$$() {
    if (!this.$_bLocked$) {
      var $DvtSvgShadowUtils$$ = this.$Determinant$(), $DvtSvgPatternFillUtils$$ = this.$_tx$ * this.$_v$ - this.$_b$ * this.$_w$, $DvtSvgImageFillUtils$$ = this.$_b$ * this.$_ty$ - this.$_tx$ * this.$_d$, $DvtSvgGradientUtils$$ = this.$_ty$ * this.$_u$ - this.$_c$ * this.$_w$, $DvtSvgFilterUtils$$ = this.$_a$ * this.$_w$ - this.$_tx$ * this.$_u$, $DvtSvgFilterContext$$ = this.$_tx$ * this.$_c$ - this.$_a$ * this.$_ty$;
      this.$_a$ = (this.$_d$ * this.$_w$ - this.$_ty$ * this.$_v$) / $DvtSvgShadowUtils$$;
      this.$_b$ = $DvtSvgPatternFillUtils$$ / $DvtSvgShadowUtils$$;
      this.$_tx$ = $DvtSvgImageFillUtils$$ / $DvtSvgShadowUtils$$;
      this.$_c$ = $DvtSvgGradientUtils$$ / $DvtSvgShadowUtils$$;
      this.$_d$ = $DvtSvgFilterUtils$$ / $DvtSvgShadowUtils$$;
      this.$_ty$ = $DvtSvgFilterContext$$ / $DvtSvgShadowUtils$$;
    }
  };
  $dvt$$17$$.$Matrix$.prototype.$_decompose$ = function $$dvt$$17$$$$Matrix$$$$_decompose$$() {
    var $DvtSvgShadowUtils$$ = this.$_a$, $DvtSvgPatternFillUtils$$ = this.$_b$, $DvtSvgImageFillUtils$$ = this.$_c$, $DvtSvgGradientUtils$$ = this.$_d$, $DvtSvgFilterUtils$$ = this.$_tx$, $DvtSvgFilterContext$$ = this.$_ty$;
    if (0 === $DvtSvgShadowUtils$$ * $DvtSvgGradientUtils$$ - $DvtSvgPatternFillUtils$$ * $DvtSvgImageFillUtils$$) {
      return null;
    }
    var $dvt$$17$$ = Math.sqrt($DvtSvgShadowUtils$$ * $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ * $DvtSvgImageFillUtils$$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ / $dvt$$17$$, $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ / $dvt$$17$$, $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$ * $DvtSvgPatternFillUtils$$ + $DvtSvgImageFillUtils$$ * $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$ * $DvtSvgImplFactory$$, $DvtSvgGradientUtils$$ = 
    $DvtSvgGradientUtils$$ - $DvtSvgImageFillUtils$$ * $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = Math.sqrt($DvtSvgPatternFillUtils$$ * $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$), $DvtSvgImplFactory$$ = $DvtSvgImplFactory$$ / $DvtHtmlRichTooltipManager$$;
    -1 === $DvtSvgGradientUtils$$ / $DvtHtmlRichTooltipManager$$ * $DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$ / $DvtHtmlRichTooltipManager$$ * $DvtSvgImageFillUtils$$ && ($DvtSvgImplFactory$$ = -$DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = -$DvtHtmlRichTooltipManager$$);
    return [$DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, Math.atan2($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$), Math.atan($DvtSvgImplFactory$$), $dvt$$17$$, $DvtHtmlRichTooltipManager$$];
  };
  $dvt$$17$$.$Matrix$.prototype.$_recompose$ = function $$dvt$$17$$$$Matrix$$$$_recompose$$($DvtSvgShadowUtils$$) {
    if (!this.$_bLocked$) {
      this.$Identity$();
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[0], $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[1], $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[2], $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[3];
      this.scale($DvtSvgShadowUtils$$[4], $DvtSvgShadowUtils$$[5]);
      this.$skew$($DvtSvgFilterUtils$$, 0);
      this.rotate($DvtSvgGradientUtils$$);
      this.translate($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$Matrix$.prototype.$equals$ = function $$dvt$$17$$$$Matrix$$$$equals$$($DvtSvgShadowUtils$$) {
    return !this && $DvtSvgShadowUtils$$ ? !1 : this && !$DvtSvgShadowUtils$$ ? !1 : this || $DvtSvgShadowUtils$$ ? this.$_a$ == $DvtSvgShadowUtils$$.$_a$ && this.$_b$ == $DvtSvgShadowUtils$$.$_b$ && this.$_c$ == $DvtSvgShadowUtils$$.$_c$ && this.$_d$ == $DvtSvgShadowUtils$$.$_d$ && this.$_tx$ == $DvtSvgShadowUtils$$.$_tx$ && this.$_ty$ == $DvtSvgShadowUtils$$.$_ty$ : !0;
  };
  $dvt$$17$$.$Matrix$.prototype.$transformPoint$ = function $$dvt$$17$$$$Matrix$$$$transformPoint$$($DvtSvgShadowUtils$$) {
    return new $dvt$$17$$.$Point$(this.$_a$ * $DvtSvgShadowUtils$$.x + this.$_b$ * $DvtSvgShadowUtils$$.y + 1 * this.$_tx$, this.$_c$ * $DvtSvgShadowUtils$$.x + this.$_d$ * $DvtSvgShadowUtils$$.y + 1 * this.$_ty$);
  };
  $dvt$$17$$.$Matrix$.prototype.$isIdentity$ = function $$dvt$$17$$$$Matrix$$$$isIdentity$$() {
    return 1 == this.$_a$ && 0 == this.$_b$ && 0 == this.$_c$ && 1 == this.$_d$ && 0 == this.$_tx$ && 0 == this.$_ty$;
  };
  $dvt$$17$$.$Point$ = function $$dvt$$17$$$$Point$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Point$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Point$.prototype.Init = function $$dvt$$17$$$$Point$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.x = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.y = null === $DvtSvgPatternFillUtils$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Point$.prototype.$equals$ = function $$dvt$$17$$$$Point$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$Point$ && this.x === $DvtSvgShadowUtils$$.x && this.y === $DvtSvgShadowUtils$$.y ? !0 : !1;
  };
  $dvt$$17$$.$Rectangle$ = function $$dvt$$17$$$$Rectangle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.x = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.y = null === $DvtSvgPatternFillUtils$$ || isNaN($DvtSvgPatternFillUtils$$) ? 0 : $DvtSvgPatternFillUtils$$;
    this.$w$ = null === $DvtSvgImageFillUtils$$ || isNaN($DvtSvgImageFillUtils$$) ? 0 : $DvtSvgImageFillUtils$$;
    this.$h$ = null === $DvtSvgGradientUtils$$ || isNaN($DvtSvgGradientUtils$$) ? 0 : $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Rectangle$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Rectangle$.create = function $$dvt$$17$$$$Rectangle$$create$($DvtSvgShadowUtils$$) {
    return new $dvt$$17$$.$Rectangle$($DvtSvgShadowUtils$$[0], $DvtSvgShadowUtils$$[1], $DvtSvgShadowUtils$$[2], $DvtSvgShadowUtils$$[3]);
  };
  $dvt$$17$$.$Rectangle$.prototype.$containsPoint$ = function $$dvt$$17$$$$Rectangle$$$$containsPoint$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$ >= this.x && $DvtSvgShadowUtils$$ <= this.x + this.$w$ && $DvtSvgPatternFillUtils$$ >= this.y && $DvtSvgPatternFillUtils$$ <= this.y + this.$h$;
  };
  $dvt$$17$$.$Rectangle$.prototype.$getCenter$ = function $$dvt$$17$$$$Rectangle$$$$getCenter$$() {
    return new $dvt$$17$$.$Point$(this.x + this.$w$ / 2, this.y + this.$h$ / 2);
  };
  $dvt$$17$$.$Rectangle$.prototype.$getUnion$ = function $$dvt$$17$$$$Rectangle$$$$getUnion$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Rectangle$;
    if ($DvtSvgShadowUtils$$ && 0 !== $DvtSvgShadowUtils$$.$w$ && 0 !== $DvtSvgShadowUtils$$.$h$) {
      if (0 !== this.$w$ && 0 !== this.$h$) {
        var $DvtSvgImageFillUtils$$ = this.x + this.$w$, $DvtSvgGradientUtils$$ = this.y + this.$h$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$, $DvtSvgImplFactory$$ = Math.min(this.x, $DvtSvgShadowUtils$$.x);
        $DvtSvgShadowUtils$$ = Math.min(this.y, $DvtSvgShadowUtils$$.y);
        $DvtSvgPatternFillUtils$$.$w$ = $DvtSvgImageFillUtils$$ < $DvtSvgFilterUtils$$ ? $DvtSvgFilterUtils$$ - $DvtSvgImplFactory$$ : $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$;
        $DvtSvgPatternFillUtils$$.$h$ = $DvtSvgGradientUtils$$ > $DvtSvgFilterContext$$ ? $DvtSvgGradientUtils$$ - $DvtSvgShadowUtils$$ : $DvtSvgFilterContext$$ - $DvtSvgShadowUtils$$;
        $DvtSvgPatternFillUtils$$.x = $DvtSvgImplFactory$$;
        $DvtSvgPatternFillUtils$$.y = $DvtSvgShadowUtils$$;
      } else {
        $DvtSvgPatternFillUtils$$.x = $DvtSvgShadowUtils$$.x, $DvtSvgPatternFillUtils$$.y = $DvtSvgShadowUtils$$.y, $DvtSvgPatternFillUtils$$.$w$ = $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$.$h$ = $DvtSvgShadowUtils$$.$h$;
      }
    } else {
      $DvtSvgPatternFillUtils$$.x = this.x, $DvtSvgPatternFillUtils$$.y = this.y, $DvtSvgPatternFillUtils$$.$w$ = this.$w$, $DvtSvgPatternFillUtils$$.$h$ = this.$h$;
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Rectangle$.prototype.$getIntersection$ = function $$dvt$$17$$$$Rectangle$$$$getIntersection$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Rectangle$;
    if ($DvtSvgShadowUtils$$ && 0 !== $DvtSvgShadowUtils$$.$w$ && 0 !== $DvtSvgShadowUtils$$.$h$) {
      if (0 !== this.$w$ && 0 !== this.$h$) {
        var $DvtSvgImageFillUtils$$ = this.x + this.$w$, $DvtSvgGradientUtils$$ = this.y + this.$h$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$, $DvtSvgImplFactory$$ = Math.max(this.x, $DvtSvgShadowUtils$$.x);
        $DvtSvgShadowUtils$$ = Math.max(this.y, $DvtSvgShadowUtils$$.y);
        if ($DvtSvgImplFactory$$ >= $DvtSvgImageFillUtils$$ || $DvtSvgImplFactory$$ >= $DvtSvgFilterUtils$$ || $DvtSvgShadowUtils$$ >= $DvtSvgGradientUtils$$ || $DvtSvgShadowUtils$$ >= $DvtSvgFilterContext$$) {
          return null;
        }
        $DvtSvgPatternFillUtils$$.$w$ = $DvtSvgImageFillUtils$$ < $DvtSvgFilterUtils$$ ? $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$ : $DvtSvgFilterUtils$$ - $DvtSvgImplFactory$$;
        $DvtSvgPatternFillUtils$$.$h$ = $DvtSvgGradientUtils$$ > $DvtSvgFilterContext$$ ? $DvtSvgFilterContext$$ - $DvtSvgShadowUtils$$ : $DvtSvgGradientUtils$$ - $DvtSvgShadowUtils$$;
        $DvtSvgPatternFillUtils$$.x = $DvtSvgImplFactory$$;
        $DvtSvgPatternFillUtils$$.y = $DvtSvgShadowUtils$$;
      } else {
        return null;
      }
    } else {
      return null;
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Rectangle$.prototype.$grow$ = function $$dvt$$17$$$$Rectangle$$$$grow$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.x, $DvtSvgGradientUtils$$ = this.y, $DvtSvgFilterUtils$$ = this.x + this.$w$, $DvtSvgFilterContext$$ = this.y + this.$h$;
    $DvtSvgShadowUtils$$ < $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ > $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ < $DvtSvgGradientUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$);
    $DvtSvgPatternFillUtils$$ > $DvtSvgFilterContext$$ && ($DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$);
    this.x = $DvtSvgImageFillUtils$$;
    this.y = $DvtSvgGradientUtils$$;
    this.$w$ = $DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$;
    this.$h$ = $DvtSvgFilterContext$$ - $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$Rectangle$.prototype.$intersects$ = function $$dvt$$17$$$$Rectangle$$$$intersects$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ && 0 !== $DvtSvgShadowUtils$$.$w$ && 0 !== $DvtSvgShadowUtils$$.$h$ && 0 !== this.$w$ && 0 !== this.$h$) {
      var $DvtSvgPatternFillUtils$$ = this.y + this.$h$, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$;
      return !($DvtSvgShadowUtils$$.x > this.x + this.$w$ || $DvtSvgImageFillUtils$$ < this.x || $DvtSvgShadowUtils$$.y > $DvtSvgPatternFillUtils$$ || $DvtSvgGradientUtils$$ < this.y);
    }
    return !1;
  };
  $dvt$$17$$.$Rectangle$.prototype.clone = function $$dvt$$17$$$$Rectangle$$$clone$() {
    return new $dvt$$17$$.$Rectangle$(this.x, this.y, this.$w$, this.$h$);
  };
  $dvt$$17$$.$Rectangle$.prototype.$equals$ = function $$dvt$$17$$$$Rectangle$$$$equals$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$Rectangle$ && this.x == $DvtSvgShadowUtils$$.x && this.y == $DvtSvgShadowUtils$$.y && this.$w$ == $DvtSvgShadowUtils$$.$w$ && this.$h$ == $DvtSvgShadowUtils$$.$h$;
  };
  $dvt$$17$$.$Rectangle$.prototype.toString = function $$dvt$$17$$$$Rectangle$$$toString$() {
    return this.x + ", " + this.y + ", " + this.$w$ + ", " + this.$h$;
  };
  $dvt$$17$$.$VectorUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$VectorUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$VectorUtils$.$createVector$ = function $$dvt$$17$$$$VectorUtils$$$createVector$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = {};
    $DvtSvgImageFillUtils$$.x = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.y = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$VectorUtils$.$addVectors$ = function $$dvt$$17$$$$VectorUtils$$$addVectors$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$VectorUtils$.$createVector$($DvtSvgShadowUtils$$.x + $DvtSvgPatternFillUtils$$.x, $DvtSvgShadowUtils$$.y + $DvtSvgPatternFillUtils$$.y);
  };
  $dvt$$17$$.$VectorUtils$.$subtractVectors$ = function $$dvt$$17$$$$VectorUtils$$$subtractVectors$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$VectorUtils$.$createVector$($DvtSvgShadowUtils$$.x - $DvtSvgPatternFillUtils$$.x, $DvtSvgShadowUtils$$.y - $DvtSvgPatternFillUtils$$.y);
  };
  $dvt$$17$$.$VectorUtils$.$scaleVector$ = function $$dvt$$17$$$$VectorUtils$$$scaleVector$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$VectorUtils$.$createVector$($DvtSvgShadowUtils$$.x * $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.y * $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$VectorUtils$.$getMagnitude$ = function $$dvt$$17$$$$VectorUtils$$$getMagnitude$$($DvtSvgShadowUtils$$) {
    return Math.sqrt($DvtSvgShadowUtils$$.x * $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.y * $DvtSvgShadowUtils$$.y);
  };
  $dvt$$17$$.$Array2D$ = function $$dvt$$17$$$$Array2D$$() {
    this.Init();
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Array2D$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Array2D$.prototype.Init = function $$dvt$$17$$$$Array2D$$$Init$() {
    this.$_data$ = [];
  };
  $dvt$$17$$.$Array2D$.prototype.get = function $$dvt$$17$$$$Array2D$$$get$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_getInner$($DvtSvgShadowUtils$$)[$DvtSvgPatternFillUtils$$];
  };
  $dvt$$17$$.$Array2D$.prototype.put = function $$dvt$$17$$$$Array2D$$$put$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getInner$($DvtSvgShadowUtils$$);
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
    $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$Array2D$.prototype.$_getInner$ = function $$dvt$$17$$$$Array2D$$$$_getInner$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_data$[$DvtSvgShadowUtils$$];
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = [], this.$_data$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.Cache = function $$dvt$$17$$$Cache$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.Cache, $dvt$$17$$.$Obj$);
  $dvt$$17$$.Cache.$_TARGET_SIZE$ = 1E3;
  $dvt$$17$$.Cache.$_BUFFER_SIZE$ = .5;
  $dvt$$17$$.Cache.prototype.Init = function $$dvt$$17$$$Cache$$Init$($DvtSvgShadowUtils$$) {
    this.$_targetSize$ = null != $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : $dvt$$17$$.Cache.$_TARGET_SIZE$;
    this.$_maxSize$ = Math.ceil(this.$_targetSize$ * (1 + $dvt$$17$$.Cache.$_BUFFER_SIZE$));
    this.$_cache$ = {};
    this.$_lruArray$ = [];
    this.$_misses$ = this.$_hits$ = 0;
  };
  $dvt$$17$$.Cache.prototype.get = function $$dvt$$17$$$Cache$$get$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_cache$[$DvtSvgShadowUtils$$];
    if (null != $DvtSvgShadowUtils$$) {
      return this.$_hits$++, $DvtSvgShadowUtils$$;
    }
    this.$_misses$++;
    return null;
  };
  $dvt$$17$$.Cache.prototype.put = function $$dvt$$17$$$Cache$$put$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = null != this.$_cache$[$DvtSvgShadowUtils$$];
    this.$_cache$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$;
    if ($DvtSvgImageFillUtils$$) {
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ArrayUtils$.$getIndex$(this.$_lruArray$, $DvtSvgShadowUtils$$), this.$_lruArray$.splice($DvtSvgImageFillUtils$$, 1), this.$_lruArray$.push($DvtSvgShadowUtils$$);
    } else {
      if (this.$_lruArray$.push($DvtSvgShadowUtils$$), this.$_lruArray$.length > this.$_maxSize$) {
        for (var $DvtSvgImageFillUtils$$ = this.$_lruArray$.splice(0, this.$_maxSize$ - this.$_targetSize$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
          delete this.$_cache$[$DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$]];
        }
      }
    }
  };
  $dvt$$17$$.Cache.prototype.toString = function $$dvt$$17$$$Cache$$toString$() {
    var $DvtSvgShadowUtils$$ = "Cache Size: " + this.$_lruArray$.length, $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ + ("\nHits: " + this.$_hits$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ + ("\nMisses: " + this.$_misses$);
    return $DvtSvgShadowUtils$$ += "\nHit %: " + Math.round(1E4 * this.$_hits$ / (this.$_hits$ + this.$_misses$)) / 100;
  };
  $dvt$$17$$.$DragAndDropUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$DragAndDropUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$DragAndDropUtils$.$getDragFeedbackBounds$ = function $$dvt$$17$$$$DragAndDropUtils$$$getDragFeedbackBounds$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!$DvtSvgShadowUtils$$) {
      return null;
    }
    var $DvtSvgImageFillUtils$$ = null;
    if (!($DvtSvgShadowUtils$$ instanceof Array)) {
      $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgShadowUtils$$.getParent());
    } else {
      if (0 < $DvtSvgShadowUtils$$.length) {
        for (var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[0].$getDimensions$($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgShadowUtils$$[0].getParent()), $DvtSvgGradientUtils$$ = 1;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
          var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.$getDimensions$($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgFilterUtils$$.getParent());
          $DvtSvgFilterUtils$$.x < $DvtSvgImageFillUtils$$.x && ($DvtSvgImageFillUtils$$.$w$ += $DvtSvgImageFillUtils$$.x - $DvtSvgFilterUtils$$.x, $DvtSvgImageFillUtils$$.x = $DvtSvgFilterUtils$$.x);
          $DvtSvgFilterUtils$$.y < $DvtSvgImageFillUtils$$.y && ($DvtSvgImageFillUtils$$.$h$ += $DvtSvgImageFillUtils$$.y - $DvtSvgFilterUtils$$.y, $DvtSvgImageFillUtils$$.y = $DvtSvgFilterUtils$$.y);
          $DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ > $DvtSvgImageFillUtils$$.x + $DvtSvgImageFillUtils$$.$w$ && ($DvtSvgImageFillUtils$$.$w$ = $DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ - $DvtSvgImageFillUtils$$.x);
          $DvtSvgFilterUtils$$.y + $DvtSvgFilterUtils$$.$h$ > $DvtSvgImageFillUtils$$.y + $DvtSvgImageFillUtils$$.$h$ && ($DvtSvgImageFillUtils$$.$h$ = $DvtSvgFilterUtils$$.y + $DvtSvgFilterUtils$$.$h$ - $DvtSvgImageFillUtils$$.y);
        }
      }
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$LayoutUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$LayoutUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$LayoutUtils$.position = function $$dvt$$17$$$$LayoutUtils$$position$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtSvgImageFillUtils$$ && ($DvtSvgFilterContext$$ = 0 < $DvtSvgGradientUtils$$ * $DvtSvgFilterUtils$$ ? $DvtSvgFilterContext$$ : 0, "start" == $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Agent$.$isRightToLeft$($DvtSvgImageFillUtils$$.$getCtx$()) ? "right" : "left" : "end" == $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Agent$.$isRightToLeft$($DvtSvgImageFillUtils$$.$getCtx$()) ? "left" : "right"), "top" == $DvtSvgPatternFillUtils$$ ? ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgShadowUtils$$.x + 
    $DvtSvgShadowUtils$$.$w$ / 2 - $DvtSvgGradientUtils$$ / 2, $DvtSvgShadowUtils$$.y), $DvtSvgShadowUtils$$.y += $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$, $DvtSvgShadowUtils$$.$h$ -= $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$) : "bottom" == $DvtSvgPatternFillUtils$$ ? ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ / 2 - $DvtSvgGradientUtils$$ / 2, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ - $DvtSvgFilterUtils$$), $DvtSvgShadowUtils$$.$h$ -= 
    $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$) : "left" == $DvtSvgPatternFillUtils$$ ? ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ / 2 - $DvtSvgFilterUtils$$ / 2), $DvtSvgShadowUtils$$.x += $DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$, $DvtSvgShadowUtils$$.$w$ -= $DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$) : "right" == $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$.$setTranslate$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ - 
    $DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ / 2 - $DvtSvgFilterUtils$$ / 2), $DvtSvgShadowUtils$$.$w$ -= $DvtSvgGradientUtils$$ + $DvtSvgFilterContext$$));
  };
  $dvt$$17$$.$LayoutUtils$.align = function $$dvt$$17$$$$LayoutUtils$$align$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgImageFillUtils$$ && ("start" == $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Agent$.$isRightToLeft$($DvtSvgImageFillUtils$$.$getCtx$()) ? "right" : "left" : "end" == $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Agent$.$isRightToLeft$($DvtSvgImageFillUtils$$.$getCtx$()) ? "left" : "right"), "left" == $DvtSvgPatternFillUtils$$ ? $DvtSvgImageFillUtils$$.$setX$($DvtSvgShadowUtils$$.x) : "center" == $DvtSvgPatternFillUtils$$ ? $DvtSvgImageFillUtils$$.$setX$($DvtSvgShadowUtils$$.x + 
    $DvtSvgShadowUtils$$.$w$ / 2 - $DvtSvgGradientUtils$$ / 2) : "right" == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setX$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ - $DvtSvgGradientUtils$$));
  };
  $dvt$$17$$.$LayoutUtils$.$getBubbleSize$ = function $$dvt$$17$$$$LayoutUtils$$$getBubbleSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    if (0 >= $DvtSvgShadowUtils$$) {
      return 0;
    }
    $DvtSvgGradientUtils$$ *= $DvtSvgGradientUtils$$;
    $DvtSvgFilterUtils$$ *= $DvtSvgFilterUtils$$;
    if ($DvtSvgImageFillUtils$$ / $DvtSvgPatternFillUtils$$ < $DvtSvgFilterUtils$$ / $DvtSvgGradientUtils$$) {
      $DvtSvgGradientUtils$$ = Math.sqrt($DvtSvgGradientUtils$$ * $DvtSvgFilterUtils$$);
      var $DvtSvgFilterContext$$ = Math.sqrt($DvtSvgPatternFillUtils$$ * $DvtSvgImageFillUtils$$);
      if ($DvtSvgShadowUtils$$ == $DvtSvgFilterContext$$) {
        return Math.sqrt($DvtSvgGradientUtils$$);
      }
      $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$ / $DvtSvgFilterContext$$ * $DvtSvgGradientUtils$$;
      $DvtSvgGradientUtils$$ *= $DvtSvgPatternFillUtils$$ / $DvtSvgFilterContext$$;
    }
    return Math.sqrt($DvtSvgGradientUtils$$ + ($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$) / ($DvtSvgImageFillUtils$$ - $DvtSvgPatternFillUtils$$) * ($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$));
  };
  $dvt$$17$$.Math = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.Math, $dvt$$17$$.$Obj$);
  $dvt$$17$$.Math.$RADS_PER_DEGREE$ = Math.PI / 180;
  $dvt$$17$$.Math.$DEGREES_PER_RAD$ = 180 / Math.PI;
  $dvt$$17$$.Math.$TWO_PI$ = 2 * Math.PI;
  $dvt$$17$$.Math.$HALF_PI$ = Math.PI / 2;
  $dvt$$17$$.Math.$QUARTER_PI$ = Math.PI / 4;
  $dvt$$17$$.Math.$TOLERANCE$ = .1;
  $dvt$$17$$.Math.$cantorPairing$ = function $$dvt$$17$$$Math$$cantorPairing$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 > $DvtSvgShadowUtils$$ || 0 > $DvtSvgPatternFillUtils$$ ? -1 : ($DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$) * ($DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$ + 1) / 2 + $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.Math.$degreesToRads$ = function $$dvt$$17$$$Math$$degreesToRads$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ * $dvt$$17$$.Math.$RADS_PER_DEGREE$;
  };
  $dvt$$17$$.Math.$radsToDegrees$ = function $$dvt$$17$$$Math$$radsToDegrees$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ * $dvt$$17$$.Math.$DEGREES_PER_RAD$;
  };
  $dvt$$17$$.Math.$interpolateNumber$ = function $$dvt$$17$$$Math$$interpolateNumber$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ * ($DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Math.log10 = function $$dvt$$17$$$Math$log10$($DvtSvgShadowUtils$$) {
    return Math.log($DvtSvgShadowUtils$$) / Math.LN10;
  };
  $dvt$$17$$.$Map2D$ = function $$dvt$$17$$$$Map2D$$() {
    this.Init();
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Map2D$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Map2D$.prototype.Init = function $$dvt$$17$$$$Map2D$$$Init$() {
    this.$_map$ = {};
  };
  $dvt$$17$$.$Map2D$.prototype.get = function $$dvt$$17$$$$Map2D$$$get$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_getInnerMap$($DvtSvgShadowUtils$$)[$DvtSvgPatternFillUtils$$];
  };
  $dvt$$17$$.$Map2D$.prototype.put = function $$dvt$$17$$$$Map2D$$$put$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getInnerMap$($DvtSvgShadowUtils$$);
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
    $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$Map2D$.prototype.$_getInnerMap$ = function $$dvt$$17$$$$Map2D$$$$_getInnerMap$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_map$[$DvtSvgShadowUtils$$];
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = {}, this.$_map$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$PixelMap$ = function $$dvt$$17$$$$PixelMap$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$PixelMap$, $dvt$$17$$.$Array2D$);
  $dvt$$17$$.$PixelMap$.$_INITIAL_SIZE$ = 1500;
  $dvt$$17$$.$PixelMap$.prototype.Init = function $$dvt$$17$$$$PixelMap$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$17$$.$PixelMap$.$superclass$.Init.call(this);
    if (this.$_innerMap$ = $DvtSvgPatternFillUtils$$) {
      this.$_innerMap$.$_outerMap$ = this, this.$_innerMap$.$_bOuterMap$ = !0;
    }
    this.$_scale$ = $DvtSvgShadowUtils$$ || 1;
    this.$_capacity$ = this.$_scale$ * this.$_scale$;
    this.$_bInnerMap$ = null != this.$_innerMap$;
    this.$_bOuterMap$ = !1;
    for (var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$PixelMap$.$_INITIAL_SIZE$ / this.$_scale$, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
      for (var $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgFilterUtils$$++) {
        this.put($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, 0);
      }
    }
  };
  $dvt$$17$$.$PixelMap$.prototype.$isObscured$ = function $$dvt$$17$$$$PixelMap$$$$isObscured$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    for (var $DvtSvgFilterUtils$$ = this.$_adjustForScale$($DvtSvgPatternFillUtils$$), $DvtSvgFilterContext$$ = this.$_adjustForScale$($DvtSvgImageFillUtils$$), $dvt$$17$$ = this.$_adjustForScale$($DvtSvgGradientUtils$$), $DvtSvgImplFactory$$ = this.$_adjustForScale$($DvtSvgShadowUtils$$);$DvtSvgImplFactory$$ <= $DvtSvgFilterContext$$;$DvtSvgImplFactory$$++) {
      for (var $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterUtils$$;$DvtHtmlRichTooltipManager$$ <= $dvt$$17$$;$DvtHtmlRichTooltipManager$$++) {
        if (!0 !== this.get($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$)) {
          if (this.$_bInnerMap$) {
            if (!this.$_innerMap$.$isObscured$(Math.max($DvtSvgShadowUtils$$, $DvtSvgImplFactory$$ * this.$_scale$), Math.max($DvtSvgPatternFillUtils$$, $DvtHtmlRichTooltipManager$$ * this.$_scale$), Math.min($DvtSvgImageFillUtils$$, ($DvtSvgImplFactory$$ + 1) * this.$_scale$ - 1), Math.min($DvtSvgGradientUtils$$, ($DvtHtmlRichTooltipManager$$ + 1) * this.$_scale$ - 1))) {
              return !1;
            }
          } else {
            return !1;
          }
        }
      }
    }
    return !0;
  };
  $dvt$$17$$.$PixelMap$.prototype.$obscure$ = function $$dvt$$17$$$$PixelMap$$$$obscure$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    for (var $DvtSvgFilterContext$$ = this.$_adjustForScale$($DvtSvgPatternFillUtils$$), $dvt$$17$$ = this.$_adjustForScale$($DvtSvgImageFillUtils$$), $DvtSvgImplFactory$$ = this.$_adjustForScale$($DvtSvgGradientUtils$$), $DvtHtmlRichTooltipManager$$ = this.$_adjustForScale$($DvtSvgShadowUtils$$);$DvtHtmlRichTooltipManager$$ <= $dvt$$17$$;$DvtHtmlRichTooltipManager$$++) {
      for (var $DvtDomXmlParser$$ = $DvtSvgFilterContext$$;$DvtDomXmlParser$$ <= $DvtSvgImplFactory$$;$DvtDomXmlParser$$++) {
        !0 !== this.get($DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) && (this.$_bInnerMap$ ? this.$_innerMap$.$obscure$(Math.max($DvtSvgShadowUtils$$, $DvtHtmlRichTooltipManager$$ * this.$_scale$), Math.max($DvtSvgPatternFillUtils$$, $DvtDomXmlParser$$ * this.$_scale$), Math.min($DvtSvgImageFillUtils$$, ($DvtHtmlRichTooltipManager$$ + 1) * this.$_scale$ - 1), Math.min($DvtSvgGradientUtils$$, ($DvtDomXmlParser$$ + 1) * this.$_scale$ - 1), $DvtSvgFilterUtils$$) : this.$_increment$($DvtHtmlRichTooltipManager$$, 
        $DvtDomXmlParser$$, $DvtSvgFilterUtils$$));
      }
    }
  };
  $dvt$$17$$.$PixelMap$.prototype.$_increment$ = function $$dvt$$17$$$$PixelMap$$$$_increment$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$_adjustForScale$($DvtSvgShadowUtils$$), $DvtSvgFilterUtils$$ = this.$_adjustForScale$($DvtSvgPatternFillUtils$$), $DvtSvgFilterContext$$ = this.get($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $DvtSvgFilterContext$$ = null != $DvtSvgFilterContext$$ ? $DvtSvgFilterContext$$ + $DvtSvgImageFillUtils$$ : $DvtSvgImageFillUtils$$;
    $DvtSvgFilterContext$$ >= this.$_capacity$ && ($DvtSvgFilterContext$$ = !0);
    this.put($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    !0 === $DvtSvgFilterContext$$ && this.$_bOuterMap$ && this.$_outerMap$.$_increment$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, this.$_capacity$);
  };
  $dvt$$17$$.$PixelMap$.prototype.$_adjustForScale$ = function $$dvt$$17$$$$PixelMap$$$$_adjustForScale$$($DvtSvgShadowUtils$$) {
    return Math.floor($DvtSvgShadowUtils$$ / this.$_scale$);
  };
  $dvt$$17$$.$PropMap$ = function $$dvt$$17$$$$PropMap$$() {
    this.Init();
  };
  $dvt$$17$$.$PropMap$.$REGEXP$ = /#\{([^\}]*)\}/g;
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$PropMap$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$PropMap$.prototype.Init = function $$dvt$$17$$$$PropMap$$$Init$() {
    this.$_props$ = {};
  };
  $dvt$$17$$.$PropMap$.prototype.$getProperty$ = function $$dvt$$17$$$$PropMap$$$$getProperty$$($DvtSvgShadowUtils$$) {
    return this.$_props$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$PropMap$.prototype.setProperty = function $$dvt$$17$$$$PropMap$$$setProperty$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_props$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$PropMap$.prototype.$getStringProp$ = function $$dvt$$17$$$$PropMap$$$$getStringProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$];
    return $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$PropMap$.prototype.$getBooleanProp$ = function $$dvt$$17$$$$PropMap$$$$getBooleanProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$], $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$;
    "boolean" === typeof $DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ : 0 === $DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$ = !1 : 1 === $DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$ = !0 : "string" === typeof $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = "true" === $DvtSvgImageFillUtils$$.toLowerCase() || "yes" === $DvtSvgImageFillUtils$$.toLowerCase() || "on" === $DvtSvgImageFillUtils$$.toLowerCase());
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$PropMap$.prototype.$getIntegerProp$ = function $$dvt$$17$$$$PropMap$$$$getIntegerProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$], $DvtSvgGradientUtils$$;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = parseInt($DvtSvgImageFillUtils$$));
    return $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$PropMap$.prototype.$getFloatProp$ = function $$dvt$$17$$$$PropMap$$$$getFloatProp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_props$[$DvtSvgShadowUtils$$], $DvtSvgGradientUtils$$;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = parseFloat($DvtSvgImageFillUtils$$));
    return $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$PropMap$.prototype.getId = function $$dvt$$17$$$$PropMap$$$getId$() {
    return this.$getProperty$("id");
  };
  $dvt$$17$$.$PropMap$.prototype.setId = function $$dvt$$17$$$$PropMap$$$setId$($DvtSvgShadowUtils$$) {
    this.setProperty("id", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$PropMap$.prototype.$setProperties$ = function $$dvt$$17$$$$PropMap$$$$setProperties$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgPatternFillUtils$$++) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
      $DvtSvgImageFillUtils$$.name && void 0 !== $DvtSvgImageFillUtils$$.value && this.setProperty($DvtSvgImageFillUtils$$.name, $DvtSvgImageFillUtils$$.value);
    }
  };
  $dvt$$17$$.$PropMap$.prototype.$stamp$ = function $$dvt$$17$$$$PropMap$$$$stamp$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new this.constructor, $DvtSvgImageFillUtils$$ = {}, $DvtSvgGradientUtils$$;
    for ($DvtSvgGradientUtils$$ in this.$_props$) {
      $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$] = this.$_props$[$DvtSvgGradientUtils$$] && this.$_props$[$DvtSvgGradientUtils$$].replace ? this.$_props$[$DvtSvgGradientUtils$$].replace($dvt$$17$$.$PropMap$.$REGEXP$, function($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
        return $DvtSvgShadowUtils$$ && void 0 !== $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] ? $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] : $DvtSvgPatternFillUtils$$;
      }) : this.$_props$[$DvtSvgGradientUtils$$];
    }
    $DvtSvgPatternFillUtils$$.$_props$ = $DvtSvgImageFillUtils$$;
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$PropMap$.$toELContext$ = function $$dvt$$17$$$$PropMap$$$toELContext$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getAttributes();
    for (var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = {}, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgImageFillUtils$$[$DvtSvgPatternFillUtils$$.name] = $DvtSvgPatternFillUtils$$.value;
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$ImageLoader$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ImageLoader$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ImageLoader$.$loadImage$ = function $$dvt$$17$$$$ImageLoader$$$loadImage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$.$_implFactory$.$getImageLoader$().$loadImage$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$JsonUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$JsonUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$JsonUtils$.clone = function $$dvt$$17$$$$JsonUtils$$clone$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if (null == $DvtSvgShadowUtils$$) {
      return null;
    }
    var $DvtSvgGradientUtils$$ = null;
    if ($DvtSvgShadowUtils$$ instanceof Array) {
      for (var $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgFilterUtils$$++) {
        $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$] = $dvt$$17$$.$JsonUtils$.$_isDeepClonable$($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$]) ? $dvt$$17$$.$JsonUtils$.clone($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$], $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) : $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$];
      }
    } else {
      if ($DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$CSSStyle$) {
        $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.clone();
      } else {
        if ($DvtSvgShadowUtils$$ instanceof Date) {
          $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.getTime();
        } else {
          if ($dvt$$17$$.$JsonUtils$.$_isClonableObject$($DvtSvgShadowUtils$$)) {
            for ($DvtSvgFilterUtils$$ in $DvtSvgGradientUtils$$ = {}, $DvtSvgShadowUtils$$) {
              if (!$DvtSvgPatternFillUtils$$ || $DvtSvgPatternFillUtils$$($DvtSvgFilterUtils$$)) {
                var $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$];
                $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$] = $DvtSvgImageFillUtils$$ && 1 == $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$] || !$dvt$$17$$.$JsonUtils$.$_isDeepClonable$($DvtSvgFilterContext$$) || "_widgetConstructor" == $DvtSvgFilterUtils$$ ? $DvtSvgFilterContext$$ : $dvt$$17$$.$JsonUtils$.clone($DvtSvgFilterContext$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$] : null);
              }
            }
          }
        }
      }
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$JsonUtils$.$merge$ = function $$dvt$$17$$$$JsonUtils$$$merge$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$JsonUtils$.clone($DvtSvgShadowUtils$$, null, $DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$JsonUtils$.clone($DvtSvgPatternFillUtils$$, null, $DvtSvgImageFillUtils$$);
    if (null == $DvtSvgShadowUtils$$) {
      return $DvtSvgPatternFillUtils$$;
    }
    if (null == $DvtSvgPatternFillUtils$$) {
      return $DvtSvgShadowUtils$$;
    }
    $dvt$$17$$.$JsonUtils$.$_copy$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$JsonUtils$.$_copy$ = function $$dvt$$17$$$$JsonUtils$$$_copy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ in $DvtSvgShadowUtils$$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
      $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$ instanceof Array || "_widgetConstructor" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] = $DvtSvgGradientUtils$$ : $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] && $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] instanceof $dvt$$17$$.$CSSStyle$ ? $DvtSvgGradientUtils$$ instanceof $dvt$$17$$.$CSSStyle$ ? $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].$merge$($DvtSvgGradientUtils$$) : $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].$merge$(new $dvt$$17$$.$CSSStyle$($DvtSvgGradientUtils$$)) : 
      $dvt$$17$$.$JsonUtils$.$_isDeepClonable$($DvtSvgGradientUtils$$) ? $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] ? $dvt$$17$$.$JsonUtils$.$_copy$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]) : $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] = $DvtSvgGradientUtils$$ : $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$] = $DvtSvgGradientUtils$$;
    }
  };
  $dvt$$17$$.$JsonUtils$.$_isDeepClonable$ = function $$dvt$$17$$$$JsonUtils$$$_isDeepClonable$$($DvtSvgShadowUtils$$) {
    return "undefined" == typeof $DvtSvgShadowUtils$$ ? !1 : $DvtSvgShadowUtils$$ instanceof Object && !($DvtSvgShadowUtils$$ instanceof Boolean) && !($DvtSvgShadowUtils$$ instanceof String) && !($DvtSvgShadowUtils$$ instanceof Number) && !($DvtSvgShadowUtils$$ instanceof Function) && !$DvtSvgShadowUtils$$.then;
  };
  $dvt$$17$$.$JsonUtils$.$_isClonableObject$ = function $$dvt$$17$$$$JsonUtils$$$_isClonableObject$$($DvtSvgShadowUtils$$) {
    return !($DvtSvgShadowUtils$$ instanceof Object) || $DvtSvgShadowUtils$$.then || $DvtSvgShadowUtils$$.$jquery$ || "undefined" != typeof NodeList && $DvtSvgShadowUtils$$ instanceof NodeList || "undefined" != typeof Node && $DvtSvgShadowUtils$$ instanceof Node ? !1 : !0;
  };
  $dvt$$17$$.$BaseEvent$ = function $$dvt$$17$$$$BaseEvent$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$BaseEvent$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$BaseEvent$.prototype.Init = function $$dvt$$17$$$$BaseEvent$$$Init$($DvtSvgShadowUtils$$) {
    this.type = this.type = $DvtSvgShadowUtils$$.type;
    this.target = $dvt$$17$$.$BaseEvent$.$FindDisplayable$($DvtSvgShadowUtils$$.target);
    this.$_isPropagationStopped$ = !1;
    this.$_event$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$BaseEvent$.prototype.$getNativeEvent$ = function $$dvt$$17$$$$BaseEvent$$$$getNativeEvent$$() {
    return this.$_event$;
  };
  $dvt$$17$$.$BaseEvent$.prototype.preventDefault = function $$dvt$$17$$$$BaseEvent$$$preventDefault$() {
    this.$_event$.cancelable && this.$_event$.preventDefault();
  };
  $dvt$$17$$.$BaseEvent$.prototype.stopPropagation = function $$dvt$$17$$$$BaseEvent$$$stopPropagation$() {
    this.$_event$.stopPropagation && this.$_event$.stopPropagation();
    this.$_event$.cancelBubble = !0;
    this.$_event$.cancel = !0;
    this.$_event$.returnValue = !1;
    this.$_isPropagationStopped$ = !0;
  };
  $dvt$$17$$.$BaseEvent$.prototype.$isPropagationStopped$ = function $$dvt$$17$$$$BaseEvent$$$$isPropagationStopped$$() {
    return this.$_isPropagationStopped$;
  };
  $dvt$$17$$.$BaseEvent$.prototype.$getType$ = function $$dvt$$17$$$$BaseEvent$$$$getType$$() {
    return this.type;
  };
  $dvt$$17$$.$BaseEvent$.$FindDisplayable$ = function $$dvt$$17$$$$BaseEvent$$$FindDisplayable$$($DvtSvgShadowUtils$$) {
    for (;$DvtSvgShadowUtils$$;) {
      if ($DvtSvgShadowUtils$$.$_obj$ && $DvtSvgShadowUtils$$.$_obj$.$getObj$ && $DvtSvgShadowUtils$$.$_obj$.$getObj$()) {
        return $DvtSvgShadowUtils$$.$_obj$.$getObj$();
      }
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentNode;
    }
    return null;
  };
  $dvt$$17$$.$BaseComponentEvent$ = function $$dvt$$17$$$$BaseComponentEvent$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$BaseComponentEvent$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$BaseComponentEvent$.$CLIENT_ROW_KEY$ = "clientRowKey";
  $dvt$$17$$.$BaseComponentEvent$.prototype.Init = function $$dvt$$17$$$$BaseComponentEvent$$$Init$($DvtSvgShadowUtils$$) {
    this.type = this.$_type$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$BaseComponentEvent$.prototype.$getType$ = function $$dvt$$17$$$$BaseComponentEvent$$$$getType$$() {
    return this.$_type$;
  };
  $dvt$$17$$.$BaseComponentEvent$.prototype.$addParam$ = function $$dvt$$17$$$$BaseComponentEvent$$$$addParam$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_paramKeys$ || (this.$_paramKeys$ = [], this.$_paramValues$ = []);
    this.$_paramKeys$.push($DvtSvgShadowUtils$$);
    this.$_paramValues$.push($DvtSvgPatternFillUtils$$);
    this[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$BaseComponentEvent$.prototype.$getParamValue$ = function $$dvt$$17$$$$BaseComponentEvent$$$$getParamValue$$($DvtSvgShadowUtils$$) {
    if (!$DvtSvgShadowUtils$$ || !this.$_paramKeys$ || !this.$_paramValues$) {
      return null;
    }
    for (var $DvtSvgPatternFillUtils$$ = -1, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < this.$_paramKeys$.length;$DvtSvgImageFillUtils$$++) {
      if (this.$_paramKeys$[$DvtSvgImageFillUtils$$] == $DvtSvgShadowUtils$$) {
        $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$;
        break;
      }
    }
    return -1 != $DvtSvgPatternFillUtils$$ ? this.$_paramValues$[$DvtSvgPatternFillUtils$$] : this[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtFocusEvent$$, $dvt$$17$$.$BaseEvent$);
  $DvtFocusEvent$$.$FOCUS$ = $dvt$$17$$.$Obj$.$defineConstant$("focus");
  $DvtFocusEvent$$.$FOCUSIN$ = $dvt$$17$$.$Obj$.$defineConstant$("focusin");
  $DvtFocusEvent$$.$FOCUSOUT$ = $dvt$$17$$.$Obj$.$defineConstant$("focusout");
  $DvtFocusEvent$$.$BLUR$ = $dvt$$17$$.$Obj$.$defineConstant$("blur");
  $DvtFocusEvent$$.prototype.Init = function $$DvtFocusEvent$$$$Init$($DvtSvgShadowUtils$$) {
    $DvtFocusEvent$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.bubbles = $DvtSvgShadowUtils$$.bubbles;
    this.cancelable = $DvtSvgShadowUtils$$.cancelable;
    this.view = $DvtSvgShadowUtils$$.view;
    null != $DvtSvgShadowUtils$$.relatedTarget && (this.relatedTarget = $dvt$$17$$.$BaseEvent$.$FindDisplayable$($DvtSvgShadowUtils$$.relatedTarget));
  };
  $dvt$$17$$.KeyboardEvent = function $$dvt$$17$$$KeyboardEvent$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.KeyboardEvent, $dvt$$17$$.$BaseEvent$);
  $dvt$$17$$.KeyboardEvent.$KEYDOWN$ = $dvt$$17$$.$Obj$.$defineConstant$("keydown");
  $dvt$$17$$.KeyboardEvent.$KEYUP$ = $dvt$$17$$.$Obj$.$defineConstant$("keyup");
  $dvt$$17$$.KeyboardEvent.$KEYPRESS$ = $dvt$$17$$.$Obj$.$defineConstant$("keypress");
  $dvt$$17$$.KeyboardEvent.$TAB$ = 9;
  $dvt$$17$$.KeyboardEvent.$ENTER$ = 13;
  $dvt$$17$$.KeyboardEvent.$SHIFT$ = 16;
  $dvt$$17$$.KeyboardEvent.$CONTROL$ = 17;
  $dvt$$17$$.KeyboardEvent.$HOME$ = 36;
  $dvt$$17$$.KeyboardEvent.$END$ = 35;
  $dvt$$17$$.KeyboardEvent.$ESCAPE$ = 27;
  $dvt$$17$$.KeyboardEvent.$SPACE$ = 32;
  $dvt$$17$$.KeyboardEvent.$PAGE_UP$ = 33;
  $dvt$$17$$.KeyboardEvent.$PAGE_DOWN$ = 34;
  $dvt$$17$$.KeyboardEvent.$UP_ARROW$ = 38;
  $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$ = 40;
  $dvt$$17$$.KeyboardEvent.$DELETE$ = 46;
  $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$ = 37;
  $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$ = 39;
  $dvt$$17$$.KeyboardEvent.$OPEN_BRACKET$ = 219;
  $dvt$$17$$.KeyboardEvent.$CLOSE_BRACKET$ = 221;
  $dvt$$17$$.KeyboardEvent.$BACK_SLASH$ = 220;
  $dvt$$17$$.KeyboardEvent.$FORWARD_SLASH$ = 191;
  $dvt$$17$$.KeyboardEvent.ZERO = 48;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_ZERO$ = 96;
  $dvt$$17$$.KeyboardEvent.ONE = 49;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_ONE$ = 97;
  $dvt$$17$$.KeyboardEvent.$TWO$ = 50;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_TWO$ = 98;
  $dvt$$17$$.KeyboardEvent.$THREE$ = 51;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_THREE$ = 99;
  $dvt$$17$$.KeyboardEvent.$FOUR$ = 52;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_FOUR$ = 100;
  $dvt$$17$$.KeyboardEvent.$FIVE$ = 53;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_FIVE$ = 101;
  $dvt$$17$$.KeyboardEvent.$SIX$ = 54;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_PLUS$ = 107;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_MINUS$ = 109;
  $dvt$$17$$.KeyboardEvent.$WEBKIT_PLUS$ = 187;
  $dvt$$17$$.KeyboardEvent.$WEBKIT_MINUS$ = 189;
  $dvt$$17$$.KeyboardEvent.$GECKO_PLUS$ = 61;
  $dvt$$17$$.KeyboardEvent.$GECKO_MINUS$ = 173;
  $dvt$$17$$.KeyboardEvent.$WEBKIT_SEMICOLON$ = 186;
  $dvt$$17$$.KeyboardEvent.$GECKO_SEMICOLON$ = 59;
  $dvt$$17$$.KeyboardEvent.$A$ = 65;
  $dvt$$17$$.KeyboardEvent.$F$ = 70;
  $dvt$$17$$.KeyboardEvent.$L$ = 76;
  $dvt$$17$$.KeyboardEvent.$M$ = 77;
  $dvt$$17$$.KeyboardEvent.$N$ = 78;
  $dvt$$17$$.KeyboardEvent.$PERIOD$ = 190;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_PERIOD$ = 110;
  $dvt$$17$$.KeyboardEvent.$SINGLE_QUOTE$ = 222;
  $dvt$$17$$.KeyboardEvent.$STAR$ = 56;
  $dvt$$17$$.KeyboardEvent.$NUMPAD_STAR$ = 144;
  $dvt$$17$$.KeyboardEvent.$OPEN_ANGLED_BRACKET$ = 188;
  $dvt$$17$$.KeyboardEvent.$CLOSE_ANGLED_BRACKET$ = 190;
  $dvt$$17$$.KeyboardEvent.$GRAVE_ACCENT$ = 192;
  $dvt$$17$$.KeyboardEvent.prototype.Init = function $$dvt$$17$$$KeyboardEvent$$Init$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.KeyboardEvent.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.bubbles = $DvtSvgShadowUtils$$.bubbles;
    this.cancelable = $DvtSvgShadowUtils$$.cancelable;
    this.view = $DvtSvgShadowUtils$$.view;
    this.charCode = $DvtSvgShadowUtils$$.charCode;
    this.keyCode = $DvtSvgShadowUtils$$.keyCode;
    this.location = $DvtSvgShadowUtils$$.location;
    this.ctrlKey = $DvtSvgShadowUtils$$.ctrlKey || $DvtSvgShadowUtils$$.metaKey;
    this.altKey = $DvtSvgShadowUtils$$.altKey;
    this.shiftKey = $DvtSvgShadowUtils$$.shiftKey;
    this.repeat = $DvtSvgShadowUtils$$.repeat;
    this.locale = $DvtSvgShadowUtils$$.locale;
  };
  $dvt$$17$$.KeyboardEvent.$isPlus$ = function $$dvt$$17$$$KeyboardEvent$$isPlus$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    return $DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$NUMPAD_PLUS$ ? !0 : $dvt$$17$$.$Agent$.$isPlatformGecko$() ? $DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$GECKO_PLUS$ && $DvtSvgShadowUtils$$.shiftKey ? !0 : !1 : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$WEBKIT_PLUS$ && $DvtSvgShadowUtils$$.shiftKey ? !0 : !1;
  };
  $dvt$$17$$.KeyboardEvent.$isEquals$ = function $$dvt$$17$$$KeyboardEvent$$isEquals$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    if ($dvt$$17$$.$Agent$.$isPlatformGecko$()) {
      if ($DvtSvgPatternFillUtils$$ != $dvt$$17$$.KeyboardEvent.$GECKO_PLUS$ || $DvtSvgShadowUtils$$.shiftKey) {
        return !1;
      }
    } else {
      if ($DvtSvgPatternFillUtils$$ != $dvt$$17$$.KeyboardEvent.$WEBKIT_PLUS$ || $DvtSvgShadowUtils$$.shiftKey) {
        return !1;
      }
    }
    return !0;
  };
  $dvt$$17$$.KeyboardEvent.$isMinus$ = function $$dvt$$17$$$KeyboardEvent$$isMinus$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    if ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$NUMPAD_MINUS$) {
      return !0;
    }
    if ($dvt$$17$$.$Agent$.$isPlatformGecko$()) {
      if ($DvtSvgPatternFillUtils$$ != $dvt$$17$$.KeyboardEvent.$GECKO_MINUS$ || $DvtSvgShadowUtils$$.shiftKey) {
        return !1;
      }
    } else {
      if ($DvtSvgPatternFillUtils$$ != $dvt$$17$$.KeyboardEvent.$WEBKIT_MINUS$ || $DvtSvgShadowUtils$$.shiftKey) {
        return !1;
      }
    }
    return !0;
  };
  $dvt$$17$$.KeyboardEvent.$isUnderscore$ = function $$dvt$$17$$$KeyboardEvent$$isUnderscore$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    return $dvt$$17$$.$Agent$.$isPlatformGecko$() ? $DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$GECKO_MINUS$ && $DvtSvgShadowUtils$$.shiftKey ? !0 : !1 : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$WEBKIT_MINUS$ && $DvtSvgShadowUtils$$.shiftKey ? !0 : !1;
  };
  $dvt$$17$$.KeyboardEvent.$isSemicolon$ = function $$dvt$$17$$$KeyboardEvent$$isSemicolon$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    return $dvt$$17$$.$Agent$.$isPlatformGecko$() ? $DvtSvgShadowUtils$$ == $dvt$$17$$.KeyboardEvent.$GECKO_SEMICOLON$ : $DvtSvgShadowUtils$$ == $dvt$$17$$.KeyboardEvent.$WEBKIT_SEMICOLON$;
  };
  $dvt$$17$$.MouseEvent = function $$dvt$$17$$$MouseEvent$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.MouseEvent, $dvt$$17$$.$BaseEvent$);
  $dvt$$17$$.MouseEvent.$CLICK$ = $dvt$$17$$.$Obj$.$defineConstant$("click");
  $dvt$$17$$.MouseEvent.$DBLCLICK$ = $dvt$$17$$.$Obj$.$defineConstant$("dblclick");
  $dvt$$17$$.MouseEvent.$MOUSEOVER$ = $dvt$$17$$.$Obj$.$defineConstant$("mouseover");
  $dvt$$17$$.MouseEvent.$MOUSEOUT$ = $dvt$$17$$.$Obj$.$defineConstant$("mouseout");
  $dvt$$17$$.MouseEvent.$MOUSEDOWN$ = $dvt$$17$$.$Obj$.$defineConstant$("mousedown");
  $dvt$$17$$.MouseEvent.$MOUSEUP$ = $dvt$$17$$.$Obj$.$defineConstant$("mouseup");
  $dvt$$17$$.MouseEvent.$MOUSEMOVE$ = $dvt$$17$$.$Obj$.$defineConstant$("mousemove");
  $dvt$$17$$.MouseEvent.$MOUSEWHEEL$ = $dvt$$17$$.$Obj$.$defineConstant$("wheel");
  $dvt$$17$$.MouseEvent.$RIGHT_CLICK_BUTTON$ = 2;
  $dvt$$17$$.MouseEvent.prototype.Init = function $$dvt$$17$$$MouseEvent$$Init$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.MouseEvent.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    null != $DvtSvgShadowUtils$$.relatedTarget && (this.relatedTarget = $dvt$$17$$.$BaseEvent$.$FindDisplayable$($DvtSvgShadowUtils$$.relatedTarget));
    this.button = $DvtSvgShadowUtils$$.button;
    this.ctrlKey = $DvtSvgShadowUtils$$.ctrlKey || $DvtSvgShadowUtils$$.metaKey;
    this.shiftKey = $DvtSvgShadowUtils$$.shiftKey;
    this.pageX = $DvtSvgShadowUtils$$.pageX;
    this.pageY = $DvtSvgShadowUtils$$.pageY;
    this.$_isEventModifiedForIE$ = !1;
    null != $DvtSvgShadowUtils$$.wheelDeltaY ? this.wheelDelta = $DvtSvgShadowUtils$$.wheelDeltaY / 40 : null != $DvtSvgShadowUtils$$.deltaY ? (this.deltaMode = $DvtSvgShadowUtils$$.deltaMode, this.deltaY = $DvtSvgShadowUtils$$.deltaY, $DvtSvgShadowUtils$$.deltaMode == $DvtSvgShadowUtils$$.DOM_DELTA_LINE ? this.wheelDelta = -$DvtSvgShadowUtils$$.deltaY : $DvtSvgShadowUtils$$.deltaMode == $DvtSvgShadowUtils$$.DOM_DELTA_PIXEL && (this.wheelDelta = -$DvtSvgShadowUtils$$.deltaY / 15)) : this.wheelDelta = 
    null != $DvtSvgShadowUtils$$.wheelDelta ? $DvtSvgShadowUtils$$.wheelDelta / 40 : $DvtSvgShadowUtils$$.detail;
  };
  $dvt$$17$$.MouseEvent.prototype.$modifyEventForIE$ = function $$dvt$$17$$$MouseEvent$$$modifyEventForIE$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_isEventModifiedForIE$ || (this.type = $DvtSvgShadowUtils$$, this.relatedTarget = this.target, this.target = $dvt$$17$$.$BaseEvent$.$FindDisplayable$($DvtSvgPatternFillUtils$$), this.$_isEventModifiedForIE$ = !0);
  };
  $dvt$$17$$.TouchEvent = function $$dvt$$17$$$TouchEvent$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.TouchEvent, $dvt$$17$$.$BaseEvent$);
  $dvt$$17$$.TouchEvent.$TOUCHSTART$ = $dvt$$17$$.$Obj$.$defineConstant$("touchstart");
  $dvt$$17$$.TouchEvent.$TOUCHMOVE$ = $dvt$$17$$.$Obj$.$defineConstant$("touchmove");
  $dvt$$17$$.TouchEvent.$TOUCHEND$ = $dvt$$17$$.$Obj$.$defineConstant$("touchend");
  $dvt$$17$$.TouchEvent.$TOUCHCANCEL$ = $dvt$$17$$.$Obj$.$defineConstant$("touchcancel");
  $dvt$$17$$.TouchEvent.prototype.Init = function $$dvt$$17$$$TouchEvent$$Init$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.TouchEvent.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.type == $dvt$$17$$.TouchEvent.$TOUCHCANCEL$ && (this.type = $dvt$$17$$.TouchEvent.$TOUCHEND$);
    this.touches = $dvt$$17$$.TouchEvent.$createTouchArray$($DvtSvgShadowUtils$$.touches);
    this.targetTouches = $dvt$$17$$.TouchEvent.$createTouchArray$($DvtSvgShadowUtils$$.targetTouches);
    this.changedTouches = $dvt$$17$$.TouchEvent.$createTouchArray$($DvtSvgShadowUtils$$.changedTouches);
    this.$_touchManager$ = null;
  };
  $dvt$$17$$.TouchEvent.prototype.$blockTouchHold$ = function $$dvt$$17$$$TouchEvent$$$blockTouchHold$$() {
    this.$getNativeEvent$().$_touchHoldBlocked$ = !0;
  };
  $dvt$$17$$.TouchEvent.prototype.$isInitialTouch$ = function $$dvt$$17$$$TouchEvent$$$isInitialTouch$$() {
    return 0 == this.touches.length - this.changedTouches.length;
  };
  $dvt$$17$$.TouchEvent.prototype.$isTouchHoldBlocked$ = function $$dvt$$17$$$TouchEvent$$$isTouchHoldBlocked$$() {
    return this.$getNativeEvent$().$_touchHoldBlocked$ ? !0 : !1;
  };
  $dvt$$17$$.TouchEvent.$createTouchArray$ = function $$dvt$$17$$$TouchEvent$$createTouchArray$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = new $dvt$$17$$.Touch($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]);
      $DvtSvgPatternFillUtils$$.push($DvtSvgGradientUtils$$);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.TouchEvent.prototype.stopPropagation = function $$dvt$$17$$$TouchEvent$$stopPropagation$() {
    $dvt$$17$$.TouchEvent.$superclass$.stopPropagation.call(this);
    this.$_touchManager$ && this.$_touchManager$.$postEventBubble$(this);
  };
  $dvt$$17$$.TouchEvent.prototype.$setTouchManager$ = function $$dvt$$17$$$TouchEvent$$$setTouchManager$$($DvtSvgShadowUtils$$) {
    this.$_touchManager$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.Touch = function $$dvt$$17$$$Touch$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.Touch, $dvt$$17$$.$Obj$);
  $dvt$$17$$.Touch.prototype.Init = function $$dvt$$17$$$Touch$$Init$($DvtSvgShadowUtils$$) {
    this.clientX = $DvtSvgShadowUtils$$.clientX;
    this.clientY = $DvtSvgShadowUtils$$.clientY;
    this.screenX = $DvtSvgShadowUtils$$.screenX;
    this.screenY = $DvtSvgShadowUtils$$.screenY;
    this.pageX = $DvtSvgShadowUtils$$.pageX;
    this.pageY = $DvtSvgShadowUtils$$.pageY;
    this.target = $DvtSvgShadowUtils$$.target;
    this.identifier = null == $DvtSvgShadowUtils$$.identifier || isNaN($DvtSvgShadowUtils$$.identifier) ? 1 : $DvtSvgShadowUtils$$.identifier;
  };
  $dvt$$17$$.$TouchManager$ = function $$dvt$$17$$$$TouchManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$TouchManager$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$TouchManager$.$TOUCH_MODE$ = "mode";
  $dvt$$17$$.$TouchManager$.$TOUCH_MODE_DEFAULT$ = "defaultMode";
  $dvt$$17$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$ = "longPressMode";
  $dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$ = "prevHoverObj";
  $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$ = "hoverTouch";
  $dvt$$17$$.$TouchManager$.prototype.Init = function $$dvt$$17$$$$TouchManager$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgPatternFillUtils$$;
    this.$_id$ = $DvtSvgShadowUtils$$;
    this.$_touchHoldTimer$ = new $dvt$$17$$.$Timer$(this.$_context$, 200, this.$_handleTouchHoldStartTimer$, this);
    this.$_blockTouchHold$ = !1;
    this.$_touchMap$ = {};
    this.$_savedTouchInfo$ = [];
    this.$_addTouchHoldMoveEventListener$(this.$_onTouchHoldHover$, this);
    this.$_doubleTapTimer$ = new $dvt$$17$$.$Timer$(this.$_context$, 600, this.$_handleDoubleTapTimer$, this, 1);
    this.$_dvtTouchEvent$ = null;
  };
  $dvt$$17$$.$TouchManager$.prototype.$blockTouchHold$ = function $$dvt$$17$$$$TouchManager$$$$blockTouchHold$$() {
    this.$_stopTouchHoldTimer$();
    this.$_blockTouchHold$ = !0;
  };
  $dvt$$17$$.$TouchManager$.prototype.$unblockTouchHold$ = function $$dvt$$17$$$$TouchManager$$$$unblockTouchHold$$() {
    this.$_blockTouchHold$ = !1;
  };
  $dvt$$17$$.$TouchManager$.prototype.$_addTouchHoldMoveEventListener$ = function $$dvt$$17$$$$TouchManager$$$$_addTouchHoldMoveEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_START_TYPE$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    this.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_MOVE_TYPE$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    this.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_END_TYPE$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$TouchManager$.prototype.$_onTouchHoldHover$ = function $$dvt$$17$$$$TouchManager$$$$_onTouchHoldHover$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getType$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$touch$, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$(), $DvtSvgFilterUtils$$ = this.$_touchMap$[$DvtSvgImageFillUtils$$.identifier];
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.target;
    $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_END_TYPE$ ? ($DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, null, $DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$.$_isCancelEvent$ = this.$_isCancelEvent$, null != $DvtSvgShadowUtils$$ && this.$FireListener$(new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, 
    $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, null, $DvtSvgGradientUtils$$)), $DvtSvgFilterUtils$$[$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$] = null, this.$FireListener$($DvtSvgPatternFillUtils$$)) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_START_TYPE$ ? ($DvtSvgFilterUtils$$[$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$] = null, null != $DvtSvgShadowUtils$$ && this.$FireListener$(new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, 
    $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, null, $DvtSvgGradientUtils$$)), $DvtSvgFilterUtils$$[$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$] = $DvtSvgShadowUtils$$, this.$FireListener$(new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, null, $DvtSvgGradientUtils$$))) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_MOVE_TYPE$ && (this.$_fireHoverOverOutEvents$($DvtSvgShadowUtils$$, 
    $DvtSvgFilterUtils$$[$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$], $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$[$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$] = $DvtSvgShadowUtils$$, this.$FireListener$(new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, null, $DvtSvgGradientUtils$$)));
  };
  $dvt$$17$$.$TouchManager$.prototype.$_getObjFromTouch$ = function $$dvt$$17$$$$TouchManager$$$$_getObjFromTouch$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = null;
    if ($DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = this.$_context$.$getDocumentUtils$();
      $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$.$elementFromTouch$($DvtSvgShadowUtils$$));
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$TouchManager$.prototype.$_fireHoverOverOutEvents$ = function $$dvt$$17$$$$TouchManager$$$$_fireHoverOverOutEvents$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgPatternFillUtils$$ != $DvtSvgShadowUtils$$ && (null != $DvtSvgPatternFillUtils$$ && this.$FireListener$(new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$)), null != $DvtSvgShadowUtils$$ && this.$FireListener$(new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, 
    $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$)));
  };
  $dvt$$17$$.$TouchManager$.prototype.$addTouchEventListener$ = function $$dvt$$17$$$$TouchManager$$$$addTouchEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, !0);
    $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$.push($DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$TouchManager$.prototype.$removeTouchEventListener$ = function $$dvt$$17$$$$TouchManager$$$$removeTouchEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgShadowUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, !1)) {
      for (var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$ += 2) {
        if ($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$] === $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$ + 1] === $DvtSvgImageFillUtils$$) {
          $DvtSvgShadowUtils$$.splice($DvtSvgGradientUtils$$, 2);
          break;
        }
      }
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$_getListeners$ = function $$dvt$$17$$$$TouchManager$$$$_getListeners$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!this.$_listenerObj$) {
      if ($DvtSvgPatternFillUtils$$) {
        this.$_listenerObj$ = {};
      } else {
        return null;
      }
    }
    var $DvtSvgImageFillUtils$$ = this.$_listenerObj$[$DvtSvgShadowUtils$$];
    !$DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ = [], this.$_listenerObj$[$DvtSvgShadowUtils$$] = $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$TouchManager$.prototype.$FireListener$ = function $$dvt$$17$$$$TouchManager$$$$FireListener$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$.$getType$(), !1);
    if ($DvtSvgPatternFillUtils$$) {
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$ += 2) {
        $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].call($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$ + 1], $DvtSvgShadowUtils$$);
      }
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$startTouchHold$ = function $$dvt$$17$$$$TouchManager$$$$startTouchHold$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_startSingleFingerTouchId$;
    if (null != $DvtSvgPatternFillUtils$$ && !isNaN($DvtSvgPatternFillUtils$$)) {
      var $DvtSvgImageFillUtils$$ = this.$_touchMap$[$DvtSvgPatternFillUtils$$];
      if ($DvtSvgImageFillUtils$$) {
        var $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.startTarget, $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.startTouch;
        $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$();
        for (var $DvtSvgFilterContext$$ = this.$_findMatches$("touchId", $DvtSvgPatternFillUtils$$), $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgFilterContext$$.length;$DvtSvgImplFactory$$++) {
          var $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$[$DvtSvgImplFactory$$], $DvtDomXmlParser$$ = $DvtHtmlRichTooltipManager$$.touchObj, $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.touchId;
          $DvtDomXmlParser$$ != $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$ && this.$performAssociatedTouchEnd$(this.$getTouchInfo$($DvtHtmlRichTooltipManager$$).startTouch, $DvtDomXmlParser$$, null);
        }
        $DvtSvgImageFillUtils$$[$dvt$$17$$.$TouchManager$.$TOUCH_MODE$] = $dvt$$17$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$;
        this.$saveProcessedTouch$($DvtSvgPatternFillUtils$$, $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$, $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$, $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$, this.$HoverMoveInternal$, this.$HoverEndInternal$, this);
        $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_START_TYPE$, $DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, null, $DvtSvgShadowUtils$$);
        this.$FireListener$($DvtSvgPatternFillUtils$$);
      }
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$fireLogicalEvents$ = function $$dvt$$17$$$$TouchManager$$$$fireLogicalEvents$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.type, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$();
    $DvtSvgPatternFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHSTART$ ? ($DvtSvgShadowUtils$$.$isTouchHoldBlocked$() || this.$processAssociatedTouchAttempt$($DvtSvgShadowUtils$$, this.$HoverStartInternal$, this), this.$_doubleTapAttemptStarted$ && $DvtSvgShadowUtils$$.preventDefault()) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHMOVE$ ? this.$processAssociatedTouchMove$($DvtSvgShadowUtils$$, $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHEND$ && 
    this.$processAssociatedTouchEnd$($DvtSvgShadowUtils$$, $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$);
    if ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHEND$) {
      for (var $DvtSvgPatternFillUtils$$ = this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        var $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$], $DvtSvgFilterContext$$ = this.$getTouchInfo$($DvtSvgFilterUtils$$.identifier), $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$.currentObj;
        $DvtSvgFilterContext$$[$dvt$$17$$.$TouchManager$.$TOUCH_MODE$] != $dvt$$17$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$ && $DvtSvgFilterContext$$.fireClick && ($DvtSvgFilterContext$$ = new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$, $DvtSvgFilterUtils$$, $DvtSvgImplFactory$$, null, $DvtSvgImageFillUtils$$), $DvtSvgFilterContext$$.$touchEvent$ = $DvtSvgShadowUtils$$, this.$FireListener$($DvtSvgFilterContext$$), this.$_doubleTapAttemptStarted$ ? ($DvtSvgFilterContext$$ = 
        this.$_doubleTapAttemptObj$, this.$resetDoubleTap$(), $DvtSvgImplFactory$$ == $DvtSvgFilterContext$$ && ($DvtSvgFilterUtils$$ = new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$, $DvtSvgFilterUtils$$, $DvtSvgImplFactory$$, null, $DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$.$touchEvent$ = $DvtSvgShadowUtils$$, this.$FireListener$($DvtSvgFilterUtils$$))) : (this.$resetDoubleTap$(), this.$_doubleTapTimer$.start(), this.$_doubleTapAttemptStarted$ = 
        !0, this.$_doubleTapAttemptObj$ = $DvtSvgImplFactory$$));
      }
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$getTouchInfo$ = function $$dvt$$17$$$$TouchManager$$$$getTouchInfo$$($DvtSvgShadowUtils$$) {
    return this.$_touchMap$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$TouchManager$.prototype.$HoverStartInternal$ = function $$dvt$$17$$$$TouchManager$$$$HoverStartInternal$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_blockTouchHold$ || (this.$_startSingleFingerTouchId$ = $DvtSvgPatternFillUtils$$.identifier, this.$_stopTouchHoldTimer$(), this.$_startTouchHoldTimer$($DvtSvgShadowUtils$$));
  };
  $dvt$$17$$.$TouchManager$.prototype.$HoverMoveInternal$ = function $$dvt$$17$$$$TouchManager$$$$HoverMoveInternal$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_MOVE_TYPE$, $DvtSvgPatternFillUtils$$, this.$getTouchInfo$($DvtSvgPatternFillUtils$$.identifier).currentObj, null, $DvtSvgShadowUtils$$.$getNativeEvent$());
    this.$FireListener$($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$.preventDefault();
  };
  $dvt$$17$$.$TouchManager$.prototype.$HoverEndInternal$ = function $$dvt$$17$$$$TouchManager$$$$HoverEndInternal$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$ComponentTouchEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_END_TYPE$, $DvtSvgPatternFillUtils$$, this.$getTouchInfo$($DvtSvgPatternFillUtils$$.identifier).currentObj, null, $DvtSvgShadowUtils$$.$getNativeEvent$());
    this.$FireListener$($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.preventDefault();
  };
  $dvt$$17$$.$TouchManager$.prototype.$resetTouchHold$ = function $$dvt$$17$$$$TouchManager$$$$resetTouchHold$$() {
    this.$_startSingleFingerTouchId$ = null;
    this.$_stopTouchHoldTimer$();
  };
  $dvt$$17$$.$TouchManager$.prototype.$preEventBubble$ = function $$dvt$$17$$$$TouchManager$$$$preEventBubble$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$setTouchManager$ && $DvtSvgShadowUtils$$.$setTouchManager$(this);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.type;
    $DvtSvgPatternFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHSTART$ ? this.$processTouchStart$($DvtSvgShadowUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHMOVE$ ? this.$processTouchMove$($DvtSvgShadowUtils$$) : $DvtSvgPatternFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHEND$ && this.$processTouchEnd$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$TouchManager$.prototype.$postEventBubble$ = function $$dvt$$17$$$$TouchManager$$$$postEventBubble$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.type;
    if ($DvtSvgPatternFillUtils$$ != $dvt$$17$$.TouchEvent.$TOUCHSTART$ && $DvtSvgPatternFillUtils$$ != $dvt$$17$$.TouchEvent.$TOUCHMOVE$ && $DvtSvgPatternFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHEND$) {
      for ($DvtSvgShadowUtils$$ = this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches), $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgPatternFillUtils$$++) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$].identifier;
        delete this.$_touchMap$[$DvtSvgImageFillUtils$$];
        this.$_startSingleFingerTouchId$ == $DvtSvgImageFillUtils$$ && (this.$_startSingleFingerTouchId$ = null);
        for (var $DvtSvgImageFillUtils$$ = this.$_findMatches$("touchId", $DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
          var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
          this.$removeTooltipInfo$($DvtSvgFilterUtils$$.touchId, $DvtSvgFilterUtils$$.touchObj);
        }
      }
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$saveProcessedTouch$ = function $$dvt$$17$$$$TouchManager$$$$saveProcessedTouch$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    null == $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) || this.$_savedTouchInfo$.push($dvt$$17$$.$TouchManager$.$createSavedTouchInfo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$));
  };
  $dvt$$17$$.$TouchManager$.prototype.$processAssociatedTouch$ = function $$dvt$$17$$$$TouchManager$$$$processAssociatedTouch$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.type;
    $DvtSvgFilterUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHSTART$ ? this.$processAssociatedTouchAttempt$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) : $DvtSvgFilterUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHMOVE$ ? this.$processAssociatedTouchMove$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) : $DvtSvgFilterUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHEND$ && this.$processAssociatedTouchEnd$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$TouchManager$.prototype.$processAssociatedTouchDefault$ = function $$dvt$$17$$$$TouchManager$$$$processAssociatedTouchDefault$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$processAssociatedTouch$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$.immediateTouchAttempted, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$TouchManager$.prototype.$performAssociatedTouchEnd$ = function $$dvt$$17$$$$TouchManager$$$$performAssociatedTouchEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    for (var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.identifier, $DvtSvgFilterUtils$$ = this.$_getSavedTouchInfo$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgFilterUtils$$.length;$DvtSvgFilterContext$$++) {
      var $dvt$$17$$ = $DvtSvgFilterUtils$$[$DvtSvgFilterContext$$], $DvtSvgImplFactory$$ = $dvt$$17$$.listenerObj, $DvtHtmlRichTooltipManager$$ = $dvt$$17$$.endListener;
      this.$removeTooltipInfo$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
      $DvtHtmlRichTooltipManager$$ && $DvtHtmlRichTooltipManager$$.call($DvtSvgImplFactory$$, $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $dvt$$17$$);
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$processAssociatedTouchAttempt$ = function $$dvt$$17$$$$TouchManager$$$$processAssociatedTouchAttempt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    for (var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.changedTouches, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$.length;$DvtSvgFilterUtils$$++) {
      var $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$];
      $DvtSvgFilterContext$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $DvtSvgFilterContext$$);
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$processAssociatedTouchMove$ = function $$dvt$$17$$$$TouchManager$$$$processAssociatedTouchMove$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = this.$getTouchIdsForObj$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
      if (null != $DvtSvgFilterUtils$$ && !isNaN($DvtSvgFilterUtils$$) && ($DvtSvgFilterUtils$$ = $dvt$$17$$.$TouchManager$.$getTouchById$($DvtSvgFilterUtils$$, this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches)))) {
        for (var $DvtSvgFilterContext$$ = this.$_getSavedTouchInfo$($DvtSvgFilterUtils$$.identifier, $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgFilterContext$$.length;$DvtSvgGradientUtils$$++) {
          var $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$[$DvtSvgGradientUtils$$], $DvtHtmlRichTooltipManager$$ = $DvtSvgImplFactory$$.listenerObj;
          ($DvtSvgImplFactory$$ = $DvtSvgImplFactory$$.moveListener) && $DvtSvgImplFactory$$.call($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$);
        }
      }
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$processAssociatedTouchEnd$ = function $$dvt$$17$$$$TouchManager$$$$processAssociatedTouchEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = this.$getTouchIdsForObj$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = $dvt$$17$$.$TouchManager$.$getTouchById$($DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$], this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches));
      $DvtSvgFilterUtils$$ && this.$performAssociatedTouchEnd$($DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$_findMatches$ = function $$dvt$$17$$$$TouchManager$$$$_findMatches$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = [], $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < this.$_savedTouchInfo$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = this.$_savedTouchInfo$[$DvtSvgGradientUtils$$];
      $DvtSvgFilterUtils$$[$DvtSvgShadowUtils$$] == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.push($DvtSvgFilterUtils$$);
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$TouchManager$.prototype.$_getSavedTouchInfo$ = function $$dvt$$17$$$$TouchManager$$$$_getSavedTouchInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = this.$_findMatches$("touchId", $DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgFilterUtils$$++) {
      var $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$];
      $DvtSvgFilterContext$$.touchObj == $DvtSvgPatternFillUtils$$ && $DvtSvgGradientUtils$$.push($DvtSvgFilterContext$$);
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$TouchManager$.prototype.$getTouchIdsForObj$ = function $$dvt$$17$$$$TouchManager$$$$getTouchIdsForObj$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = [];
    $DvtSvgShadowUtils$$ = this.$_findMatches$("touchObj", $DvtSvgShadowUtils$$);
    for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$].touchId);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$TouchManager$.prototype.$removeTooltipInfo$ = function $$dvt$$17$$$$TouchManager$$$$removeTooltipInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = this.$_findMatches$("touchId", $DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgFilterUtils$$++) {
      var $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$[$DvtSvgFilterUtils$$];
      $DvtSvgFilterContext$$.touchObj == $DvtSvgPatternFillUtils$$ && $DvtSvgGradientUtils$$.push($DvtSvgFilterContext$$);
    }
    for ($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$.length;$DvtSvgFilterUtils$$++) {
      for (var $DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$], $dvt$$17$$ = -1, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < this.$_savedTouchInfo$.length;$DvtSvgImplFactory$$++) {
        $DvtSvgFilterContext$$ = this.$_savedTouchInfo$[$DvtSvgImplFactory$$], $DvtSvgFilterContext$$ == $DvtSvgImageFillUtils$$ && ($dvt$$17$$ = $DvtSvgImplFactory$$);
      }
      -1 != $dvt$$17$$ && (this.$_savedTouchInfo$.splice($dvt$$17$$, 1), 0 == this.$_savedTouchInfo$.length && this.$_context$.$getTooltipManager$().$hideTooltip$());
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$setTooltipEnabled$ = function $$dvt$$17$$$$TouchManager$$$$setTooltipEnabled$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = this.$_savedTouchInfo$, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
      $DvtSvgFilterUtils$$.touchId == $DvtSvgShadowUtils$$ && ($DvtSvgFilterUtils$$.allowTooltips = $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$getTooltipInfo$ = function $$dvt$$17$$$$TouchManager$$$$getTooltipInfo$$() {
    for (var $DvtSvgShadowUtils$$ = {}, $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = null, $DvtSvgGradientUtils$$ = null, $DvtSvgFilterUtils$$ = !1, $DvtSvgFilterContext$$ = this.$_findMatches$("allowTooltips", !0), $dvt$$17$$ = 0;$dvt$$17$$ < $DvtSvgFilterContext$$.length;$dvt$$17$$++) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgFilterContext$$[$dvt$$17$$], $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$.touchId;
      $DvtSvgGradientUtils$$ ? $DvtSvgImageFillUtils$$.grouping != $DvtSvgGradientUtils$$ && ($DvtSvgFilterUtils$$ = !0) : $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.grouping;
      var $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$ = this.$_touchMap$[$DvtSvgImplFactory$$];
      $DvtDomXmlParser$$ && ($DvtHtmlRichTooltipManager$$ = $DvtDomXmlParser$$.currentObj);
      $DvtSvgImageFillUtils$$.tooltipObjOverride && ($DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$.tooltipObjOverride);
      $DvtSvgPatternFillUtils$$.push($DvtSvgImplFactory$$);
      $DvtSvgImageFillUtils$$ = $DvtHtmlRichTooltipManager$$;
    }
    $DvtSvgFilterUtils$$ && ($DvtSvgPatternFillUtils$$ = []);
    $DvtSvgShadowUtils$$.touchIds = $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$.tooltipTarget = $DvtSvgImageFillUtils$$;
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$TouchManager$.prototype.$processTouchStart$ = function $$dvt$$17$$$$TouchManager$$$$processTouchStart$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.changedTouches, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.screenX, $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$.screenY, $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$.identifier, $DvtHtmlRichTooltipManager$$ = this.$_getObjFromTouch$($DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ = {x:$DvtSvgFilterUtils$$, y:$DvtSvgFilterContext$$, prevX:$DvtSvgFilterUtils$$, prevY:$DvtSvgFilterContext$$, pageX:$DvtSvgGradientUtils$$.pageX, 
      pageY:$DvtSvgGradientUtils$$.pageY, prevPageX:$DvtSvgGradientUtils$$.pageX, prevPageY:$DvtSvgGradientUtils$$.pageY, dx:0, dy:0, fireClick:!0, startTarget:$DvtHtmlRichTooltipManager$$, currentObj:$DvtHtmlRichTooltipManager$$, touchMoved:!1, touchtype:null, startTouch:$DvtSvgGradientUtils$$};
      $DvtSvgGradientUtils$$[$dvt$$17$$.$TouchManager$.$TOUCH_MODE$] = $dvt$$17$$.$TouchManager$.$TOUCH_MODE_DEFAULT$;
      $DvtSvgGradientUtils$$.origx = $DvtSvgFilterUtils$$;
      $DvtSvgGradientUtils$$.origy = $DvtSvgFilterContext$$;
      this.$_touchMap$[$DvtSvgImplFactory$$] = $DvtSvgGradientUtils$$;
    }
    !this.$_isHovering$() && this.$_isTouchHoldAllowed$() || $DvtSvgShadowUtils$$.$blockTouchHold$();
  };
  $dvt$$17$$.$TouchManager$.prototype.$_isTouchHoldAllowed$ = function $$dvt$$17$$$$TouchManager$$$$_isTouchHoldAllowed$$() {
    var $DvtSvgShadowUtils$$ = !1, $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$;
    for ($DvtSvgImageFillUtils$$ in this.$_touchMap$) {
      this.$getTouchInfo$($DvtSvgImageFillUtils$$).touchMoved && ($DvtSvgShadowUtils$$ = !0), $DvtSvgPatternFillUtils$$++;
    }
    return 1 < $DvtSvgPatternFillUtils$$ && !$DvtSvgShadowUtils$$ ? (this.$resetTouchHold$(), !1) : !0;
  };
  $dvt$$17$$.$TouchManager$.prototype.$_isHovering$ = function $$dvt$$17$$$$TouchManager$$$$_isHovering$$() {
    for (var $DvtSvgShadowUtils$$ in this.$_touchMap$) {
      if (this.$getTouchInfo$($DvtSvgShadowUtils$$)[$dvt$$17$$.$TouchManager$.$TOUCH_MODE$] == $dvt$$17$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$) {
        return !0;
      }
    }
    return !1;
  };
  $dvt$$17$$.$TouchManager$.prototype.$_getStoredTouches$ = function $$dvt$$17$$$$TouchManager$$$$_getStoredTouches$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
      this.$getTouchInfo$($DvtSvgGradientUtils$$.identifier) && $DvtSvgPatternFillUtils$$.push($DvtSvgGradientUtils$$);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$TouchManager$.prototype.$processTouchMove$ = function $$dvt$$17$$$$TouchManager$$$$processTouchMove$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_getStoredTouches$($DvtSvgShadowUtils$$.changedTouches);
    $DvtSvgShadowUtils$$ = this.$_getStoredTouches$($DvtSvgShadowUtils$$.touches);
    for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgFilterUtils$$ = this.$_getObjFromTouch$($DvtSvgGradientUtils$$), $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$.identifier, $DvtSvgImplFactory$$ = this.$getTouchInfo$($DvtSvgFilterContext$$);
      $DvtSvgImplFactory$$.currentObj = $DvtSvgFilterUtils$$;
      $DvtSvgImplFactory$$.touchMoved = !0;
      $DvtSvgImplFactory$$[$dvt$$17$$.$TouchManager$.$TOUCH_MODE$] != $dvt$$17$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$ && ($DvtSvgFilterUtils$$ = Math.abs($DvtSvgImplFactory$$.pageX - $DvtSvgGradientUtils$$.pageX), $DvtSvgGradientUtils$$ = Math.abs($DvtSvgImplFactory$$.pageY - $DvtSvgGradientUtils$$.pageY), this.$_startSingleFingerTouchId$ == $DvtSvgFilterContext$$ && (0 < $DvtSvgFilterUtils$$ || 0 < $DvtSvgGradientUtils$$) && this.$resetTouchHold$(), $DvtSvgImplFactory$$.touchMoved = 3 < $DvtSvgFilterUtils$$ || 
      3 < $DvtSvgGradientUtils$$);
      $DvtSvgImplFactory$$.fireClick && $DvtSvgImplFactory$$[$dvt$$17$$.$TouchManager$.$TOUCH_MODE$] != $dvt$$17$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$ && $DvtSvgImplFactory$$.currentObj != $DvtSvgImplFactory$$.startTarget && ($DvtSvgImplFactory$$.fireClick = !1);
    }
    for ($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgImplFactory$$ = this.$getTouchInfo$($DvtSvgGradientUtils$$.identifier), $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$.screenX, $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$.screenY, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$ - $DvtSvgImplFactory$$.x, $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$ - $DvtSvgImplFactory$$.y;
      $DvtSvgImplFactory$$.prevX = $DvtSvgImplFactory$$.x;
      $DvtSvgImplFactory$$.prevY = $DvtSvgImplFactory$$.y;
      $DvtSvgImplFactory$$.dx = $DvtSvgFilterUtils$$;
      $DvtSvgImplFactory$$.dy = $DvtHtmlRichTooltipManager$$;
      $DvtSvgImplFactory$$.x = $DvtSvgPatternFillUtils$$;
      $DvtSvgImplFactory$$.y = $DvtSvgFilterContext$$;
      $DvtSvgImplFactory$$.prevPageX = $DvtSvgImplFactory$$.pageX;
      $DvtSvgImplFactory$$.prevPageY = $DvtSvgImplFactory$$.pageY;
      $DvtSvgImplFactory$$.pageX = $DvtSvgGradientUtils$$.pageX;
      $DvtSvgImplFactory$$.pageY = $DvtSvgGradientUtils$$.pageY;
    }
  };
  $dvt$$17$$.$TouchManager$.prototype.$processTouchEnd$ = function $$dvt$$17$$$$TouchManager$$$$processTouchEnd$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.changedTouches;
    for (var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgPatternFillUtils$$++) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$], $DvtSvgGradientUtils$$ = this.$_getObjFromTouch$($DvtSvgImageFillUtils$$);
      if (($DvtSvgImageFillUtils$$ = this.$getTouchInfo$($DvtSvgImageFillUtils$$.identifier)) && $DvtSvgImageFillUtils$$.fireClick) {
        if ($DvtSvgImageFillUtils$$[$dvt$$17$$.$TouchManager$.$TOUCH_MODE$] == $dvt$$17$$.$TouchManager$.$TOUCH_MODE_LONG_PRESS$) {
          this.$_startSingleFingerTouchId$ = null;
        } else {
          var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.touchMoved;
          $DvtSvgImageFillUtils$$.fireClick = $DvtSvgGradientUtils$$ == $DvtSvgImageFillUtils$$.startTarget && !$DvtSvgFilterUtils$$;
        }
      }
    }
    this.$_context$.$clearStageAbsolutePosition$();
  };
  $dvt$$17$$.$TouchManager$.$getTouchById$ = function $$dvt$$17$$$$TouchManager$$$getTouchById$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (null != $DvtSvgShadowUtils$$ && !isNaN($DvtSvgShadowUtils$$)) {
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
        var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$];
        if ($DvtSvgGradientUtils$$.identifier == $DvtSvgShadowUtils$$) {
          return $DvtSvgGradientUtils$$;
        }
      }
    }
    return null;
  };
  $dvt$$17$$.$TouchManager$.$createSavedTouchInfo$ = function $$dvt$$17$$$$TouchManager$$$createSavedTouchInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    $DvtSvgShadowUtils$$ = {touchId:$DvtSvgShadowUtils$$, tooltipObjOverride:null, grouping:$DvtSvgImageFillUtils$$, type:$DvtSvgGradientUtils$$, touchObj:$DvtSvgPatternFillUtils$$, allowTooltips:!0};
    $DvtSvgShadowUtils$$.moveListener = $DvtSvgFilterUtils$$;
    $DvtSvgShadowUtils$$.endListener = $DvtSvgFilterContext$$;
    $DvtSvgShadowUtils$$.listenerObj = $dvt$$17$$;
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$TouchManager$.prototype.$_handleTouchHoldStartTimer$ = function $$dvt$$17$$$$TouchManager$$$$_handleTouchHoldStartTimer$$() {
    var $DvtSvgShadowUtils$$ = this.$_dvtTouchEvent$;
    this.$_stopTouchHoldTimer$();
    this.$startTouchHold$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$TouchManager$.prototype.$_startTouchHoldTimer$ = function $$dvt$$17$$$$TouchManager$$$$_startTouchHoldTimer$$($DvtSvgShadowUtils$$) {
    this.$_dvtTouchEvent$ = $DvtSvgShadowUtils$$;
    this.$_touchHoldTimer$ && this.$_touchHoldTimer$.start();
  };
  $dvt$$17$$.$TouchManager$.prototype.$_stopTouchHoldTimer$ = function $$dvt$$17$$$$TouchManager$$$$_stopTouchHoldTimer$$() {
    this.$_dvtTouchEvent$ = null;
    this.$_touchHoldTimer$ && this.$_touchHoldTimer$.stop();
  };
  $dvt$$17$$.$TouchManager$.prototype.$_handleDoubleTapTimer$ = function $$dvt$$17$$$$TouchManager$$$$_handleDoubleTapTimer$$() {
    this.$resetDoubleTap$();
  };
  $dvt$$17$$.$TouchManager$.prototype.$resetDoubleTap$ = function $$dvt$$17$$$$TouchManager$$$$resetDoubleTap$$() {
    this.$_doubleTapAttemptStarted$ = !1;
    this.$_doubleTapAttemptObj$ = null;
    this.$_doubleTapTimer$.stop();
  };
  $dvt$$17$$.$TouchManager$.prototype.$getMultiTouchData$ = function $$dvt$$17$$$$TouchManager$$$$getMultiTouchData$$($DvtSvgShadowUtils$$) {
    if (2 == $DvtSvgShadowUtils$$.length) {
      var $DvtSvgPatternFillUtils$$ = this.$_touchMap$[$DvtSvgShadowUtils$$[0]];
      $DvtSvgShadowUtils$$ = this.$_touchMap$[$DvtSvgShadowUtils$$[1]];
      if (null == $DvtSvgPatternFillUtils$$ || null == $DvtSvgShadowUtils$$ || 0 == $DvtSvgPatternFillUtils$$.dx && 0 == $DvtSvgShadowUtils$$.dy) {
        return null;
      }
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.pageX - $DvtSvgShadowUtils$$.pageX, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.pageY - $DvtSvgShadowUtils$$.pageY, $DvtSvgImageFillUtils$$ = Math.sqrt($DvtSvgImageFillUtils$$ * $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.prevPageX - $DvtSvgShadowUtils$$.prevPageX, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.prevPageY - $DvtSvgShadowUtils$$.prevPageY, 
      $DvtSvgFilterContext$$ = ($DvtSvgPatternFillUtils$$.pageX + $DvtSvgShadowUtils$$.pageX) / 2, $dvt$$17$$ = ($DvtSvgPatternFillUtils$$.pageY + $DvtSvgShadowUtils$$.pageY) / 2;
      return {$dz$:$DvtSvgImageFillUtils$$ - Math.sqrt($DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$ + $DvtSvgFilterUtils$$ * $DvtSvgFilterUtils$$), $cx$:$DvtSvgFilterContext$$, $cy$:$dvt$$17$$, $dcx$:$DvtSvgFilterContext$$ - ($DvtSvgPatternFillUtils$$.prevPageX + $DvtSvgShadowUtils$$.prevPageX) / 2, $dcy$:$dvt$$17$$ - ($DvtSvgPatternFillUtils$$.prevPageY + $DvtSvgShadowUtils$$.prevPageY) / 2, $dist$:$DvtSvgImageFillUtils$$};
    }
    return null;
  };
  $dvt$$17$$.$TouchManager$.prototype.$calcAveragePosition$ = function $$dvt$$17$$$$TouchManager$$$$calcAveragePosition$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$ = 0, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$;$DvtSvgFilterUtils$$++) {
      var $DvtSvgFilterContext$$ = this.$getTouchInfo$($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$]), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$.pageX, $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ + $DvtSvgFilterContext$$.pageY
    }
    return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$ / $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ / $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$TouchManager$.prototype.$getStartTargetsByIds$ = function $$dvt$$17$$$$TouchManager$$$$getStartTargetsByIds$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push(this.$getTouchInfo$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]).startTarget);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$TouchManager$.prototype.reset = function $$dvt$$17$$$$TouchManager$$$reset$() {
    this.$_touchMap$ = {};
    this.$_savedTouchInfo$ = [];
    this.$resetTouchHold$();
    this.$resetDoubleTap$();
  };
  $dvt$$17$$.$ViewportChangeEvent$ = function $$dvt$$17$$$$ViewportChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($dvt$$17$$.$ViewportChangeEvent$.$TYPE$);
    this.$_oldDim$ = $DvtSvgShadowUtils$$;
    this.$_newDim$ = $DvtSvgPatternFillUtils$$;
    this.$_evt$ = $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$ViewportChangeEvent$.$TYPE$ = "viewportChange";
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ViewportChangeEvent$, $dvt$$17$$.$BaseComponentEvent$);
  $dvt$$17$$.$ViewportChangeEvent$.prototype.$getNativeEvent$ = function $$dvt$$17$$$$ViewportChangeEvent$$$$getNativeEvent$$() {
    return this.$_evt$;
  };
  $DvtActionTooltipEvent$$.$TOOLTIP_CLOSED_TYPE$ = "actiontooltipclosed";
  $DvtActionTooltipEvent$$.$TOOLTIP_STARTED_TYPE$ = "actiontooltipstarted";
  $dvt$$17$$.$Obj$.$createSubclass$($DvtActionTooltipEvent$$, $dvt$$17$$.$BaseComponentEvent$);
  $DvtActionTooltipEvent$$.prototype.Init = function $$DvtActionTooltipEvent$$$$Init$($DvtSvgShadowUtils$$) {
    $DvtActionTooltipEvent$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$ComponentTouchEvent$ = function $$dvt$$17$$$$ComponentTouchEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_START_TYPE$ = "touchholdstart";
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_MOVE_TYPE$ = "touchholdmove";
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOLD_END_TYPE$ = "touchholdend";
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$ = "touchhoverstart";
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$ = "touchhovermove";
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$ = "touchhoverend";
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$ = "touchhoverover";
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$ = "touchhoverout";
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$ = "touchclick";
  $dvt$$17$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$ = "touchdblclick";
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ComponentTouchEvent$, $dvt$$17$$.$BaseComponentEvent$);
  $dvt$$17$$.$ComponentTouchEvent$.prototype.Init = function $$dvt$$17$$$$ComponentTouchEvent$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$17$$.$ComponentTouchEvent$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.target = $DvtSvgImageFillUtils$$;
    this.$touch$ = $DvtSvgPatternFillUtils$$;
    this.relatedTarget = $DvtSvgGradientUtils$$;
    this.$_isPropagationStopped$ = !1;
    this.$_nativeEvent$ = $DvtSvgFilterUtils$$;
  };
  $dvt$$17$$.$ComponentTouchEvent$.prototype.preventDefault = function $$dvt$$17$$$$ComponentTouchEvent$$$preventDefault$() {
  };
  $dvt$$17$$.$ComponentTouchEvent$.prototype.stopPropagation = function $$dvt$$17$$$$ComponentTouchEvent$$$stopPropagation$() {
    this.$_isPropagationStopped$ = !0;
  };
  $dvt$$17$$.$ComponentTouchEvent$.prototype.$isPropagationStopped$ = function $$dvt$$17$$$$ComponentTouchEvent$$$$isPropagationStopped$$() {
    return this.$_isPropagationStopped$;
  };
  $dvt$$17$$.$ComponentTouchEvent$.prototype.$getNativeEvent$ = function $$dvt$$17$$$$ComponentTouchEvent$$$$getNativeEvent$$() {
    return this.$_nativeEvent$;
  };
  $dvt$$17$$.$ResizeEvent$ = function $$dvt$$17$$$$ResizeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ResizeEvent$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ResizeEvent$.$RESIZE_EVENT$ = "dvtResizeEvent";
  $dvt$$17$$.$ResizeEvent$.prototype.Init = function $$dvt$$17$$$$ResizeEvent$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.type = $dvt$$17$$.$ResizeEvent$.$RESIZE_EVENT$;
    this.$_ww$ = $DvtSvgShadowUtils$$;
    this.$_hh$ = $DvtSvgPatternFillUtils$$;
    this.$_xx$ = $DvtSvgImageFillUtils$$;
    this.$_yy$ = $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$ResizeEvent$.prototype.getWidth = function $$dvt$$17$$$$ResizeEvent$$$getWidth$() {
    return this.$_ww$;
  };
  $dvt$$17$$.$ResizeEvent$.prototype.getHeight = function $$dvt$$17$$$$ResizeEvent$$$getHeight$() {
    return this.$_hh$;
  };
  $dvt$$17$$.$ResizeEvent$.prototype.$getX$ = function $$dvt$$17$$$$ResizeEvent$$$$getX$$() {
    return this.$_xx$;
  };
  $dvt$$17$$.$ResizeEvent$.prototype.$getY$ = function $$dvt$$17$$$$ResizeEvent$$$$getY$$() {
    return this.$_yy$;
  };
  $dvt$$17$$.$ResizeEvent$.prototype.$getType$ = function $$dvt$$17$$$$ResizeEvent$$$$getType$$() {
    return this.type;
  };
  $dvt$$17$$.$ScrollEvent$ = function $$dvt$$17$$$$ScrollEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ScrollEvent$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ScrollEvent$.$SCROLL_EVENT$ = "dvtScrollEvent";
  $dvt$$17$$.$ScrollEvent$.prototype.Init = function $$dvt$$17$$$$ScrollEvent$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.type = $dvt$$17$$.$ScrollEvent$.$SCROLL_EVENT$;
    this.$_x$ = $DvtSvgShadowUtils$$;
    this.$_y$ = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$ScrollEvent$.prototype.$getX$ = function $$dvt$$17$$$$ScrollEvent$$$$getX$$() {
    return this.$_x$;
  };
  $dvt$$17$$.$ScrollEvent$.prototype.$getY$ = function $$dvt$$17$$$$ScrollEvent$$$$getY$$() {
    return this.$_y$;
  };
  $dvt$$17$$.$ScrollEvent$.prototype.$getType$ = function $$dvt$$17$$$$ScrollEvent$$$$getType$$() {
    return this.type;
  };
  $dvt$$17$$.$MarqueeEvent$ = function $$dvt$$17$$$$MarqueeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($dvt$$17$$.$MarqueeEvent$.$TYPE$);
    this.$subtype$ = $DvtSvgShadowUtils$$;
    this.x = $DvtSvgPatternFillUtils$$;
    this.y = $DvtSvgImageFillUtils$$;
    this.$w$ = $DvtSvgGradientUtils$$;
    this.$h$ = $DvtSvgFilterUtils$$;
    this.ctrlKey = $DvtSvgFilterContext$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$MarqueeEvent$, $dvt$$17$$.$BaseComponentEvent$);
  $dvt$$17$$.$MarqueeEvent$.$TYPE$ = "dvtMarquee";
  $dvt$$17$$.$MarqueeEvent$.$SUBTYPE_START$ = "dvtMarqueeStartEvent";
  $dvt$$17$$.$MarqueeEvent$.$SUBTYPE_MOVE$ = "dvtMarqueeMoveEvent";
  $dvt$$17$$.$MarqueeEvent$.$SUBTYPE_END$ = "dvtMarqueeEndEvent";
  $dvt$$17$$.$MarqueeEvent$.prototype.$getSubtype$ = function $$dvt$$17$$$$MarqueeEvent$$$$getSubtype$$() {
    return this.$subtype$;
  };
  $dvt$$17$$.$PanZoomEvent$ = function $$dvt$$17$$$$PanZoomEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    this.Init($dvt$$17$$.$PanZoomEvent$.$TYPE$);
    this.$subtype$ = $DvtSvgShadowUtils$$;
    this.$dxMin$ = $DvtSvgPatternFillUtils$$;
    this.$dxMax$ = $DvtSvgImageFillUtils$$;
    this.$dyMin$ = $DvtSvgGradientUtils$$;
    this.$dyMax$ = $DvtSvgFilterUtils$$;
    this.$dxMinTotal$ = $DvtSvgFilterContext$$;
    this.$dxMaxTotal$ = $DvtSvgImplFactory$$;
    this.$dyMinTotal$ = $DvtHtmlRichTooltipManager$$;
    this.$dyMaxTotal$ = $DvtDomXmlParser$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$PanZoomEvent$, $dvt$$17$$.$BaseComponentEvent$);
  $dvt$$17$$.$PanZoomEvent$.$TYPE$ = "dvtPanZoom";
  $dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PAN_START$ = "dvtPanStartEvent";
  $dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PAN_MOVE$ = "dvtPanMoveEvent";
  $dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PAN_END$ = "dvtPanEndEvent";
  $dvt$$17$$.$PanZoomEvent$.$SUBTYPE_ZOOM$ = "dvtZoomEvent";
  $dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PINCH_START$ = "dvtPinchStartEvent";
  $dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PINCH_MOVE$ = "dvtPinchMoveEvent";
  $dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PINCH_END$ = "dvtPinchEndEvent";
  $dvt$$17$$.$PanZoomEvent$.prototype.$getSubtype$ = function $$dvt$$17$$$$PanZoomEvent$$$$getSubtype$$() {
    return this.$subtype$;
  };
  $dvt$$17$$.$SimpleScrollbarEvent$ = function $$dvt$$17$$$$SimpleScrollbarEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($dvt$$17$$.$SimpleScrollbarEvent$.$TYPE$);
    this.$_subtype$ = $DvtSvgShadowUtils$$;
    this.$_newMin$ = $DvtSvgPatternFillUtils$$;
    this.$_newMax$ = $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SimpleScrollbarEvent$, $dvt$$17$$.$BaseComponentEvent$);
  $dvt$$17$$.$SimpleScrollbarEvent$.$TYPE$ = "dvtSimpleScrollbar";
  $dvt$$17$$.$SimpleScrollbarEvent$.$SUBTYPE_MOVE$ = "dvtMoveEvent";
  $dvt$$17$$.$SimpleScrollbarEvent$.$SUBTYPE_END$ = "dvtEndEvent";
  $dvt$$17$$.$SimpleScrollbarEvent$.prototype.$getSubtype$ = function $$dvt$$17$$$$SimpleScrollbarEvent$$$$getSubtype$$() {
    return this.$_subtype$;
  };
  $dvt$$17$$.$DomEventFactory$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$DomEventFactory$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$DomEventFactory$.$newEvent$ = function $$dvt$$17$$$$DomEventFactory$$$newEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.type;
    if ($DvtSvgImageFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHSTART$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHMOVE$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHEND$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHCANCEL$) {
      return new $dvt$$17$$.TouchEvent($DvtSvgShadowUtils$$);
    }
    if ($DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYDOWN$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYUP$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYPRESS$) {
      return new $dvt$$17$$.KeyboardEvent($DvtSvgShadowUtils$$);
    }
    $DvtSvgPatternFillUtils$$.$_nativeEvent$ != $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$.$_nativeEvent$ = $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$.$_logicalEvent$ = $DvtSvgImageFillUtils$$ == $DvtFocusEvent$$.$FOCUS$ || $DvtSvgImageFillUtils$$ == $DvtFocusEvent$$.$FOCUSIN$ || $DvtSvgImageFillUtils$$ == $DvtFocusEvent$$.$FOCUSOUT$ || $DvtSvgImageFillUtils$$ == $DvtFocusEvent$$.$BLUR$ ? new $DvtFocusEvent$$($DvtSvgShadowUtils$$) : new $dvt$$17$$.MouseEvent($DvtSvgShadowUtils$$));
    return $DvtSvgPatternFillUtils$$.$_logicalEvent$;
  };
  $dvt$$17$$.$DomEventFactory$.$generateMouseEventFromKeyboardEvent$ = function $$dvt$$17$$$$DomEventFactory$$$generateMouseEventFromKeyboardEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$ = null;
    document.createEvent && ($DvtSvgFilterContext$$ = document.createEvent("MouseEvents"), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$stageToPageCoords$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $DvtSvgFilterContext$$.initMouseEvent($DvtSvgImageFillUtils$$, !0, !0, window, 1, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y, $DvtSvgShadowUtils$$.ctrlKey, $DvtSvgShadowUtils$$.altKey, $DvtSvgShadowUtils$$.shiftKey, $DvtSvgShadowUtils$$.metaKey, 
    0, null));
    return $DvtSvgFilterContext$$ ? ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgFilterContext$$, $DvtSvgPatternFillUtils$$), $DvtSvgPatternFillUtils$$.target = $DvtSvgShadowUtils$$.target, $DvtSvgPatternFillUtils$$) : null;
  };
  $dvt$$17$$.$PanEvent$ = function $$dvt$$17$$$$PanEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($dvt$$17$$.$PanEvent$.$TYPE$);
    this.type = this.$getType$();
    this.$_subtype$ = $DvtSvgShadowUtils$$;
    this.$_newX$ = $DvtSvgPatternFillUtils$$;
    this.$_newY$ = $DvtSvgImageFillUtils$$;
    this.$_oldX$ = $DvtSvgGradientUtils$$;
    this.$_oldY$ = $DvtSvgFilterUtils$$;
    this.$_animator$ = $DvtSvgFilterContext$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$PanEvent$, $dvt$$17$$.$BaseComponentEvent$);
  $dvt$$17$$.$PanEvent$.$TYPE$ = "dvtPan";
  $dvt$$17$$.$PanEvent$.$SUBTYPE_DRAG_PAN_BEGIN$ = "dragPanBegin";
  $dvt$$17$$.$PanEvent$.$SUBTYPE_DRAG_PAN_END$ = "dragPanEnd";
  $dvt$$17$$.$PanEvent$.$SUBTYPE_PANNED$ = "panned";
  $dvt$$17$$.$PanEvent$.$SUBTYPE_PANNING$ = "panning";
  $dvt$$17$$.$PanEvent$.$SUBTYPE_ELASTIC_ANIM_BEGIN$ = "elasticAnimBegin";
  $dvt$$17$$.$PanEvent$.$SUBTYPE_ELASTIC_ANIM_END$ = "elasticAnimEnd";
  $dvt$$17$$.$PanEvent$.prototype.$getSubType$ = function $$dvt$$17$$$$PanEvent$$$$getSubType$$() {
    return this.$_subtype$;
  };
  $dvt$$17$$.$ZoomEvent$ = function $$dvt$$17$$$$ZoomEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    this.Init($dvt$$17$$.$ZoomEvent$.$TYPE$);
    this.type = this.$getType$();
    this.$_subtype$ = $DvtSvgShadowUtils$$;
    this.$_newZoom$ = $DvtSvgPatternFillUtils$$;
    this.$_oldZoom$ = $DvtSvgImageFillUtils$$;
    this.$_animator$ = $DvtSvgGradientUtils$$;
    this.$_zoomToFitBounds$ = $DvtSvgFilterUtils$$;
    this.$_centerPoint$ = $DvtSvgFilterContext$$;
    this.$_tx$ = $DvtSvgImplFactory$$;
    this.$_ty$ = $DvtHtmlRichTooltipManager$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ZoomEvent$, $dvt$$17$$.$BaseComponentEvent$);
  $dvt$$17$$.$ZoomEvent$.$TYPE$ = "dvtZoom";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ZOOMED$ = "zoomed";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ZOOMING$ = "zooming";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ZOOM_END$ = "zoomEnd";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_DRAG_ZOOM_BEGIN$ = "dragZoomBegin";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_DRAG_ZOOM_END$ = "dragZoomEnd";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ZOOM_AND_CENTER$ = "zoomAndCenter";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ZOOM_TO_FIT_CALC_BOUNDS$ = "zoomToFitCalcBounds";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ZOOM_TO_FIT_BEGIN$ = "zoomToFitBegin";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ZOOM_TO_FIT_END$ = "zoomToFitEnd";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ELASTIC_ANIM_BEGIN$ = "elasticAnimBegin";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ELASTIC_ANIM_END$ = "elasticAnimEnd";
  $dvt$$17$$.$ZoomEvent$.$SUBTYPE_ADJUST_PAN_CONSTRAINTS$ = "adjustPanConstraints";
  $dvt$$17$$.$ZoomEvent$.prototype.$getSubType$ = function $$dvt$$17$$$$ZoomEvent$$$$getSubType$$() {
    return this.$_subtype$;
  };
  $dvt$$17$$.$ZoomEvent$.prototype.$setZoomToFitBounds$ = function $$dvt$$17$$$$ZoomEvent$$$$setZoomToFitBounds$$($DvtSvgShadowUtils$$) {
    this.$_zoomToFitBounds$ = $DvtSvgShadowUtils$$;
  };
  var $Dvt3rdPartyPathUtils$$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($Dvt3rdPartyPathUtils$$, $dvt$$17$$.$Obj$);
  $Dvt3rdPartyPathUtils$$.$lineLinear$ = function $$Dvt3rdPartyPathUtils$$$$lineLinear$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.join("L");
  };
  $Dvt3rdPartyPathUtils$$.$lineCardinalClosed$ = function $$Dvt3rdPartyPathUtils$$$$lineCardinalClosed$$($DvtSvgShadowUtils$$) {
    return 3 > $DvtSvgShadowUtils$$.length ? $Dvt3rdPartyPathUtils$$.$lineLinear$($DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$[0] + $Dvt3rdPartyPathUtils$$.$lineHermite$(($DvtSvgShadowUtils$$.push($DvtSvgShadowUtils$$[0]), $DvtSvgShadowUtils$$), $Dvt3rdPartyPathUtils$$.$lineCardinalTangents$([$DvtSvgShadowUtils$$[$DvtSvgShadowUtils$$.length - 2]].concat($DvtSvgShadowUtils$$, [$DvtSvgShadowUtils$$[1]])));
  };
  $Dvt3rdPartyPathUtils$$.$lineCardinal$ = function $$Dvt3rdPartyPathUtils$$$$lineCardinal$$($DvtSvgShadowUtils$$) {
    return 3 > $DvtSvgShadowUtils$$.length ? $Dvt3rdPartyPathUtils$$.$lineLinear$($DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$[0] + $Dvt3rdPartyPathUtils$$.$lineHermite$($DvtSvgShadowUtils$$, $Dvt3rdPartyPathUtils$$.$lineCardinalTangents$($DvtSvgShadowUtils$$));
  };
  $Dvt3rdPartyPathUtils$$.$lineHermite$ = function $$Dvt3rdPartyPathUtils$$$$lineHermite$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (1 > $DvtSvgPatternFillUtils$$.length || $DvtSvgShadowUtils$$.length != $DvtSvgPatternFillUtils$$.length && $DvtSvgShadowUtils$$.length != $DvtSvgPatternFillUtils$$.length + 2) {
      return $Dvt3rdPartyPathUtils$$.$lineLinear$($DvtSvgShadowUtils$$);
    }
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length != $DvtSvgPatternFillUtils$$.length, $DvtSvgGradientUtils$$ = "", $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[0], $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[1], $dvt$$17$$ = $DvtSvgPatternFillUtils$$[0], $DvtSvgImplFactory$$ = $dvt$$17$$, $DvtHtmlRichTooltipManager$$ = 1;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ += "Q" + Math.round($DvtSvgFilterContext$$[0] - 2 * $dvt$$17$$[0] / 3) + "," + Math.round($DvtSvgFilterContext$$[1] - 2 * $dvt$$17$$[1] / 3) + "," + Math.round($DvtSvgFilterContext$$[0]) + "," + Math.round($DvtSvgFilterContext$$[1]), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[1], $DvtHtmlRichTooltipManager$$ = 2);
    if (1 < $DvtSvgPatternFillUtils$$.length) {
      for ($DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$[1], $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$], $DvtHtmlRichTooltipManager$$++, $DvtSvgGradientUtils$$ += "C" + Math.round($DvtSvgFilterUtils$$[0] + $dvt$$17$$[0]) + "," + Math.round($DvtSvgFilterUtils$$[1] + $dvt$$17$$[1]) + "," + Math.round($DvtSvgFilterContext$$[0] - $DvtSvgImplFactory$$[0]) + "," + Math.round($DvtSvgFilterContext$$[1] - $DvtSvgImplFactory$$[1]) + "," + Math.round($DvtSvgFilterContext$$[0]) + 
      "," + Math.round($DvtSvgFilterContext$$[1]), $DvtSvgFilterUtils$$ = 2;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++, $DvtHtmlRichTooltipManager$$++) {
        $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$], $DvtSvgGradientUtils$$ += "S" + Math.round($DvtSvgFilterContext$$[0] - $DvtSvgImplFactory$$[0]) + "," + Math.round($DvtSvgFilterContext$$[1] - $DvtSvgImplFactory$$[1]) + "," + Math.round($DvtSvgFilterContext$$[0]) + "," + Math.round($DvtSvgFilterContext$$[1]);
      }
    }
    $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgGradientUtils$$ += "Q" + Math.round($DvtSvgFilterContext$$[0] + 2 * $DvtSvgImplFactory$$[0] / 3) + "," + Math.round($DvtSvgFilterContext$$[1] + 2 * $DvtSvgImplFactory$$[1] / 3) + "," + Math.round($DvtSvgImageFillUtils$$[0]) + "," + Math.round($DvtSvgImageFillUtils$$[1]));
    return $DvtSvgGradientUtils$$;
  };
  $Dvt3rdPartyPathUtils$$.$lineCardinalTangents$ = function $$Dvt3rdPartyPathUtils$$$$lineCardinalTangents$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = (1 - .7) / 2, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[0], $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[1], $dvt$$17$$ = 1, $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.length;++$dvt$$17$$ < $DvtSvgImplFactory$$;) {
      $DvtSvgGradientUtils$$ = $DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgFilterContext$$, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$dvt$$17$$], $DvtSvgPatternFillUtils$$.push([$DvtSvgImageFillUtils$$ * ($DvtSvgFilterContext$$[0] - $DvtSvgGradientUtils$$[0]), $DvtSvgImageFillUtils$$ * ($DvtSvgFilterContext$$[1] - $DvtSvgGradientUtils$$[1])]);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $Dvt3rdPartyPathUtils$$.$lineSlope$ = function $$Dvt3rdPartyPathUtils$$$$lineSlope$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return ($DvtSvgPatternFillUtils$$[1] - $DvtSvgShadowUtils$$[1]) / ($DvtSvgPatternFillUtils$$[0] - $DvtSvgShadowUtils$$[0]);
  };
  $Dvt3rdPartyPathUtils$$.$lineFiniteDifferences$ = function $$Dvt3rdPartyPathUtils$$$$lineFiniteDifferences$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length - 1, $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[1], $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$[0] = $Dvt3rdPartyPathUtils$$.$lineSlope$($DvtSvgShadowUtils$$[0], $DvtSvgFilterUtils$$);++$DvtSvgPatternFillUtils$$ < $DvtSvgImageFillUtils$$;) {
      $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$] = ($DvtSvgFilterContext$$ + ($DvtSvgFilterContext$$ = $Dvt3rdPartyPathUtils$$.$lineSlope$($DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$ + 1]))) / 2;
    }
    $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgFilterContext$$;
    return $DvtSvgGradientUtils$$;
  };
  $Dvt3rdPartyPathUtils$$.$lineMonotoneTangents$ = function $$Dvt3rdPartyPathUtils$$$$lineMonotoneTangents$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ && ($DvtSvgShadowUtils$$ = $Dvt3rdPartyPathUtils$$.$_rotatePoints$($DvtSvgShadowUtils$$));
    for (var $DvtSvgImageFillUtils$$ = [], $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$ = $Dvt3rdPartyPathUtils$$.$lineFiniteDifferences$($DvtSvgShadowUtils$$), $DvtHtmlRichTooltipManager$$ = -1, $DvtDomXmlParser$$ = $DvtSvgShadowUtils$$.length - 1;++$DvtHtmlRichTooltipManager$$ < $DvtDomXmlParser$$;) {
      $DvtSvgGradientUtils$$ = $Dvt3rdPartyPathUtils$$.$lineSlope$($DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgShadowUtils$$[$DvtHtmlRichTooltipManager$$ + 1]), 1E-6 > Math.abs($DvtSvgGradientUtils$$) ? $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] = $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$ + 1] = 0 : ($DvtSvgFilterUtils$$ = $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] / $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ = $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$ + 
      1] / $DvtSvgGradientUtils$$, $dvt$$17$$ = $DvtSvgFilterUtils$$ * $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$ * $DvtSvgFilterContext$$, 9 < $dvt$$17$$ && ($dvt$$17$$ = 3 * $DvtSvgGradientUtils$$ / Math.sqrt($dvt$$17$$), $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] = $dvt$$17$$ * $DvtSvgFilterUtils$$, $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$ + 1] = $dvt$$17$$ * $DvtSvgFilterContext$$));
    }
    for ($DvtHtmlRichTooltipManager$$ = -1;++$DvtHtmlRichTooltipManager$$ <= $DvtDomXmlParser$$;) {
      $dvt$$17$$ = ($DvtSvgShadowUtils$$[Math.min($DvtDomXmlParser$$, $DvtHtmlRichTooltipManager$$ + 1)][0] - $DvtSvgShadowUtils$$[Math.max(0, $DvtHtmlRichTooltipManager$$ - 1)][0]) / (6 * (1 + $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] * $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$])), $DvtSvgImageFillUtils$$.push([$dvt$$17$$ || 0, $DvtSvgImplFactory$$[$DvtHtmlRichTooltipManager$$] * $dvt$$17$$ || 0]);
    }
    $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ = $Dvt3rdPartyPathUtils$$.$_rotatePoints$($DvtSvgImageFillUtils$$));
    return $DvtSvgImageFillUtils$$;
  };
  $Dvt3rdPartyPathUtils$$.$lineMonotone$ = function $$Dvt3rdPartyPathUtils$$$$lineMonotone$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 3 > $DvtSvgShadowUtils$$.length ? $Dvt3rdPartyPathUtils$$.$lineLinear$($DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$[0] + $Dvt3rdPartyPathUtils$$.$lineHermite$($DvtSvgShadowUtils$$, $Dvt3rdPartyPathUtils$$.$lineMonotoneTangents$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$));
  };
  $Dvt3rdPartyPathUtils$$.$_rotatePoints$ = function $$Dvt3rdPartyPathUtils$$$$_rotatePoints$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push([$DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$][1], $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$][0]]);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$DisplayableUtils$ = function $$dvt$$17$$$$DisplayableUtils$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$DisplayableUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$DisplayableUtils$.$getDimensionsForced$ = function $$dvt$$17$$$$DisplayableUtils$$$getDimensionsForced$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.getParent(), $DvtSvgGradientUtils$$;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$getChildIndex$($DvtSvgPatternFillUtils$$));
    var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$_stage$;
    $DvtSvgFilterUtils$$.$addChild$($DvtSvgPatternFillUtils$$);
    var $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$getDimensions$();
    $DvtSvgFilterUtils$$.removeChild($DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.$addChildAt$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
    return $DvtSvgFilterContext$$;
  };
  $dvt$$17$$.$DisplayableUtils$.$getDimForced$ = function $$dvt$$17$$$$DisplayableUtils$$$getDimForced$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgPatternFillUtils$$.$_dim$ || !$DvtSvgShadowUtils$$) {
      return $DvtSvgPatternFillUtils$$.$_dim$;
    }
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$DisplayableUtils$.$getDimensionsForced$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    $dvt$$17$$.$DisplayableUtils$.$_setDimForced$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$DisplayableUtils$.$_setDimForced$ = function $$dvt$$17$$$$DisplayableUtils$$$_setDimForced$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$.$_dim$ = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$DisplayableUtils$.$isAncestor$ = function $$dvt$$17$$$$DisplayableUtils$$$isAncestor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$;) {
      if ($DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$) {
        return !0;
      }
      $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$Container$ && ($DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.getParent());
    }
    return !1;
  };
  $dvt$$17$$.$PathUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$PathUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$PathUtils$.$SPLINE_TYPE_MONOTONE_VERTICAL$ = "mv";
  $dvt$$17$$.$PathUtils$.$SPLINE_TYPE_MONOTONE_HORIZONTAL$ = "mh";
  $dvt$$17$$.$PathUtils$.$SPLINE_TYPE_CARDINAL_CLOSED$ = "cc";
  $dvt$$17$$.$PathUtils$.$SPLINE_TYPE_CARDINAL$ = "c";
  $dvt$$17$$.$PathUtils$.$_MIN_CORNER_RADIUS$ = 2.5;
  $dvt$$17$$.$PathUtils$.moveTo = function $$dvt$$17$$$$PathUtils$$moveTo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return "M" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$PathUtils$.lineTo = function $$dvt$$17$$$$PathUtils$$lineTo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return "L" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$PathUtils$.$quadTo$ = function $$dvt$$17$$$$PathUtils$$$quadTo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return "Q" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgImageFillUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$PathUtils$.$horizontalLineTo$ = function $$dvt$$17$$$$PathUtils$$$horizontalLineTo$$($DvtSvgShadowUtils$$) {
    return "H" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$PathUtils$.$verticalLineTo$ = function $$dvt$$17$$$$PathUtils$$$verticalLineTo$$($DvtSvgShadowUtils$$) {
    return "V" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$PathUtils$.$cubicTo$ = function $$dvt$$17$$$$PathUtils$$$cubicTo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    return "C" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgImageFillUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgGradientUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgFilterUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$PathUtils$.arcTo = function $$dvt$$17$$$$PathUtils$$arcTo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtSvgShadowUtils$$ = "A" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgPatternFillUtils$$) + ",0,";
    $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$ > Math.PI ? $DvtSvgShadowUtils$$ + "1," : $DvtSvgShadowUtils$$ + "0,";
    return $DvtSvgShadowUtils$$ += $DvtSvgGradientUtils$$ + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgFilterUtils$$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$PathUtils$.closePath = function $$dvt$$17$$$$PathUtils$$closePath$() {
    return "Z";
  };
  $dvt$$17$$.$PathUtils$.$roundedRectangle$ = function $$dvt$$17$$$$PathUtils$$$roundedRectangle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    return $dvt$$17$$.$PathUtils$.$_roundedRectangle$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtHtmlRichTooltipManager$$);
  };
  $dvt$$17$$.$PathUtils$.$rectangleWithBorderRadius$ = function $$dvt$$17$$$$PathUtils$$$rectangleWithBorderRadius$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    var $DvtHtmlRichTooltipManager$$ = $DvtSvgImplFactory$$, $DvtDomXmlParser$$ = $DvtSvgImplFactory$$, $DvtCustomTooltipItem$$ = $DvtSvgImplFactory$$, $DvtContextMenuTooltipItem$$ = $DvtSvgImplFactory$$, $DvtPolygonalShape$$ = $DvtSvgImplFactory$$, $DvtCustomTooltipEventHandler$$ = $DvtSvgImplFactory$$, $DvtCustomTooltip$$ = $DvtSvgImplFactory$$;
    if ($DvtSvgFilterUtils$$) {
      if (-1 != $DvtSvgFilterUtils$$.indexOf("/")) {
        var $DvtCircularShape$$ = $DvtSvgFilterUtils$$.split("/"), $DvtPopupSource$$ = $dvt$$17$$.$StringUtils$.trim($DvtCircularShape$$[0]).split(/\s+/), $DvtCircularShape$$ = $dvt$$17$$.$StringUtils$.trim($DvtCircularShape$$[1]).split(/\s+/);
        1 == $DvtPopupSource$$.length ? $DvtHtmlRichTooltipManager$$ = $DvtCustomTooltipItem$$ = $DvtPolygonalShape$$ = $DvtCustomTooltip$$ = $DvtPopupSource$$[0] : 2 == $DvtPopupSource$$.length ? ($DvtHtmlRichTooltipManager$$ = $DvtPolygonalShape$$ = $DvtPopupSource$$[0], $DvtCustomTooltipItem$$ = $DvtCustomTooltip$$ = $DvtPopupSource$$[1]) : 3 == $DvtPopupSource$$.length ? ($DvtHtmlRichTooltipManager$$ = $DvtPopupSource$$[0], $DvtCustomTooltipItem$$ = $DvtCustomTooltip$$ = $DvtPopupSource$$[1], 
        $DvtPolygonalShape$$ = $DvtPopupSource$$[2]) : 4 == $DvtPopupSource$$.length && ($DvtHtmlRichTooltipManager$$ = $DvtPopupSource$$[0], $DvtCustomTooltipItem$$ = $DvtPopupSource$$[1], $DvtPolygonalShape$$ = $DvtPopupSource$$[2], $DvtCustomTooltip$$ = $DvtPopupSource$$[3]);
        1 == $DvtCircularShape$$.length ? $DvtDomXmlParser$$ = $DvtContextMenuTooltipItem$$ = $DvtCustomTooltipEventHandler$$ = $DvtSvgImplFactory$$ = $DvtCircularShape$$[0] : 2 == $DvtCircularShape$$.length ? ($DvtDomXmlParser$$ = $DvtCustomTooltipEventHandler$$ = $DvtCircularShape$$[0], $DvtContextMenuTooltipItem$$ = $DvtSvgImplFactory$$ = $DvtCircularShape$$[1]) : 3 == $DvtCircularShape$$.length ? ($DvtDomXmlParser$$ = $DvtCircularShape$$[0], $DvtContextMenuTooltipItem$$ = $DvtSvgImplFactory$$ = 
        $DvtCircularShape$$[1], $DvtCustomTooltipEventHandler$$ = $DvtCircularShape$$[2]) : 4 == $DvtCircularShape$$.length && ($DvtDomXmlParser$$ = $DvtCircularShape$$[0], $DvtContextMenuTooltipItem$$ = $DvtCircularShape$$[1], $DvtCustomTooltipEventHandler$$ = $DvtCircularShape$$[2], $DvtSvgImplFactory$$ = $DvtCircularShape$$[3]);
      } else {
        "auto" != $DvtSvgFilterUtils$$ && ($DvtPopupSource$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgFilterUtils$$).split(/\s+/), 1 == $DvtPopupSource$$.length ? $DvtHtmlRichTooltipManager$$ = $DvtCustomTooltipItem$$ = $DvtPolygonalShape$$ = $DvtCustomTooltip$$ = $DvtDomXmlParser$$ = $DvtContextMenuTooltipItem$$ = $DvtCustomTooltipEventHandler$$ = $DvtSvgImplFactory$$ = $DvtPopupSource$$[0] : 2 == $DvtPopupSource$$.length ? ($DvtHtmlRichTooltipManager$$ = $DvtPolygonalShape$$ = $DvtDomXmlParser$$ = 
        $DvtCustomTooltipEventHandler$$ = $DvtPopupSource$$[0], $DvtCustomTooltipItem$$ = $DvtCustomTooltip$$ = $DvtContextMenuTooltipItem$$ = $DvtSvgImplFactory$$ = $DvtPopupSource$$[1]) : 3 == $DvtPopupSource$$.length ? ($DvtHtmlRichTooltipManager$$ = $DvtDomXmlParser$$ = $DvtPopupSource$$[0], $DvtCustomTooltipItem$$ = $DvtCustomTooltip$$ = $DvtContextMenuTooltipItem$$ = $DvtSvgImplFactory$$ = $DvtPopupSource$$[1], $DvtPolygonalShape$$ = $DvtCustomTooltipEventHandler$$ = $DvtPopupSource$$[2]) : 
        4 == $DvtPopupSource$$.length && ($DvtHtmlRichTooltipManager$$ = $DvtDomXmlParser$$ = $DvtPopupSource$$[0], $DvtCustomTooltipItem$$ = $DvtContextMenuTooltipItem$$ = $DvtPopupSource$$[1], $DvtPolygonalShape$$ = $DvtCustomTooltipEventHandler$$ = $DvtPopupSource$$[2], $DvtCustomTooltip$$ = $DvtSvgImplFactory$$ = $DvtPopupSource$$[3]));
      }
    }
    return $DvtSvgFilterUtils$$ && "0" != $DvtSvgFilterUtils$$ ? $dvt$$17$$.$PathUtils$.$_roundedRectangle$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $dvt$$17$$.$PathUtils$.$_parseBorderRadiusItem$($DvtHtmlRichTooltipManager$$, $DvtSvgFilterContext$$), $dvt$$17$$.$PathUtils$.$_parseBorderRadiusItem$($DvtDomXmlParser$$, $DvtSvgFilterContext$$), $dvt$$17$$.$PathUtils$.$_parseBorderRadiusItem$($DvtCustomTooltipItem$$, $DvtSvgFilterContext$$), $dvt$$17$$.$PathUtils$.$_parseBorderRadiusItem$($DvtContextMenuTooltipItem$$, 
    $DvtSvgFilterContext$$), $dvt$$17$$.$PathUtils$.$_parseBorderRadiusItem$($DvtPolygonalShape$$, $DvtSvgFilterContext$$), $dvt$$17$$.$PathUtils$.$_parseBorderRadiusItem$($DvtCustomTooltipEventHandler$$, $DvtSvgFilterContext$$), $dvt$$17$$.$PathUtils$.$_parseBorderRadiusItem$($DvtCustomTooltip$$, $DvtSvgFilterContext$$), $dvt$$17$$.$PathUtils$.$_parseBorderRadiusItem$($DvtSvgImplFactory$$, $DvtSvgFilterContext$$)) : $dvt$$17$$.$PathUtils$.$_rectangle$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, 
    $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$PathUtils$.$_parseBorderRadiusItem$ = function $$dvt$$17$$$$PathUtils$$$_parseBorderRadiusItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = Math.min(parseFloat($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ / 2);
    -1 != $DvtSvgShadowUtils$$.indexOf("%") && ($DvtSvgImageFillUtils$$ = .01 * Math.min(50, parseFloat($DvtSvgShadowUtils$$)) * $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$ < $dvt$$17$$.$PathUtils$.$_MIN_CORNER_RADIUS$ ? 0 : $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$PathUtils$.$_roundedRectangle$ = function $$dvt$$17$$$$PathUtils$$$_roundedRectangle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$, $DvtContextMenuTooltipItem$$, $DvtPolygonalShape$$) {
    $DvtSvgFilterContext$$ = Math.min($DvtSvgFilterContext$$, .5 * $DvtSvgGradientUtils$$);
    $DvtHtmlRichTooltipManager$$ = Math.min($DvtHtmlRichTooltipManager$$, .5 * $DvtSvgGradientUtils$$);
    $DvtCustomTooltipItem$$ = Math.min($DvtCustomTooltipItem$$, .5 * $DvtSvgGradientUtils$$);
    $DvtPolygonalShape$$ = Math.min($DvtPolygonalShape$$, .5 * $DvtSvgGradientUtils$$);
    $DvtSvgFilterUtils$$ = Math.min($DvtSvgFilterUtils$$, .5 * $DvtSvgImageFillUtils$$);
    $DvtSvgImplFactory$$ = Math.min($DvtSvgImplFactory$$, .5 * $DvtSvgImageFillUtils$$);
    $DvtDomXmlParser$$ = Math.min($DvtDomXmlParser$$, .5 * $DvtSvgImageFillUtils$$);
    $DvtContextMenuTooltipItem$$ = Math.min($DvtContextMenuTooltipItem$$, .5 * $DvtSvgImageFillUtils$$);
    return $dvt$$17$$.$PathUtils$.moveTo($DvtSvgShadowUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$) + $dvt$$17$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$) + $dvt$$17$$.$PathUtils$.arcTo($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, Math.PI / 2, 1, $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$ + $DvtHtmlRichTooltipManager$$) + $dvt$$17$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$ + 
    $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ - $DvtCustomTooltipItem$$) + $dvt$$17$$.$PathUtils$.arcTo($DvtDomXmlParser$$, $DvtCustomTooltipItem$$, Math.PI / 2, 1, $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ - $DvtDomXmlParser$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$) + $dvt$$17$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$ + $DvtContextMenuTooltipItem$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$) + $dvt$$17$$.$PathUtils$.arcTo($DvtContextMenuTooltipItem$$, 
    $DvtPolygonalShape$$, Math.PI / 2, 1, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ - $DvtPolygonalShape$$) + $dvt$$17$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$) + $dvt$$17$$.$PathUtils$.arcTo($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, Math.PI / 2, 1, $DvtSvgShadowUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$) + $dvt$$17$$.$PathUtils$.closePath();
  };
  $dvt$$17$$.$PathUtils$.$polyline$ = function $$dvt$$17$$$$PathUtils$$$polyline$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (2 > $DvtSvgShadowUtils$$.length) {
      return "";
    }
    for (var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $dvt$$17$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$[0], $DvtSvgShadowUtils$$[1]) : $dvt$$17$$.$PathUtils$.moveTo($DvtSvgShadowUtils$$[0], $DvtSvgShadowUtils$$[1]), $DvtSvgGradientUtils$$ = 2;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$ += 2) {
      $DvtSvgImageFillUtils$$ += $dvt$$17$$.$PathUtils$.lineTo($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$ + 1]);
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$PathUtils$.$curveThroughPoints$ = function $$dvt$$17$$$$PathUtils$$$curveThroughPoints$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if (0 == $DvtSvgShadowUtils$$.length) {
      return "";
    }
    for (var $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgFilterUtils$$ += 2) {
      $DvtSvgGradientUtils$$.push([$DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$], $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$ + 1]]);
    }
    $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$ ? "L" : "M";
    return $DvtSvgImageFillUtils$$ == $dvt$$17$$.$PathUtils$.$SPLINE_TYPE_MONOTONE_VERTICAL$ ? $DvtSvgShadowUtils$$ + $Dvt3rdPartyPathUtils$$.$lineMonotone$($DvtSvgGradientUtils$$, !1) : $DvtSvgImageFillUtils$$ == $dvt$$17$$.$PathUtils$.$SPLINE_TYPE_MONOTONE_HORIZONTAL$ ? $DvtSvgShadowUtils$$ + $Dvt3rdPartyPathUtils$$.$lineMonotone$($DvtSvgGradientUtils$$, !0) : $DvtSvgImageFillUtils$$ == $dvt$$17$$.$PathUtils$.$SPLINE_TYPE_CARDINAL_CLOSED$ ? $DvtSvgShadowUtils$$ + $Dvt3rdPartyPathUtils$$.$lineCardinalClosed$($DvtSvgGradientUtils$$) : 
    $DvtSvgShadowUtils$$ + $Dvt3rdPartyPathUtils$$.$lineCardinal$($DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$PathUtils$.$createPathArray$ = function $$dvt$$17$$$$PathUtils$$$createPathArray$$($DvtSvgShadowUtils$$) {
    if (!$DvtSvgShadowUtils$$) {
      return null;
    }
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/([mlqhvzca])/gi, ",$1,").split(/[ ,]/g);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImageFillUtils$$;
    for ($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
      $DvtSvgGradientUtils$$ ? isNaN($DvtSvgGradientUtils$$) || ($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] = parseFloat($DvtSvgGradientUtils$$)) : ($DvtSvgShadowUtils$$.splice($DvtSvgImageFillUtils$$, 1), $DvtSvgImageFillUtils$$--, $DvtSvgPatternFillUtils$$--);
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$PathUtils$.$getDimensions$ = function $$dvt$$17$$$$PathUtils$$$getDimensions$$($DvtSvgShadowUtils$$) {
    if (!$DvtSvgShadowUtils$$ || !$DvtSvgShadowUtils$$.length) {
      return new $dvt$$17$$.$Rectangle$;
    }
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = !0, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$ = Number.MAX_VALUE, $DvtCustomTooltipItem$$ = Number.MIN_VALUE, $DvtContextMenuTooltipItem$$ = Number.MAX_VALUE, $DvtPolygonalShape$$ = Number.MIN_VALUE, $DvtCustomTooltipEventHandler$$ = [], $DvtCustomTooltip$$, $DvtCircularShape$$;
    for ($DvtCustomTooltip$$ = 0;$DvtCustomTooltip$$ < $DvtSvgPatternFillUtils$$;$DvtCustomTooltip$$++) {
      $DvtSvgImplFactory$$ = !1;
      var $DvtPopupSource$$ = 0;
      $DvtCircularShape$$ = 0;
      $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$];
      switch($DvtSvgImageFillUtils$$) {
        case "m":
          $DvtSvgImplFactory$$ = !0;
        case "M":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 2], $DvtSvgFilterContext$$ ? $DvtSvgFilterContext$$ = !1 : $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = 
            $DvtSvgImageFillUtils$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = $DvtHtmlRichTooltipManager$$, $DvtPopupSource$$++, $DvtCustomTooltip$$ += 2;
          } while (!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1]));
          break;
        case "c":
          $DvtSvgImplFactory$$ = !0;
        case "C":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 5], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 6], $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = $DvtSvgImageFillUtils$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = 
            $DvtHtmlRichTooltipManager$$, $DvtPopupSource$$++, $DvtCustomTooltip$$ += 6;
          } while (!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1]));
          break;
        case "q":
          $DvtSvgImplFactory$$ = !0;
        case "Q":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 3], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 4], $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = $DvtSvgImageFillUtils$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = 
            $DvtHtmlRichTooltipManager$$, $DvtPopupSource$$++, $DvtCustomTooltip$$ += 4;
          } while (!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1]));
          break;
        case "l":
          $DvtSvgImplFactory$$ = !0;
        case "L":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 2], $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = $DvtSvgImageFillUtils$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = 
            $DvtHtmlRichTooltipManager$$, $DvtPopupSource$$++, $DvtCustomTooltip$$ += 2;
          } while (!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1]));
          break;
        case "h":
          $DvtSvgImplFactory$$ = !0;
        case "H":
          do {
            $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1], $DvtSvgImplFactory$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = $DvtSvgImageFillUtils$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = $DvtSvgFilterUtils$$, $DvtPopupSource$$++, $DvtCustomTooltip$$ += 1;
          } while (!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1]));
          break;
        case "v":
          $DvtSvgImplFactory$$ = !0;
        case "V":
          do {
            $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1], $DvtSvgImplFactory$$ && ($DvtHtmlRichTooltipManager$$ += $DvtSvgFilterUtils$$), $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = $DvtSvgGradientUtils$$, $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++] = $DvtHtmlRichTooltipManager$$, $DvtPopupSource$$++, $DvtCustomTooltip$$ += 1;
          } while (!isNaN($DvtSvgShadowUtils$$[$DvtCustomTooltip$$ + 1]));
      }
      for ($DvtSvgImplFactory$$ = $DvtCircularShape$$ = 0;$DvtSvgImplFactory$$ < $DvtPopupSource$$;$DvtSvgImplFactory$$++) {
        $DvtSvgImageFillUtils$$ = $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++], $DvtHtmlRichTooltipManager$$ = $DvtCustomTooltipEventHandler$$[$DvtCircularShape$$++], $DvtDomXmlParser$$ = Math.min($DvtDomXmlParser$$, $DvtSvgImageFillUtils$$), $DvtCustomTooltipItem$$ = Math.max($DvtCustomTooltipItem$$, $DvtSvgImageFillUtils$$), $DvtContextMenuTooltipItem$$ = Math.min($DvtContextMenuTooltipItem$$, $DvtHtmlRichTooltipManager$$), $DvtPolygonalShape$$ = Math.max($DvtPolygonalShape$$, $DvtHtmlRichTooltipManager$$)
        ;
      }
    }
    return new $dvt$$17$$.$Rectangle$($DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$, Math.abs($DvtCustomTooltipItem$$ - $DvtDomXmlParser$$), Math.abs($DvtPolygonalShape$$ - $DvtContextMenuTooltipItem$$));
  };
  $dvt$$17$$.$PathUtils$.$getPathString$ = function $$dvt$$17$$$$PathUtils$$$getPathString$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = "", $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgFilterUtils$$++) {
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$], void 0 !== $DvtSvgGradientUtils$$ && null !== $DvtSvgGradientUtils$$ && ($DvtSvgPatternFillUtils$$ += (0 < $DvtSvgFilterUtils$$ ? " " : "") + $DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$]);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$PathUtils$.$transformPath$ = function $$dvt$$17$$$$PathUtils$$$transformPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$ = "";
    if ($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.match(/[a-z][^a-z]*/ig);
      for (var $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImplFactory$$++) {
        var $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$], $DvtDomXmlParser$$ = $DvtHtmlRichTooltipManager$$.charAt(0), $DvtCustomTooltipItem$$ = $DvtDomXmlParser$$ === $DvtDomXmlParser$$.toUpperCase(), $DvtSvgFilterContext$$ = $DvtSvgFilterContext$$ + ($DvtDomXmlParser$$ + " "), $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.substring(1), $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.replace(/,/g, " "), $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.replace(/^\s+|\s+$/g, 
        "");
        if (0 < $DvtHtmlRichTooltipManager$$.length) {
          if ($DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$.split(/\s+/g), "A" === $DvtDomXmlParser$$.toUpperCase()) {
            for ($DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtHtmlRichTooltipManager$$.length;$DvtDomXmlParser$$ += 7) {
              $DvtSvgFilterContext$$ += $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$]) * $DvtSvgGradientUtils$$) + " ", $DvtSvgFilterContext$$ += $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 1]) * $DvtSvgFilterUtils$$) + " ", $DvtSvgFilterContext$$ += $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 2]) + " ", $DvtSvgFilterContext$$ += $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 
              3]) + " ", $DvtSvgFilterContext$$ += $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 4]) + " ", $DvtSvgFilterContext$$ += $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 5]) * $DvtSvgGradientUtils$$ + ($DvtCustomTooltipItem$$ ? $DvtSvgPatternFillUtils$$ : 0)) + " ", $DvtSvgFilterContext$$ += $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$ + 
              6]) * $DvtSvgFilterUtils$$ + ($DvtCustomTooltipItem$$ ? $DvtSvgImageFillUtils$$ : 0)) + " ";
            }
          } else {
            var $DvtContextMenuTooltipItem$$ = [], $DvtPolygonalShape$$ = [];
            "H" === $DvtDomXmlParser$$.toUpperCase() ? ($DvtContextMenuTooltipItem$$.push($DvtSvgGradientUtils$$), $DvtPolygonalShape$$.push($DvtCustomTooltipItem$$ ? $DvtSvgPatternFillUtils$$ : 0)) : ("V" === $DvtDomXmlParser$$.toUpperCase() ? $DvtContextMenuTooltipItem$$.push($DvtSvgFilterUtils$$) : ($DvtContextMenuTooltipItem$$.push($DvtSvgGradientUtils$$), $DvtContextMenuTooltipItem$$.push($DvtSvgFilterUtils$$), $DvtPolygonalShape$$.push($DvtCustomTooltipItem$$ ? $DvtSvgPatternFillUtils$$ : 0)), 
            $DvtPolygonalShape$$.push($DvtCustomTooltipItem$$ ? $DvtSvgImageFillUtils$$ : 0));
            for ($DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtHtmlRichTooltipManager$$.length;$DvtDomXmlParser$$++) {
              $DvtSvgFilterContext$$ += $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(parseFloat($DvtHtmlRichTooltipManager$$[$DvtDomXmlParser$$]) * $DvtContextMenuTooltipItem$$[$DvtDomXmlParser$$ % $DvtContextMenuTooltipItem$$.length] + $DvtPolygonalShape$$[$DvtDomXmlParser$$ % $DvtPolygonalShape$$.length]) + " ";
            }
          }
        }
      }
      return $DvtSvgFilterContext$$;
    }
  };
  $dvt$$17$$.$PathUtils$.$_fitsInScale$ = function $$dvt$$17$$$$PathUtils$$$_fitsInScale$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return Math.abs($DvtSvgShadowUtils$$) > $DvtSvgImageFillUtils$$ || Math.abs($DvtSvgPatternFillUtils$$) > $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$PathUtils$.$simplifyPath$ = function $$dvt$$17$$$$PathUtils$$$simplifyPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$ = "", $DvtSvgFilterUtils$$ = "", $DvtSvgFilterContext$$ = 0, $DvtSvgImplFactory$$ = 0, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$ = 0, $DvtCustomTooltipItem$$ = 0, $DvtContextMenuTooltipItem$$ = 0, $DvtPolygonalShape$$ = 0;$DvtPolygonalShape$$ < $DvtSvgShadowUtils$$.length;$DvtPolygonalShape$$++) {
      if (isNaN($DvtSvgShadowUtils$$[$DvtPolygonalShape$$])) {
        if ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtPolygonalShape$$], "Z" == $DvtSvgImageFillUtils$$ || "z" == $DvtSvgImageFillUtils$$) {
          $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ += $DvtSvgImageFillUtils$$, 0 < $DvtContextMenuTooltipItem$$ && ($DvtSvgGradientUtils$$ += $DvtSvgFilterUtils$$, $DvtCustomTooltipItem$$ = $DvtDomXmlParser$$ = 0), $DvtSvgFilterUtils$$ = "", $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$ = $DvtContextMenuTooltipItem$$ = 0;
        }
      } else {
        switch($DvtSvgImageFillUtils$$) {
          case "M":
            $DvtCustomTooltipItem$$ = $DvtDomXmlParser$$ = 0;
          case "m":
            $DvtDomXmlParser$$ += $DvtSvgShadowUtils$$[$DvtPolygonalShape$$];
            $DvtCustomTooltipItem$$ += $DvtSvgShadowUtils$$[$DvtPolygonalShape$$ + 1];
            $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$ + $DvtSvgImageFillUtils$$ + $DvtDomXmlParser$$ + " " + $DvtCustomTooltipItem$$;
            $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$;
            $DvtPolygonalShape$$++;
            break;
          case "l":
            $DvtSvgFilterContext$$ += $DvtSvgShadowUtils$$[$DvtPolygonalShape$$];
            $DvtSvgImplFactory$$ += $DvtSvgShadowUtils$$[$DvtPolygonalShape$$ + 1];
            $dvt$$17$$.$PathUtils$.$_fitsInScale$($DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$) && ($DvtHtmlRichTooltipManager$$ != $DvtSvgImageFillUtils$$ ? ($DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ += $DvtSvgImageFillUtils$$) : $DvtSvgFilterUtils$$ += " ", $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$ + " " + $DvtSvgImplFactory$$, $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$ = 0, $DvtContextMenuTooltipItem$$++);
            $DvtPolygonalShape$$++;
            break;
          case "h":
          ;
          case "v":
            "h" == $DvtSvgImageFillUtils$$ ? $DvtSvgFilterContext$$ += $DvtSvgShadowUtils$$[$DvtPolygonalShape$$] : $DvtSvgImplFactory$$ += $DvtSvgShadowUtils$$[$DvtPolygonalShape$$], $dvt$$17$$.$PathUtils$.$_fitsInScale$($DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$) && (0 != $DvtSvgFilterContext$$ && 0 != $DvtSvgImplFactory$$ ? ("l" != $DvtHtmlRichTooltipManager$$ ? ($DvtHtmlRichTooltipManager$$ = "l", $DvtSvgFilterUtils$$ += "l") : $DvtSvgFilterUtils$$ += " ", $DvtSvgFilterUtils$$ = 
            $DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$ + " " + $DvtSvgImplFactory$$) : ($DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$ + $DvtSvgImageFillUtils$$ + ("h" == $DvtSvgImageFillUtils$$ ? $DvtSvgFilterContext$$ : $DvtSvgImplFactory$$)), $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$ = 0, $DvtContextMenuTooltipItem$$++);
        }
      }
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$PathUtils$.$_rectangle$ = function $$dvt$$17$$$$PathUtils$$$_rectangle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $dvt$$17$$.$PathUtils$.moveTo($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) + $dvt$$17$$.$PathUtils$.$horizontalLineTo$($DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$) + $dvt$$17$$.$PathUtils$.$verticalLineTo$($DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$) + $dvt$$17$$.$PathUtils$.$horizontalLineTo$($DvtSvgShadowUtils$$) + $dvt$$17$$.$PathUtils$.closePath();
  };
  $dvt$$17$$.$MarkerGradient$ = function $$dvt$$17$$$$MarkerGradient$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$MarkerGradient$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$MarkerGradient$.$createMarkerGradient$ = function $$dvt$$17$$$$MarkerGradient$$$createMarkerGradient$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = [];
    $DvtSvgImageFillUtils$$ = [$DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$];
    $DvtSvgFilterUtils$$ = null;
    $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getType$();
    $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$DisplayableUtils$.$getDimForced$($DvtSvgPatternFillUtils$$.$getCtx$(), $DvtSvgPatternFillUtils$$);
    $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getCenter$();
    $DvtSvgPatternFillUtils$$ = Math.min($DvtSvgPatternFillUtils$$.$w$, $DvtSvgPatternFillUtils$$.$h$);
    if ($DvtSvgFilterUtils$$ != $dvt$$17$$.$SimpleMarker$.$HUMAN$) {
      var $DvtSvgFilterUtils$$ = [0, .5, .75, 1], $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$getBrighter$($DvtSvgShadowUtils$$, .2), $DvtSvgImplFactory$$ = $dvt$$17$$.$ColorUtils$.$getBrighter$($DvtSvgShadowUtils$$, .1), $DvtHtmlRichTooltipManager$$ = $dvt$$17$$.$ColorUtils$.$getDarker$($DvtSvgShadowUtils$$, .2);
      $DvtSvgPatternFillUtils$$ /= 2;
      var $DvtDomXmlParser$$ = $DvtSvgGradientUtils$$.x, $DvtCustomTooltipItem$$ = $DvtSvgGradientUtils$$.y, $DvtSvgGradientUtils$$ = [$dvt$$17$$.$ColorUtils$.$getPound$($DvtSvgFilterContext$$), $dvt$$17$$.$ColorUtils$.$getPound$($DvtSvgImplFactory$$), $DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$getPound$($DvtHtmlRichTooltipManager$$)];
      $DvtSvgShadowUtils$$ = new $dvt$$17$$.$Rectangle$(-$DvtSvgPatternFillUtils$$, -$DvtSvgPatternFillUtils$$, 2 * $DvtSvgPatternFillUtils$$, 2 * $DvtSvgPatternFillUtils$$);
      $DvtSvgShadowUtils$$ = [$DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$];
      $DvtSvgFilterUtils$$ = new $dvt$$17$$.$RadialGradientFill$($DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
    } else {
      $DvtSvgFilterUtils$$ = [0, .3, .7, 1], $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$getBrighter$($DvtSvgShadowUtils$$, .2), $DvtSvgImplFactory$$ = $dvt$$17$$.$ColorUtils$.$getDarker$($DvtSvgShadowUtils$$, .1), $DvtHtmlRichTooltipManager$$ = $dvt$$17$$.$ColorUtils$.$getDarker$($DvtSvgShadowUtils$$, .2), $DvtSvgGradientUtils$$ = [$dvt$$17$$.$ColorUtils$.$getPound$($DvtSvgFilterContext$$), $dvt$$17$$.$ColorUtils$.$getPound$($DvtSvgImplFactory$$), $DvtSvgShadowUtils$$, $dvt$$17$$.$ColorUtils$.$getPound$($DvtHtmlRichTooltipManager$$)], 
      $DvtSvgShadowUtils$$ = new $dvt$$17$$.$Rectangle$(-$DvtSvgPatternFillUtils$$ / 2, -$DvtSvgPatternFillUtils$$ / 2, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$ = [$DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$], $DvtSvgFilterUtils$$ = new $dvt$$17$$.$LinearGradientFill$(135, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$);
    }
    return $DvtSvgFilterUtils$$;
  };
  $dvt$$17$$.$PolygonUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$PolygonUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$PolygonUtils$.$getDimensions$ = function $$dvt$$17$$$$PolygonUtils$$$getDimensions$$($DvtSvgShadowUtils$$) {
    if (!$DvtSvgShadowUtils$$ || 0 === $DvtSvgShadowUtils$$.length) {
      return new $dvt$$17$$.$Rectangle$;
    }
    for (var $DvtSvgPatternFillUtils$$ = Number.MAX_VALUE, $DvtSvgImageFillUtils$$ = Number.MIN_VALUE, $DvtSvgGradientUtils$$ = Number.MAX_VALUE, $DvtSvgFilterUtils$$ = Number.MIN_VALUE, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtSvgFilterContext$$;$DvtDomXmlParser$$++) {
      $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$[$DvtDomXmlParser$$++], $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtDomXmlParser$$], $DvtSvgPatternFillUtils$$ = Math.min($DvtSvgPatternFillUtils$$, $DvtSvgImplFactory$$), $DvtSvgImageFillUtils$$ = Math.max($DvtSvgImageFillUtils$$, $DvtSvgImplFactory$$), $DvtSvgGradientUtils$$ = Math.min($DvtSvgGradientUtils$$, $DvtHtmlRichTooltipManager$$), $DvtSvgFilterUtils$$ = Math.max($DvtSvgFilterUtils$$, $DvtHtmlRichTooltipManager$$);
    }
    return new $dvt$$17$$.$Rectangle$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, Math.abs($DvtSvgImageFillUtils$$ - $DvtSvgPatternFillUtils$$), Math.abs($DvtSvgFilterUtils$$ - $DvtSvgGradientUtils$$));
  };
  $dvt$$17$$.$PolygonUtils$.$getRegularPolygonPoints$ = function $$dvt$$17$$$$PolygonUtils$$$getRegularPolygonPoints$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    for (var $DvtSvgFilterContext$$ = [], $dvt$$17$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgImageFillUtils$$;$DvtSvgImplFactory$$++) {
      $dvt$$17$$ = 0 + $DvtSvgImplFactory$$ / $DvtSvgImageFillUtils$$ * 2 * Math.PI * (0 == $DvtSvgFilterUtils$$ ? -1 : 1), $DvtSvgFilterContext$$.push($DvtSvgShadowUtils$$ + $DvtSvgGradientUtils$$ * Math.sin($dvt$$17$$), $DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$ * Math.cos($dvt$$17$$));
    }
    return $DvtSvgFilterContext$$;
  };
  $dvt$$17$$.$PolygonUtils$.scale = function $$dvt$$17$$$$PolygonUtils$$scale$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    for (var $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgShadowUtils$$.length - 1;$DvtSvgFilterUtils$$ += 2) {
      $DvtSvgGradientUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$] * $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$ + 1] * $DvtSvgImageFillUtils$$);
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$PolygonUtils$.translate = function $$dvt$$17$$$$PolygonUtils$$translate$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    for (var $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgShadowUtils$$.length - 1;$DvtSvgFilterUtils$$ += 2) {
      $DvtSvgGradientUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$] + $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$.push($DvtSvgShadowUtils$$[$DvtSvgFilterUtils$$ + 1] + $DvtSvgImageFillUtils$$);
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$TextUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$TextUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$TextUtils$.$_cachedTextDimensions$ = {};
  $dvt$$17$$.$TextUtils$.$EMPTY_TEXT_BUFFER$ = 2;
  $dvt$$17$$.$TextUtils$.$getMaxTextDimensions$ = function $$dvt$$17$$$$TextUtils$$$getMaxTextDimensions$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = 0, $DvtSvgImageFillUtils$$ = 0, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
      if (null != $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$]) {
        var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$].$getDimensions$(), $DvtSvgPatternFillUtils$$ = Math.max($DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$.$w$), $DvtSvgImageFillUtils$$ = Math.max($DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$.$h$)
      }
    }
    return new $dvt$$17$$.$Dimension$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$TextUtils$.$getTextStringDimensions$ = function $$dvt$$17$$$$TextUtils$$$getTextStringDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$17$$.$OutputText$.$getCachedDimensions$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    if (null != $DvtSvgGradientUtils$$) {
      return $DvtSvgGradientUtils$$;
    }
    $DvtSvgShadowUtils$$ = new $dvt$$17$$.$OutputText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$.$setCSSStyle$($DvtSvgImageFillUtils$$);
    return $DvtSvgShadowUtils$$.$getDimensions$();
  };
  $dvt$$17$$.$TextUtils$.$getTextWidth$ = function $$dvt$$17$$$$TextUtils$$$getTextWidth$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.$getDimensions$().$w$;
  };
  $dvt$$17$$.$TextUtils$.$getTextStringWidth$ = function $$dvt$$17$$$$TextUtils$$$getTextStringWidth$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $dvt$$17$$.$TextUtils$.$getTextStringDimensions$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$).$w$;
  };
  $dvt$$17$$.$TextUtils$.$getTextHeight$ = function $$dvt$$17$$$$TextUtils$$$getTextHeight$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$TextUtils$.$guessTextDimensions$($DvtSvgShadowUtils$$).$h$;
  };
  $dvt$$17$$.$TextUtils$.$getTextStringHeight$ = function $$dvt$$17$$$$TextUtils$$$getTextStringHeight$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$TextUtils$.$_getRepresentativeDimensions$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$).$h$;
  };
  $dvt$$17$$.$TextUtils$.$guessTextDimensions$ = function $$dvt$$17$$$$TextUtils$$$guessTextDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getTextString$(), $DvtSvgGradientUtils$$ = $dvt$$17$$.$TextUtils$.$_getRepresentativeDimensions$($DvtSvgShadowUtils$$.$getCtx$(), $DvtSvgShadowUtils$$.$getCSSStyle$()), $DvtSvgImageFillUtils$$ = $DvtSvgGradientUtils$$.$w$ * $dvt$$17$$.$TextUtils$.$_getTextLength$($DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$ = isNaN($DvtSvgPatternFillUtils$$) || null == $DvtSvgPatternFillUtils$$ ? 1 : $DvtSvgPatternFillUtils$$;
    var $DvtSvgFilterUtils$$ = Math.min(.3 * $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$.$w$ * (.3 * $DvtSvgPatternFillUtils$$ + 2));
    return $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$MultilineText$ || $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$BackgroundMultilineText$ ? {$w$:$DvtSvgImageFillUtils$$, $h$:$DvtSvgGradientUtils$$.$h$ * $DvtSvgShadowUtils$$.$getLineCount$(), $wMin$:$DvtSvgFilterUtils$$} : {$w$:$DvtSvgImageFillUtils$$, $h$:$DvtSvgGradientUtils$$.$h$, $wMin$:$DvtSvgFilterUtils$$};
  };
  $dvt$$17$$.$TextUtils$.$fitText$ = function $$dvt$$17$$$$TextUtils$$$fitText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgFilterUtils$$ = isNaN($DvtSvgFilterUtils$$) || null == $DvtSvgFilterUtils$$ ? 1 : $DvtSvgFilterUtils$$;
    var $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.$getTextString$(), $DvtSvgImplFactory$$ = $dvt$$17$$.$TextUtils$.$_guessFit$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
    if (1 == $DvtSvgImplFactory$$) {
      return $DvtSvgGradientUtils$$.$addChild$($DvtSvgShadowUtils$$), !0;
    }
    if (0 == $DvtSvgImplFactory$$) {
      return ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getParent()) && $DvtSvgPatternFillUtils$$.removeChild($DvtSvgShadowUtils$$), !1;
    }
    $DvtSvgGradientUtils$$.$addChild$($DvtSvgShadowUtils$$);
    if ($DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$MultilineText$ || $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$BackgroundMultilineText$) {
      return $DvtSvgShadowUtils$$.$__fitText$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
    }
    $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$OutputText$ || $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$BackgroundOutputText$ ? $dvt$$17$$.$TextUtils$.$_truncateOutputText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$) : $DvtSvgShadowUtils$$.$setMaxWidth$($DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$);
    if ("" == $DvtSvgShadowUtils$$.$getTextString$()) {
      return $DvtSvgGradientUtils$$.removeChild($DvtSvgShadowUtils$$), $DvtSvgShadowUtils$$.$setTextString$($DvtSvgFilterContext$$), !1;
    }
    $DvtSvgShadowUtils$$.$getTextString$() != $DvtSvgFilterContext$$ && $DvtSvgShadowUtils$$.$setUntruncatedTextString$($DvtSvgFilterContext$$);
    return !0;
  };
  $dvt$$17$$.$TextUtils$.$renderEmptyText$ = function $$dvt$$17$$$$TextUtils$$$renderEmptyText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$OutputText$($DvtSvgShadowUtils$$.$getCtx$(), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$.x + $DvtSvgImageFillUtils$$.$w$ / 2, $DvtSvgImageFillUtils$$.y + $DvtSvgImageFillUtils$$.$h$ / 2);
    $DvtSvgFilterUtils$$ && $DvtSvgPatternFillUtils$$.$setCSSStyle$($DvtSvgFilterUtils$$);
    $DvtSvgPatternFillUtils$$.$alignCenter$();
    $DvtSvgPatternFillUtils$$.$alignMiddle$();
    $dvt$$17$$.$TextUtils$.$fitText$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$.$w$ - 2 * $dvt$$17$$.$TextUtils$.$EMPTY_TEXT_BUFFER$, Infinity, $DvtSvgShadowUtils$$, 0) && ($DvtSvgPatternFillUtils$$.$isTruncated$() && $DvtSvgGradientUtils$$.$associate$($DvtSvgPatternFillUtils$$, new $dvt$$17$$.$SimpleObjPeer$($DvtSvgPatternFillUtils$$.$getUntruncatedTextString$())), $DvtSvgPatternFillUtils$$.$setAriaProperty$("hidden", null));
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$TextUtils$.$centerTextVertically$ = function $$dvt$$17$$$$TextUtils$$$centerTextVertically$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($dvt$$17$$.$Agent$.$isPlatformIE$()) {
      $DvtSvgShadowUtils$$.$setY$($DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$.$alignMiddle$();
    } else {
      var $DvtSvgImageFillUtils$$ = 0;
      $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$OutputText$ ? $DvtSvgImageFillUtils$$ = $dvt$$17$$.$TextUtils$.$getTextHeight$($DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$MultilineText$ && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$().$h$);
      $DvtSvgShadowUtils$$.$setY$($DvtSvgPatternFillUtils$$ - $DvtSvgImageFillUtils$$ / 2);
    }
  };
  $dvt$$17$$.$TextUtils$.$_guessFit$ = function $$dvt$$17$$$$TextUtils$$$_guessFit$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if ($DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$MultilineText$) {
      return null;
    }
    $DvtSvgGradientUtils$$ = $dvt$$17$$.$TextUtils$.$guessTextDimensions$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$);
    return $DvtSvgGradientUtils$$.$h$ > $DvtSvgImageFillUtils$$ || $DvtSvgGradientUtils$$.$wMin$ > $DvtSvgPatternFillUtils$$ && 3 < $dvt$$17$$.$TextUtils$.$_getTextLength$($DvtSvgShadowUtils$$.$getTextString$()) ? !1 : $DvtSvgGradientUtils$$.$w$ < $DvtSvgPatternFillUtils$$ ? !0 : null;
  };
  $dvt$$17$$.$TextUtils$.$_truncateOutputText$ = function $$dvt$$17$$$$TextUtils$$$_truncateOutputText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$measureDimensions$();
    if (!($DvtSvgGradientUtils$$.$w$ <= $DvtSvgPatternFillUtils$$)) {
      var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getTextString$(), $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.length, $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$.$w$ / $dvt$$17$$.$TextUtils$.$_getTextLength$($DvtSvgFilterUtils$$), $DvtHtmlRichTooltipManager$$ = Math.max(Math.floor($DvtSvgPatternFillUtils$$ / $DvtSvgImplFactory$$) - 2, $DvtSvgImageFillUtils$$), $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$.substring(0, $DvtHtmlRichTooltipManager$$) + $dvt$$17$$.$OutputText$.$ELLIPSIS$;
      $DvtSvgShadowUtils$$.$setTextString$($DvtDomXmlParser$$);
      for (var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$measureDimensions$(), $DvtCustomTooltipItem$$ = $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$ = $DvtSvgGradientUtils$$;$DvtSvgGradientUtils$$.$w$ < $DvtSvgPatternFillUtils$$ && !($DvtHtmlRichTooltipManager$$ >= $DvtSvgFilterUtils$$.length);) {
        var $DvtPolygonalShape$$ = Math.min($DvtSvgFilterContext$$ - $DvtHtmlRichTooltipManager$$, Math.max(Math.floor(($DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$.$w$) / $DvtSvgImplFactory$$), 1)), $DvtHtmlRichTooltipManager$$ = $DvtHtmlRichTooltipManager$$ + $DvtPolygonalShape$$, $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$.substring(0, $DvtHtmlRichTooltipManager$$) + $dvt$$17$$.$OutputText$.$ELLIPSIS$;
        $DvtSvgShadowUtils$$.$setTextString$($DvtDomXmlParser$$);
        $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$measureDimensions$();
        if (1 == $DvtPolygonalShape$$ && $DvtSvgGradientUtils$$.$w$ > $DvtSvgPatternFillUtils$$) {
          $DvtSvgShadowUtils$$.$setTextString$($DvtCustomTooltipItem$$);
          $DvtSvgGradientUtils$$ = $DvtContextMenuTooltipItem$$;
          break;
        }
        $DvtCustomTooltipItem$$ = $DvtDomXmlParser$$;
        $DvtContextMenuTooltipItem$$ = $DvtSvgGradientUtils$$;
      }
      for (;$DvtSvgGradientUtils$$.$w$ > $DvtSvgPatternFillUtils$$;) {
        if ($DvtHtmlRichTooltipManager$$ <= $DvtSvgImageFillUtils$$) {
          $DvtSvgShadowUtils$$.$setTextString$("");
          break;
        }
        --$DvtHtmlRichTooltipManager$$;
        $DvtDomXmlParser$$ = $DvtSvgFilterUtils$$.substring(0, $DvtHtmlRichTooltipManager$$) + $dvt$$17$$.$OutputText$.$ELLIPSIS$;
        $DvtSvgShadowUtils$$.$setTextString$($DvtDomXmlParser$$);
        $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$measureDimensions$();
      }
    }
  };
  $dvt$$17$$.$TextUtils$.$_getTextLength$ = function $$dvt$$17$$$$TextUtils$$$_getTextLength$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/[\u200A\u200B\u200C\u200D\u200E\u200F\uFEFF]/g, "");
    return $DvtSvgShadowUtils$$.length;
  };
  $dvt$$17$$.$TextUtils$.$_getRepresentativeDimensions$ = function $$dvt$$17$$$$TextUtils$$$_getRepresentativeDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = null != $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$.$hashCodeForTextMeasurement$() : "", $DvtSvgGradientUtils$$ = $dvt$$17$$.$TextUtils$.$_cachedTextDimensions$[$DvtSvgImageFillUtils$$];
    null == $DvtSvgGradientUtils$$ && ($DvtSvgGradientUtils$$ = new $dvt$$17$$.$OutputText$($DvtSvgShadowUtils$$, $dvt$$17$$.$OutputText$.$REPRESENTATIVE_TEXT$), $DvtSvgGradientUtils$$.$alignAuto$(), $DvtSvgGradientUtils$$.$setCSSStyle$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.$measureDimensions$(), $DvtSvgGradientUtils$$ = {x:$DvtSvgGradientUtils$$.x, y:$DvtSvgGradientUtils$$.y, $w$:.5 * $DvtSvgGradientUtils$$.$w$, $h$:$DvtSvgGradientUtils$$.$h$}, $dvt$$17$$.$TextUtils$.$_cachedTextDimensions$[$DvtSvgImageFillUtils$$] = 
    $DvtSvgGradientUtils$$);
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$TextUtils$.$getBaselineTranslation$ = function $$dvt$$17$$$$TextUtils$$$getBaselineTranslation$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getVertAlignment$();
    if ($DvtSvgPatternFillUtils$$ != $dvt$$17$$.$OutputText$.$V_ALIGN_AUTO$) {
      $DvtSvgShadowUtils$$ = $dvt$$17$$.$TextUtils$.$_getRepresentativeDimensions$($DvtSvgShadowUtils$$.$getCtx$(), $DvtSvgShadowUtils$$.$getCSSStyle$());
      if ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_TOP$) {
        return -$DvtSvgShadowUtils$$.y;
      }
      if ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_MIDDLE$) {
        return -$DvtSvgShadowUtils$$.y - $DvtSvgShadowUtils$$.$h$ / 2;
      }
      if ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$) {
        return -$DvtSvgShadowUtils$$.y - $DvtSvgShadowUtils$$.$h$;
      }
    }
    return 0;
  };
  $dvt$$17$$.$SvgShapeUtils$ = function $$dvt$$17$$$$SvgShapeUtils$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SvgShapeUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$SvgShapeUtils$.$_uniqueSeed$ = 0;
  $dvt$$17$$.$SvgShapeUtils$.$addClipPath$ = function $$dvt$$17$$$$SvgShapeUtils$$$addClipPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId();
    if (!$DvtSvgImageFillUtils$$) {
      return !1;
    }
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getDefs$();
    if (!$DvtSvgGradientUtils$$) {
      return !1;
    }
    for (var $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.childNodes, $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgFilterContext$$;$DvtSvgGradientUtils$$++) {
      if ($DvtSvgFilterUtils$$[$DvtSvgGradientUtils$$].id === $DvtSvgImageFillUtils$$) {
        return !0;
      }
    }
    $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("clipPath", $DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$.$appendDefs$($DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$_regions$;
    for ($DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgFilterUtils$$.length;$DvtSvgGradientUtils$$++) {
      if ($DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$[$DvtSvgGradientUtils$$]) {
        var $DvtSvgImplFactory$$ = null;
        $DvtSvgFilterContext$$.type === $dvt$$17$$.$ClipPath$.$RECT$ ? ($DvtSvgImplFactory$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("rect"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "x", $DvtSvgFilterContext$$.x), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "y", $DvtSvgFilterContext$$.y), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "width", $DvtSvgFilterContext$$.$w$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, 
        "height", $DvtSvgFilterContext$$.$h$), $DvtSvgFilterContext$$.$rx$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "rx", $DvtSvgFilterContext$$.$rx$), $DvtSvgFilterContext$$.$ry$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "ry", $DvtSvgFilterContext$$.$ry$)) : $DvtSvgFilterContext$$.type === $dvt$$17$$.$ClipPath$.$PATH$ ? ($DvtSvgImplFactory$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("path"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, 
        "d", $DvtSvgFilterContext$$.d)) : $DvtSvgFilterContext$$.type === $dvt$$17$$.$ClipPath$.$POLYGON$ ? ($DvtSvgImplFactory$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("polygon"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "points", $DvtSvgFilterContext$$.$points$)) : $DvtSvgFilterContext$$.type === $dvt$$17$$.$ClipPath$.$ELLIPSE$ ? ($DvtSvgImplFactory$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("ellipse"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, 
        "cx", $DvtSvgFilterContext$$.$cx$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "cy", $DvtSvgFilterContext$$.$cy$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "rx", $DvtSvgFilterContext$$.$rx$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "ry", $DvtSvgFilterContext$$.$ry$)) : $DvtSvgFilterContext$$.type === $dvt$$17$$.$ClipPath$.$CIRCLE$ && ($DvtSvgImplFactory$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("circle"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, 
        "cx", $DvtSvgFilterContext$$.$cx$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "cy", $DvtSvgFilterContext$$.$cy$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "r", $DvtSvgFilterContext$$.r));
        $DvtSvgImplFactory$$ && $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtSvgImplFactory$$);
      }
    }
    return !0;
  };
  $dvt$$17$$.$SvgShapeUtils$.$addMask$ = function $$dvt$$17$$$$SvgShapeUtils$$$addMask$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId();
    if (!$DvtSvgImageFillUtils$$) {
      return !1;
    }
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getDefs$();
    if (!$DvtSvgGradientUtils$$) {
      return !1;
    }
    for (var $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.childNodes, $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.length, $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgFilterUtils$$;$DvtSvgFilterContext$$++) {
      if ($DvtSvgGradientUtils$$[$DvtSvgFilterContext$$].id === $DvtSvgImageFillUtils$$) {
        return !0;
      }
    }
    $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("mask", $DvtSvgImageFillUtils$$);
    $DvtSvgPatternFillUtils$$.$appendDefs$($DvtSvgImageFillUtils$$);
    $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$_gradient$;
    $dvt$$17$$.$SvgShapeUtils$.$addSpecialFill$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getBounds$();
    $DvtSvgFilterContext$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("rect");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "x", $DvtSvgFilterUtils$$.x);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "y", $DvtSvgFilterUtils$$.y);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "width", $DvtSvgFilterUtils$$.$w$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "height", $DvtSvgFilterUtils$$.$h$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "fill", $dvt$$17$$.$ToolkitUtils$.$getUrlById$($DvtSvgGradientUtils$$.getId()));
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtSvgFilterContext$$);
    return !0;
  };
  $dvt$$17$$.$SvgShapeUtils$.$addSpecialFill$ = function $$dvt$$17$$$$SvgShapeUtils$$$addSpecialFill$$($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$;
    $DvtSvgShadowUtils$$.$_bLocked$ ? $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.getId() : ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.getId(), $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$PatternFill$ ? $dvt$$17$$.$SvgShapeUtils$.$getUniqueId$("pat") : $dvt$$17$$.$SvgShapeUtils$.$getUniqueId$("Gr"), $DvtSvgShadowUtils$$.setId($DvtSvgFilterContext$$)));
    if (!$DvtSvgShadowUtils$$.$_defPresent$) {
      var $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$_defElem$;
      $DvtSvgImplFactory$$ || ($DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$GradientFill$ ? $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$.$createElem$($DvtSvgShadowUtils$$, $DvtSvgFilterContext$$) : $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ImageFill$ ? $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$.$createElem$($DvtSvgShadowUtils$$, $DvtSvgFilterContext$$) : $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$PatternFill$ && ($DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$.$createElem$($DvtSvgShadowUtils$$, 
      $DvtSvgFilterContext$$)));
      $DvtSvgShadowUtils$$.$_defElem$ = $DvtSvgImplFactory$$;
      $DvtSvgFilterUtils$$.$appendDefs$($DvtSvgImplFactory$$);
      $DvtSvgShadowUtils$$.$_defPresent$ = !0;
    }
  };
  $dvt$$17$$.$SvgShapeUtils$.$addSpecialStroke$ = function $$dvt$$17$$$$SvgShapeUtils$$$addSpecialStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$;
    $DvtSvgShadowUtils$$.$_bLocked$ ? $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId() : ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.getId(), $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$SvgShapeUtils$.$getUniqueId$("Gr"), $DvtSvgShadowUtils$$.setId($DvtSvgImageFillUtils$$)));
    if (!$DvtSvgShadowUtils$$.$_defPresent$) {
      var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$_defElem$;
      $DvtSvgFilterUtils$$ || ($DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$createElem$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$));
      $DvtSvgShadowUtils$$.$_defElem$ = $DvtSvgFilterUtils$$;
      $DvtSvgPatternFillUtils$$.$appendDefs$($DvtSvgFilterUtils$$);
      $DvtSvgShadowUtils$$.$_defPresent$ = !0;
    }
  };
  $dvt$$17$$.$SvgShapeUtils$.createElement = function $$dvt$$17$$$$SvgShapeUtils$$createElement$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = document.createElementNS($dvt$$17$$.$ToolkitUtils$.$SVG_NS$, $DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "id", $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$SvgShapeUtils$.$getUniqueId$ = function $$dvt$$17$$$$SvgShapeUtils$$$getUniqueId$$($DvtSvgShadowUtils$$) {
    return ($DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : "$") + $dvt$$17$$.$SvgShapeUtils$.$_uniqueSeed$++;
  };
  $dvt$$17$$.$SvgShapeUtils$.$convertPointsArray$ = function $$dvt$$17$$$$SvgShapeUtils$$$convertPointsArray$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImageFillUtils$$ = "", $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgGradientUtils$$++) {
      0 < $DvtSvgGradientUtils$$ && ($DvtSvgImageFillUtils$$ += " "), $DvtSvgImageFillUtils$$ += $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$]);
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$Displayable$ = function $$dvt$$17$$$$Displayable$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Displayable$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Displayable$.$_ATTRS_TRANSFERABLE_TO_OUTER$ = ["clip-path"];
  $dvt$$17$$.$Displayable$.$_CREATE_EVENT_TYPE_MAP$ = {click:$dvt$$17$$.MouseEvent.$CLICK$, mouseover:$dvt$$17$$.MouseEvent.$MOUSEOVER$, mouseout:$dvt$$17$$.MouseEvent.$MOUSEOUT$, mousemove:$dvt$$17$$.MouseEvent.$MOUSEMOVE$, keydown:$dvt$$17$$.KeyboardEvent.$KEYDOWN$, keyup:$dvt$$17$$.KeyboardEvent.$KEYUP$, keypress:$dvt$$17$$.KeyboardEvent.$KEYPRESS$};
  $dvt$$17$$.$Displayable$.$SET_ID_ON_DOM$ = !1;
  $dvt$$17$$.$Displayable$.prototype.Init = function $$dvt$$17$$$$Displayable$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_elem$ = $dvt$$17$$.$SvgShapeUtils$.createElement($DvtSvgPatternFillUtils$$);
    this.$_elem$.$_obj$ = this;
    this.setId($DvtSvgImageFillUtils$$);
    this.$_bVisible$ = !0;
    this.$_cursor$ = null;
    this.$_bMouseEnabled$ = !0;
    this.$_alpha$ = 1;
    this.$_matrix$ = null;
    this.$_ariaProperties$ = {};
    this.$_properties$ = {};
  };
  $dvt$$17$$.$Displayable$.prototype.$getCtx$ = function $$dvt$$17$$$$Displayable$$$$getCtx$$() {
    return this.$_context$;
  };
  $dvt$$17$$.$Displayable$.prototype.$getImpl$ = function $$dvt$$17$$$$Displayable$$$$getImpl$$() {
    return this;
  };
  $dvt$$17$$.$Displayable$.prototype.$getObj$ = function $$dvt$$17$$$$Displayable$$$$getObj$$() {
    return this;
  };
  $dvt$$17$$.$Displayable$.prototype.$getElem$ = function $$dvt$$17$$$$Displayable$$$$getElem$$() {
    return this.$_elem$;
  };
  $dvt$$17$$.$Displayable$.prototype.$getOuterElem$ = function $$dvt$$17$$$$Displayable$$$$getOuterElem$$() {
    return this.$_outerElem$ ? this.$_outerElem$ : this.$getElem$();
  };
  $dvt$$17$$.$Displayable$.prototype.getId = function $$dvt$$17$$$$Displayable$$$getId$() {
    return this.$_id$;
  };
  $dvt$$17$$.$Displayable$.prototype.setId = function $$dvt$$17$$$$Displayable$$$setId$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_id$ !== $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ && 0 === $DvtSvgShadowUtils$$.length && ($DvtSvgShadowUtils$$ = null), this.$_id$ = $DvtSvgShadowUtils$$, $dvt$$17$$.$Displayable$.$SET_ID_ON_DOM$ || $DvtSvgPatternFillUtils$$) && ($DvtSvgShadowUtils$$ ? $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getOuterElem$(), "id", $DvtSvgShadowUtils$$) : $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getOuterElem$(), "id"));
  };
  $dvt$$17$$.$Displayable$.prototype.getParent = function $$dvt$$17$$$$Displayable$$$getParent$() {
    return this.$_parent$;
  };
  $dvt$$17$$.$Displayable$.prototype.$setParent$ = function $$dvt$$17$$$$Displayable$$$$setParent$$($DvtSvgShadowUtils$$) {
    this.$_parent$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.$isDescendantOf$ = function $$dvt$$17$$$$Displayable$$$$isDescendantOf$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ && this.getParent() ? this.getParent() == $DvtSvgShadowUtils$$ ? !0 : this.getParent().$isDescendantOf$($DvtSvgShadowUtils$$) : !1;
  };
  $dvt$$17$$.$Displayable$.prototype.$setPixelHinting$ = function $$dvt$$17$$$$Displayable$$$$setPixelHinting$$() {
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "shape-rendering", "crispEdges");
  };
  $dvt$$17$$.$Displayable$.prototype.$setVisible$ = function $$dvt$$17$$$$Displayable$$$$setVisible$$($DvtSvgShadowUtils$$) {
    if (this.$_bVisible$ !== $DvtSvgShadowUtils$$) {
      this.$_bVisible$ = $DvtSvgShadowUtils$$;
      var $DvtSvgPatternFillUtils$$ = this.$getElem$();
      $DvtSvgShadowUtils$$ ? $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgPatternFillUtils$$, "visibility") : $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "visibility", "hidden");
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$setClipPath$ = function $$dvt$$17$$$$Displayable$$$$setClipPath$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      if (this.$ClipPathId$ != $DvtSvgShadowUtils$$.getId()) {
        this.$ClipPathId$ && this.$_context$.$decreaseGlobalDefReference$(this.$ClipPathId$);
        this.$ClipPathId$ = $DvtSvgShadowUtils$$.getId();
        this.$_context$.$increaseGlobalDefReference$(this.$ClipPathId$);
        !this.$_outerElem$ && this.$_matrix$ && this.$_createOuterGroupElem$();
        var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getId();
        $DvtSvgPatternFillUtils$$ && $dvt$$17$$.$SvgShapeUtils$.$addClipPath$($DvtSvgShadowUtils$$, this.$getCtx$()) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getOuterElem$(), "clip-path", $dvt$$17$$.$ToolkitUtils$.$getUrlById$($DvtSvgPatternFillUtils$$));
      }
    } else {
      !$DvtSvgShadowUtils$$ && this.$ClipPathId$ && (this.$_context$.$decreaseGlobalDefReference$(this.$ClipPathId$), this.$ClipPathId$ = null, $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getOuterElem$(), "clip-path"));
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$setMask$ = function $$dvt$$17$$$$Displayable$$$$setMask$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      if (this.$MaskId$ != $DvtSvgShadowUtils$$.getId()) {
        this.$MaskId$ && this.$_context$.$decreaseGlobalDefReference$(this.$MaskId$);
        this.$MaskId$ = $DvtSvgShadowUtils$$.getId();
        this.$_context$.$increaseGlobalDefReference$(this.$MaskId$);
        !this.$_outerElem$ && this.$_matrix$ && this.$_createOuterGroupElem$();
        var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getId();
        $DvtSvgPatternFillUtils$$ && $dvt$$17$$.$SvgShapeUtils$.$addMask$($DvtSvgShadowUtils$$, this.$getCtx$()) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getOuterElem$(), "mask", $dvt$$17$$.$ToolkitUtils$.$getUrlById$($DvtSvgPatternFillUtils$$));
      }
    } else {
      !$DvtSvgShadowUtils$$ && this.$MaskId$ && (this.$_context$.$decreaseGlobalDefReference$(this.$MaskId$), this.$MaskId$ = null, $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getOuterElem$(), "mask"));
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$ConvertCoordSpaceRect$ = function $$dvt$$17$$$$Displayable$$$$ConvertCoordSpaceRect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!$DvtSvgPatternFillUtils$$ || $DvtSvgPatternFillUtils$$ === this) {
      return $DvtSvgShadowUtils$$;
    }
    var $DvtSvgImageFillUtils$$ = this.$localToStage$(new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y)), $DvtSvgGradientUtils$$ = this.$localToStage$(new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$)), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$stageToLocal$($DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$stageToLocal$($DvtSvgGradientUtils$$);
    return new $dvt$$17$$.$Rectangle$(Math.min($DvtSvgImageFillUtils$$.x, $DvtSvgGradientUtils$$.x), Math.min($DvtSvgImageFillUtils$$.y, $DvtSvgGradientUtils$$.y), Math.abs($DvtSvgGradientUtils$$.x - $DvtSvgImageFillUtils$$.x), Math.abs($DvtSvgGradientUtils$$.y - $DvtSvgImageFillUtils$$.y));
  };
  $dvt$$17$$.$Displayable$.prototype.$GetSvgDimensions$ = function $$dvt$$17$$$$Displayable$$$$GetSvgDimensions$$() {
    try {
      var $DvtSvgShadowUtils$$ = this.$getElem$().getBBox();
    } catch ($DvtSvgPatternFillUtils$$) {
      return $dvt$$17$$.$Agent$.$isEnvironmentTest$() && print("Error in dvt.Displayable.prototype.GetSvgDimensions: " + $DvtSvgPatternFillUtils$$), null;
    }
    return new $dvt$$17$$.$Rectangle$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$.width, $DvtSvgShadowUtils$$.height);
  };
  $dvt$$17$$.$Displayable$.prototype.$getDimensions$ = function $$dvt$$17$$$$Displayable$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetSvgDimensions$();
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$getDimensionsWithStroke$ = function $$dvt$$17$$$$Displayable$$$$getDimensionsWithStroke$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetDimensionsWithStroke$();
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$GetDimensionsWithStroke$ = function $$dvt$$17$$$$Displayable$$$$GetDimensionsWithStroke$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetElemDimensionsWithStroke$();
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ !== this ? this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$) : $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.$GetElemDimensionsWithStroke$ = function $$dvt$$17$$$$Displayable$$$$GetElemDimensionsWithStroke$$() {
    return this.$GetSvgDimensions$();
  };
  $dvt$$17$$.$Displayable$.$HasAttributes$ = function $$dvt$$17$$$$Displayable$$$HasAttributes$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgPatternFillUtils$$) {
      for (var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
        if ($dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$])) {
          return !0;
        }
      }
    }
    return !1;
  };
  $dvt$$17$$.$Displayable$.$TransferAttributes$ = function $$dvt$$17$$$$Displayable$$$TransferAttributes$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgImageFillUtils$$) {
      for (var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.length, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgFilterContext$$;$DvtSvgImplFactory$$++) {
        if ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgImplFactory$$], $DvtSvgFilterUtils$$ = $dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$)) {
          $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $dvt$$17$$.$Agent$.$isPlatformIE$() && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, null);
        }
      }
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$_createOuterGroupElem$ = function $$dvt$$17$$$$Displayable$$$$_createOuterGroupElem$$() {
    if (!this.$_outerElem$) {
      this.$_outerElem$ = $dvt$$17$$.$SvgShapeUtils$.createElement("g", this.$_id$ ? this.$_id$ + "_outer" : null);
      var $DvtSvgShadowUtils$$ = this.getParent();
      $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getElem$().replaceChild(this.$_outerElem$, this.$getElem$());
      $dvt$$17$$.$ToolkitUtils$.$appendChildElem$(this.$_outerElem$, this.$getElem$());
      $dvt$$17$$.$Displayable$.$TransferAttributes$(this.$getElem$(), this.$_outerElem$, $dvt$$17$$.$Displayable$.$_ATTRS_TRANSFERABLE_TO_OUTER$);
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$getCSSStyle$ = function $$dvt$$17$$$$Displayable$$$$getCSSStyle$$() {
    return this.$_cssStyle$;
  };
  $dvt$$17$$.$Displayable$.prototype.$setCSSStyle$ = function $$dvt$$17$$$$Displayable$$$$setCSSStyle$$($DvtSvgShadowUtils$$) {
    this.$_cssStyle$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.setCursor = function $$dvt$$17$$$$Displayable$$$setCursor$($DvtSvgShadowUtils$$) {
    this.$_cursor$ = $DvtSvgShadowUtils$$;
    $dvt$$17$$.$Agent$.$isEnvironmentBatik$() || ($DvtSvgShadowUtils$$ ? $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "cursor", $DvtSvgShadowUtils$$) : $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getElem$(), "cursor"));
  };
  $dvt$$17$$.$Displayable$.prototype.getCursor = function $$dvt$$17$$$$Displayable$$$getCursor$() {
    return this.$_cursor$;
  };
  $dvt$$17$$.$Displayable$.prototype.$setMouseEnabled$ = function $$dvt$$17$$$$Displayable$$$$setMouseEnabled$$($DvtSvgShadowUtils$$) {
    this.$_bMouseEnabled$ = $DvtSvgShadowUtils$$;
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "pointer-events", $DvtSvgShadowUtils$$ ? "visiblePainted" : "none");
  };
  $dvt$$17$$.$Displayable$.prototype.$getAlpha$ = function $$dvt$$17$$$$Displayable$$$$getAlpha$$() {
    return this.$_alpha$;
  };
  $dvt$$17$$.$Displayable$.prototype.$setAlpha$ = function $$dvt$$17$$$$Displayable$$$$setAlpha$$($DvtSvgShadowUtils$$) {
    1E-5 > $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = 0);
    $DvtSvgShadowUtils$$ !== this.$_alpha$ && (this.$_alpha$ = $DvtSvgShadowUtils$$, $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "opacity", this.$_alpha$, 1));
  };
  $dvt$$17$$.$Displayable$.prototype.$applyAriaProperties$ = function $$dvt$$17$$$$Displayable$$$$applyAriaProperties$$() {
    if ($dvt$$17$$.$Agent$.$deferAriaCreation$()) {
      this.$_ariaRole$ && this.$_setAriaRole$(this.$_ariaRole$);
      for (var $DvtSvgShadowUtils$$ in this.$_ariaProperties$) {
        this.$_setAriaProperty$($DvtSvgShadowUtils$$, this.$_ariaProperties$[$DvtSvgShadowUtils$$]);
      }
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$setAriaRole$ = function $$dvt$$17$$$$Displayable$$$$setAriaRole$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$Agent$.$deferAriaCreation$() || this.$_setAriaRole$($DvtSvgShadowUtils$$);
    this.$_ariaRole$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.$_setAriaRole$ = function $$dvt$$17$$$$Displayable$$$$_setAriaRole$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetAriaElem$();
    $DvtSvgShadowUtils$$ ? $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "role", $DvtSvgShadowUtils$$) : $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgPatternFillUtils$$, "role");
  };
  $dvt$$17$$.$Displayable$.prototype.$getAriaRole$ = function $$dvt$$17$$$$Displayable$$$$getAriaRole$$() {
    return this.$_ariaRole$;
  };
  $dvt$$17$$.$Displayable$.prototype.$GetAriaElem$ = function $$dvt$$17$$$$Displayable$$$$GetAriaElem$$() {
    return this.$getElem$();
  };
  $dvt$$17$$.$Displayable$.prototype.$setAriaProperty$ = function $$dvt$$17$$$$Displayable$$$$setAriaProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ && ($dvt$$17$$.$Agent$.$deferAriaCreation$() || this.$_setAriaProperty$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), this.$_ariaProperties$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$_setAriaProperty$ = function $$dvt$$17$$$$Displayable$$$$_setAriaProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$GetAriaElem$();
    null != $DvtSvgPatternFillUtils$$ && "" !== $DvtSvgPatternFillUtils$$ ? ("label" == $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$StringUtils$.$processAriaLabel$($DvtSvgPatternFillUtils$$)), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "aria-" + $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)) : $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgImageFillUtils$$, "aria-" + $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$getAriaProperty$ = function $$dvt$$17$$$$Displayable$$$$getAriaProperty$$() {
    return this.$_ariaProperties$.label;
  };
  $dvt$$17$$.$Displayable$.prototype.$stageToLocal$ = function $$dvt$$17$$$$Displayable$$$$stageToLocal$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = this.$getPathToStage$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.length - 1;0 <= $DvtSvgGradientUtils$$;$DvtSvgGradientUtils$$--) {
      $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$].$getMatrix$().clone(), $DvtSvgShadowUtils$$.$invert$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$transformPoint$($DvtSvgImageFillUtils$$);
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.$localToStage$ = function $$dvt$$17$$$$Displayable$$$$localToStage$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = this.$getPathToStage$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgGradientUtils$$++) {
      $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$].$getMatrix$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$transformPoint$($DvtSvgImageFillUtils$$);
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.$getPathToStage$ = function $$dvt$$17$$$$Displayable$$$$getPathToStage$$() {
    for (var $DvtSvgShadowUtils$$ = this, $DvtSvgPatternFillUtils$$ = [];$DvtSvgShadowUtils$$;) {
      $DvtSvgPatternFillUtils$$.push($DvtSvgShadowUtils$$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getParent();
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.$destroy$ = function $$dvt$$17$$$$Displayable$$$$destroy$$() {
    this.$removeAllDrawEffects$();
    this.$ClipPathId$ && this.$setClipPath$(null);
  };
  $dvt$$17$$.$Displayable$.prototype.$createCopy$ = function $$dvt$$17$$$$Displayable$$$$createCopy$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$Container$(this.$getCtx$(), "clonedContainer"), $DvtSvgPatternFillUtils$$ = this.$getElem$().cloneNode(!0);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgShadowUtils$$.$getElem$(), $DvtSvgPatternFillUtils$$);
    this.$_disableEvents$($DvtSvgPatternFillUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.$_disableEvents$ = function $$dvt$$17$$$$Displayable$$$$_disableEvents$$($DvtSvgShadowUtils$$) {
    for ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.firstChild;null != $DvtSvgShadowUtils$$;) {
      $DvtSvgShadowUtils$$.setAttributeNS && ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "pointer-events", "none"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "id", null)), this.$_disableEvents$($DvtSvgShadowUtils$$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.nextSibling;
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$dispatchNativeEvent$ = function $$dvt$$17$$$$Displayable$$$$dispatchNativeEvent$$() {
  };
  $dvt$$17$$.$Displayable$.prototype.$GetProperty$ = function $$dvt$$17$$$$Displayable$$$$GetProperty$$($DvtSvgShadowUtils$$) {
    return this.$_properties$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$Displayable$.prototype.$SetProperty$ = function $$dvt$$17$$$$Displayable$$$$SetProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ !== this.$_properties$[$DvtSvgShadowUtils$$] && (this.$_properties$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$SetSvgProperty$ = function $$dvt$$17$$$$Displayable$$$$SetSvgProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ !== this.$_properties$[$DvtSvgShadowUtils$$] && (this.$_properties$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$, $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), this.$SvgPropertyChanged$($DvtSvgShadowUtils$$));
    return this;
  };
  $dvt$$17$$.$Displayable$.prototype.$SvgPropertyChanged$ = function $$dvt$$17$$$$Displayable$$$$SvgPropertyChanged$$() {
  };
  $dvt$$17$$.$Displayable$.$generateAriaLabel$ = function $$dvt$$17$$$$Displayable$$$generateAriaLabel$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = "", $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ && 0 < $DvtSvgPatternFillUtils$$.length;
    if ($DvtSvgShadowUtils$$) {
      var $DvtSvgFilterUtils$$ = $dvt$$17$$.$Bundle$.$getTranslatedString$($dvt$$17$$.$Bundle$.$UTIL_PREFIX$, "ARIA_LABEL_DESC_DELIMITER"), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$;
      $DvtSvgGradientUtils$$ && ($DvtSvgImageFillUtils$$ += $DvtSvgFilterUtils$$);
    }
    if ($DvtSvgGradientUtils$$) {
      for ($DvtSvgGradientUtils$$ = $dvt$$17$$.$Bundle$.$getTranslatedString$($dvt$$17$$.$Bundle$.$UTIL_PREFIX$, "ARIA_LABEL_STATE_DELIMITER"), $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++) {
        $DvtSvgImageFillUtils$$ += $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$], $DvtSvgFilterUtils$$ != $DvtSvgPatternFillUtils$$.length - 1 && ($DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$);
      }
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.$getNumDrawEffects$ = function $$dvt$$17$$$$Displayable$$$$getNumDrawEffects$$() {
    return this.$_drawEffects$ ? this.$_drawEffects$.length : 0;
  };
  $dvt$$17$$.$Displayable$.prototype.$addDrawEffect$ = function $$dvt$$17$$$$Displayable$$$$addDrawEffect$$($DvtSvgShadowUtils$$) {
    this.$_drawEffects$ || (this.$_drawEffects$ = []);
    $DvtSvgShadowUtils$$.$__lock$();
    this.$_drawEffects$.push($DvtSvgShadowUtils$$);
    this.$_applyDrawEffects$();
  };
  $dvt$$17$$.$Displayable$.prototype.$addDrawEffectAt$ = function $$dvt$$17$$$$Displayable$$$$addDrawEffectAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_drawEffects$ || (this.$_drawEffects$ = []);
    $DvtSvgShadowUtils$$.$__lock$();
    $DvtSvgPatternFillUtils$$ >= this.$_drawEffects$.length ? this.$_drawEffects$.push($DvtSvgShadowUtils$$) : this.$_drawEffects$.splice($DvtSvgPatternFillUtils$$, 0, $DvtSvgShadowUtils$$);
    this.$_applyDrawEffects$();
  };
  $dvt$$17$$.$Displayable$.prototype.$removeDrawEffectAt$ = function $$dvt$$17$$$$Displayable$$$$removeDrawEffectAt$$($DvtSvgShadowUtils$$) {
    if (this.$_drawEffects$) {
      var $DvtSvgPatternFillUtils$$ = this.$_drawEffects$.length;
      0 <= $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ < $DvtSvgPatternFillUtils$$ && (this.$_drawEffects$.splice($DvtSvgShadowUtils$$, 1), this.$_applyDrawEffects$());
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$removeAllDrawEffects$ = function $$dvt$$17$$$$Displayable$$$$removeAllDrawEffects$$() {
    this.$_drawEffects$ && (this.$_drawEffects$ = null, this.$_applyDrawEffects$());
  };
  $dvt$$17$$.$Displayable$.prototype.$getDrawEffectIndex$ = function $$dvt$$17$$$$Displayable$$$$getDrawEffectIndex$$($DvtSvgShadowUtils$$) {
    if (this.$_drawEffects$) {
      for (var $DvtSvgPatternFillUtils$$ = this.$_drawEffects$.length, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
        if ($DvtSvgShadowUtils$$ === this.$_drawEffects$[$DvtSvgImageFillUtils$$]) {
          return $DvtSvgImageFillUtils$$;
        }
      }
    }
    return -1;
  };
  $dvt$$17$$.$Displayable$.prototype.$_applyDrawEffects$ = function $$dvt$$17$$$$Displayable$$$$_applyDrawEffects$$() {
    var $DvtSvgShadowUtils$$ = this.$_drawEffects$;
    this.$_filter$ && ($dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getOuterElem$(), "filter"), this.$getCtx$().$removeDefs$(this.$_filter$), this.$_filter$ = null);
    !this.$_outerElem$ && this.$_matrix$ && this.$_createOuterGroupElem$();
    $DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length && (this.$_filter$ = $DvtSvgFilterUtils$$.$createFilter$($DvtSvgShadowUtils$$, this)) && (this.$getCtx$().$appendDefs$(this.$_filter$), $DvtSvgShadowUtils$$ = $dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$(this.$_filter$, "id"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getOuterElem$(), "filter", $dvt$$17$$.$ToolkitUtils$.$getUrlById$($DvtSvgShadowUtils$$)));
  };
  $dvt$$17$$.$Displayable$.prototype.$addEvtListener$ = function $$dvt$$17$$$$Displayable$$$$addEvtListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, !0);
    $DvtSvgFilterUtils$$.push($DvtSvgPatternFillUtils$$);
    $DvtSvgFilterUtils$$.push($DvtSvgGradientUtils$$);
    this.$_addListener$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$removeEvtListener$ = function $$dvt$$17$$$$Displayable$$$$removeEvtListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, !1);
    if ($DvtSvgFilterUtils$$) {
      for (var $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgFilterUtils$$.length;$DvtSvgFilterContext$$ += 2) {
        if ($DvtSvgFilterUtils$$[$DvtSvgFilterContext$$] === $DvtSvgPatternFillUtils$$ && $DvtSvgFilterUtils$$[$DvtSvgFilterContext$$ + 1] === $DvtSvgGradientUtils$$) {
          $DvtSvgFilterUtils$$.splice($DvtSvgFilterContext$$, 2);
          break;
        }
      }
    }
    $DvtSvgFilterUtils$$ && 0 >= $DvtSvgFilterUtils$$.length && this.$_removeListener$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$dispatchDisplayableEvent$ = function $$dvt$$17$$$$Displayable$$$$dispatchDisplayableEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$Displayable$.$_CREATE_EVENT_TYPE_MAP$[$DvtSvgShadowUtils$$], $DvtSvgGradientUtils$$;
    if ($dvt$$17$$.MouseEvent.$CLICK$ == $DvtSvgImageFillUtils$$ || $dvt$$17$$.MouseEvent.$MOUSEOVER$ == $DvtSvgImageFillUtils$$ || $dvt$$17$$.MouseEvent.$MOUSEOUT$ == $DvtSvgImageFillUtils$$ || $dvt$$17$$.MouseEvent.$MOUSEMOVE$ == $DvtSvgImageFillUtils$$) {
      if (document.createEvent) {
        $DvtSvgGradientUtils$$ = this.$getCtx$();
        var $DvtSvgFilterUtils$$ = this.$getDimensions$(), $DvtSvgFilterUtils$$ = this.$localToStage$(new $dvt$$17$$.$Point$($DvtSvgFilterUtils$$.x, $DvtSvgFilterUtils$$.y));
        $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.$getStageAbsolutePosition$();
        $DvtSvgGradientUtils$$ = new $dvt$$17$$.$Point$($DvtSvgGradientUtils$$.x + $DvtSvgFilterUtils$$.x, $DvtSvgGradientUtils$$.y + $DvtSvgFilterUtils$$.y);
        $DvtSvgFilterUtils$$ = document.createEvent("MouseEvents");
        $DvtSvgFilterUtils$$.initMouseEvent($DvtSvgImageFillUtils$$, !0, !0, window, 1, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y, !1, !1, !1, !1, 0, null);
        this.$getElem$().dispatchEvent($DvtSvgFilterUtils$$);
      }
    } else {
      $dvt$$17$$.KeyboardEvent.$KEYDOWN$ != $DvtSvgImageFillUtils$$ && $dvt$$17$$.KeyboardEvent.$KEYUP$ != $DvtSvgImageFillUtils$$ && $dvt$$17$$.KeyboardEvent.$KEYPRESS$ != $DvtSvgImageFillUtils$$ || !document.createEvent || ($DvtSvgFilterUtils$$ = document.createEvent("KeyboardEvent"), $DvtSvgPatternFillUtils$$ instanceof $dvt$$17$$.KeyboardEvent ? ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.keyCode, this.$_ctrlKeyPressed$ = $DvtSvgPatternFillUtils$$.ctrlKey, this.$_shiftKeyPressed$ = $DvtSvgPatternFillUtils$$.shiftKey) : 
      ($DvtSvgGradientUtils$$ = parseInt($DvtSvgPatternFillUtils$$), void 0 === this.$_ctrlKeyPressed$ && (this.$_ctrlKeyPressed$ = !1), void 0 === this.$_shiftKeyPressed$ && (this.$_shiftKeyPressed$ = !1), $DvtSvgGradientUtils$$ == $dvt$$17$$.KeyboardEvent.$CONTROL$ ? this.$_ctrlKeyPressed$ && $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYUP$ ? this.$_ctrlKeyPressed$ = !1 : this.$_ctrlKeyPressed$ || $DvtSvgImageFillUtils$$ != $dvt$$17$$.KeyboardEvent.$KEYDOWN$ || (this.$_ctrlKeyPressed$ = 
      !0) : $DvtSvgGradientUtils$$ == $dvt$$17$$.KeyboardEvent.$SHIFT$ && (this.$_shiftKeyPressed$ && $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYUP$ ? this.$_shiftKeyPressed$ = !1 : this.$_shiftKeyPressed$ || $DvtSvgImageFillUtils$$ != $dvt$$17$$.KeyboardEvent.$KEYDOWN$ || (this.$_shiftKeyPressed$ = !0))), "undefined" != typeof $DvtSvgFilterUtils$$.initKeyboardEvent ? $DvtSvgFilterUtils$$.initKeyboardEvent($DvtSvgImageFillUtils$$, !0, !0, window, this.$_ctrlKeyPressed$, !1, this.$_shiftKeyPressed$, 
      !1, $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$) : $DvtSvgFilterUtils$$.initKeyEvent($DvtSvgImageFillUtils$$, !0, !0, window, this.$_ctrlKeyPressed$, !1, !1, this.$_shiftKeyPressed$, $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$), $DvtSvgImageFillUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgFilterUtils$$), $DvtSvgImageFillUtils$$.keyCode = $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.ctrlKey = this.$_ctrlKeyPressed$, $DvtSvgImageFillUtils$$.shiftKey = this.$_shiftKeyPressed$, 
      $DvtSvgGradientUtils$$ = this.$getCtx$(), $dvt$$17$$.$HtmlKeyboardListenerUtils$.$_bubbleListener$.call($DvtSvgGradientUtils$$.$_stage$.$_SVGRoot$.parentNode, $DvtSvgImageFillUtils$$));
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$AddElemListener$ = function $$dvt$$17$$$$Displayable$$$$AddElemListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$ToolkitUtils$.$addDomEventListener$(this.$getElem$(), $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$ == $dvt$$17$$.TouchEvent.$TOUCHEND$ && $dvt$$17$$.$ToolkitUtils$.$addDomEventListener$(this.$getElem$(), $dvt$$17$$.TouchEvent.$TOUCHCANCEL$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$FireListener$ = function $$dvt$$17$$$$Displayable$$$$FireListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getType$ ? $DvtSvgShadowUtils$$.$getType$() : $DvtSvgShadowUtils$$.type;
    if ($DvtSvgImageFillUtils$$ = this.$_getListeners$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$, !1)) {
      for (var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$ += 2) {
        var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$ + 1];
        $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$] && $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$].call($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$);
      }
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$fireKeyboardListener$ = function $$dvt$$17$$$$Displayable$$$$fireKeyboardListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$FireListener$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$_getListeners$ = function $$dvt$$17$$$$Displayable$$$$_getListeners$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if (!this.$_listenerObj$) {
      if ($DvtSvgImageFillUtils$$) {
        this.$_listenerObj$ = {};
      } else {
        return null;
      }
    }
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ + "_" + ($DvtSvgPatternFillUtils$$ ? !0 : !1);
    $DvtSvgPatternFillUtils$$ = this.$_listenerObj$[$DvtSvgShadowUtils$$];
    !$DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ = [], this.$_listenerObj$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Displayable$.prototype.$_addListener$ = function $$dvt$$17$$$$Displayable$$$$_addListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_getListener$($DvtSvgPatternFillUtils$$);
    if ($DvtSvgShadowUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYUP$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYDOWN$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYPRESS$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUS$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUSIN$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUSOUT$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$BLUR$) {
      var $DvtSvgGradientUtils$$ = this.$getCtx$().$_stage$.$_SVGRoot$.parentNode;
      $DvtSvgGradientUtils$$ && ($DvtSvgGradientUtils$$.$_obj$ || ($DvtSvgGradientUtils$$.$_obj$ = []), -1 == $dvt$$17$$.$ArrayUtils$.$getIndex$($DvtSvgGradientUtils$$.$_obj$, this) && $DvtSvgGradientUtils$$.$_obj$.push(this), $DvtSvgImageFillUtils$$ = $dvt$$17$$.$HtmlKeyboardListenerUtils$.$getListener$($DvtSvgPatternFillUtils$$), $dvt$$17$$.$ToolkitUtils$.$addDomEventListener$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$));
    } else {
      this.$AddElemListener$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$_removeListener$ = function $$dvt$$17$$$$Displayable$$$$_removeListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_getListener$($DvtSvgPatternFillUtils$$);
    if ($DvtSvgShadowUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYUP$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYDOWN$ || $DvtSvgShadowUtils$$ == $dvt$$17$$.KeyboardEvent.$KEYPRESS$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUS$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUSIN$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$FOCUSOUT$ || $DvtSvgShadowUtils$$ == $DvtFocusEvent$$.$BLUR$) {
      var $DvtSvgGradientUtils$$ = this.$getCtx$().$_stage$.$_SVGRoot$.parentNode;
      $dvt$$17$$.$ToolkitUtils$.$removeDomEventListener$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ArrayUtils$.$getIndex$($DvtSvgGradientUtils$$.$_obj$, this);
      -1 !== $DvtSvgImageFillUtils$$ && $DvtSvgGradientUtils$$.$_obj$.splice($DvtSvgImageFillUtils$$, 1);
    } else {
      $dvt$$17$$.$ToolkitUtils$.$removeDomEventListener$(this.$getElem$(), $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$_getListener$ = function $$dvt$$17$$$$Displayable$$$$_getListener$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this;
    if ($DvtSvgShadowUtils$$) {
      return this.$_captureClosure$ || (this.$_captureClosure$ = function $this$$_captureClosure$$($DvtSvgShadowUtils$$) {
        $DvtSvgPatternFillUtils$$.$_captureListener$($DvtSvgShadowUtils$$);
      }), this.$_captureClosure$;
    }
    this.$_bubbleClosure$ || (this.$_bubbleClosure$ = function $this$$_bubbleClosure$$($DvtSvgShadowUtils$$) {
      $DvtSvgPatternFillUtils$$.$_bubbleListener$($DvtSvgShadowUtils$$);
    });
    return this.$_bubbleClosure$;
  };
  $dvt$$17$$.$Displayable$.prototype.$_bubbleListener$ = function $$dvt$$17$$$$Displayable$$$$_bubbleListener$$($DvtSvgShadowUtils$$) {
    if ($dvt$$17$$.$Agent$.$isPlatformIE$()) {
      if ($DvtSvgShadowUtils$$.type == $dvt$$17$$.MouseEvent.$MOUSEOVER$) {
        if (this.$_bubbleHoverItem$) {
          if (this.$_bubbleHoverItem$ == $DvtSvgShadowUtils$$.target) {
            return;
          }
          var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$getCtx$());
          $DvtSvgPatternFillUtils$$.$modifyEventForIE$($dvt$$17$$.MouseEvent.$MOUSEOUT$, this.$_bubbleHoverItem$);
          this.$FireListener$($DvtSvgPatternFillUtils$$, !1);
        }
        this.$_bubbleHoverItem$ = $DvtSvgShadowUtils$$.target;
      } else {
        $DvtSvgShadowUtils$$.type == $dvt$$17$$.MouseEvent.$MOUSEOUT$ && (this.$_bubbleHoverItem$ = null);
      }
    }
    $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$getCtx$());
    this.$FireListener$($DvtSvgPatternFillUtils$$, !1);
  };
  $dvt$$17$$.$Displayable$.prototype.$_captureListener$ = function $$dvt$$17$$$$Displayable$$$$_captureListener$$($DvtSvgShadowUtils$$) {
    if ($dvt$$17$$.$Agent$.$isPlatformIE$()) {
      if ($DvtSvgShadowUtils$$.type == $dvt$$17$$.MouseEvent.$MOUSEOVER$) {
        if (this.$_captureHoverItem$) {
          if (this.$_captureHoverItem$ == $DvtSvgShadowUtils$$.target) {
            return;
          }
          var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$getCtx$());
          $DvtSvgPatternFillUtils$$.$modifyEventForIE$($dvt$$17$$.MouseEvent.$MOUSEOUT$, this.$_captureHoverItem$);
          this.$FireListener$($DvtSvgPatternFillUtils$$, !0);
        }
        this.$_captureHoverItem$ = $DvtSvgShadowUtils$$.target;
      } else {
        $DvtSvgShadowUtils$$.type == $dvt$$17$$.MouseEvent.$MOUSEOUT$ && (this.$_captureHoverItem$ = null);
      }
    }
    $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, this.$getCtx$());
    this.$FireListener$($DvtSvgPatternFillUtils$$, !0);
  };
  $dvt$$17$$.$Displayable$.prototype.$getFill$ = function $$dvt$$17$$$$Displayable$$$$getFill$$() {
    return this.$GetProperty$("fill");
  };
  $dvt$$17$$.$Displayable$.prototype.$setFill$ = function $$dvt$$17$$$$Displayable$$$$setFill$$($DvtSvgShadowUtils$$) {
    this.$_manageDefinitions$(this.$GetProperty$("fill"), $DvtSvgShadowUtils$$);
    if (!$DvtSvgShadowUtils$$) {
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", "none"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "fill-opacity"), this.$SetProperty$("fill", null);
    } else {
      if (this.$GetProperty$("fill") !== $DvtSvgShadowUtils$$) {
        this.$SetProperty$("fill", $DvtSvgShadowUtils$$);
        if ($DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$GradientFill$ || $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ImageFill$ || $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$PatternFill$) {
          $dvt$$17$$.$SvgShapeUtils$.$addSpecialFill$($DvtSvgShadowUtils$$, this.$getCtx$()), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", $dvt$$17$$.$ToolkitUtils$.$getUrlById$($DvtSvgShadowUtils$$.getId()));
        } else {
          var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$fixColorForPlatform$($DvtSvgShadowUtils$$.$getColor$(), $DvtSvgShadowUtils$$.$getAlpha$());
          $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.color && ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", $DvtSvgPatternFillUtils$$.color), null != $DvtSvgPatternFillUtils$$.alpha && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill-opacity", $DvtSvgPatternFillUtils$$.alpha, 1));
        }
        $DvtSvgShadowUtils$$.$__lock$();
        this.$UpdateSelectionEffect$();
      }
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$getClassName$ = function $$dvt$$17$$$$Displayable$$$$getClassName$$() {
    return this.$_className$;
  };
  $dvt$$17$$.$Displayable$.prototype.$setClassName$ = function $$dvt$$17$$$$Displayable$$$$setClassName$$($DvtSvgShadowUtils$$) {
    this.$_className$ && !$DvtSvgShadowUtils$$ ? $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "class") : $DvtSvgShadowUtils$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "class", $DvtSvgShadowUtils$$);
    this.$_className$ = $DvtSvgShadowUtils$$;
    return this;
  };
  $dvt$$17$$.$Displayable$.prototype.$getStyle$ = function $$dvt$$17$$$$Displayable$$$$getStyle$$() {
    return this.$_style$;
  };
  $dvt$$17$$.$Displayable$.prototype.$setStyle$ = function $$dvt$$17$$$$Displayable$$$$setStyle$$($DvtSvgShadowUtils$$) {
    this.$_style$ && !$DvtSvgShadowUtils$$ ? $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "style") : $DvtSvgShadowUtils$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "style", $dvt$$17$$.$CSSStyle$.$cssObjectToString$($DvtSvgShadowUtils$$), "");
    this.$_style$ = $DvtSvgShadowUtils$$;
    return this;
  };
  $dvt$$17$$.$Displayable$.prototype.$setSolidFill$ = function $$dvt$$17$$$$Displayable$$$$setSolidFill$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$setFill$(new $dvt$$17$$.$SolidFill$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$));
  };
  $dvt$$17$$.$Displayable$.prototype.$setInvisibleFill$ = function $$dvt$$17$$$$Displayable$$$$setInvisibleFill$$() {
    this.$setFill$($dvt$$17$$.$SolidFill$.$invisibleFill$());
  };
  $dvt$$17$$.$Displayable$.prototype.$getStroke$ = function $$dvt$$17$$$$Displayable$$$$getStroke$$() {
    return this.$_stroke$;
  };
  $dvt$$17$$.$Displayable$.prototype.$setStroke$ = function $$dvt$$17$$$$Displayable$$$$setStroke$$($DvtSvgShadowUtils$$) {
    this.$_manageDefinitions$(this.$_stroke$, $DvtSvgShadowUtils$$);
    if (this.$_stroke$ = $DvtSvgShadowUtils$$) {
      if ($DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$GradientStroke$) {
        $dvt$$17$$.$SvgShapeUtils$.$addSpecialStroke$($DvtSvgShadowUtils$$, this.$getCtx$());
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke", $dvt$$17$$.$ToolkitUtils$.$getUrlById$($DvtSvgShadowUtils$$.getId()));
        var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getAlpha$();
        null != $DvtSvgPatternFillUtils$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-opacity", $DvtSvgPatternFillUtils$$);
      } else {
        ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ColorUtils$.$fixColorForPlatform$($DvtSvgShadowUtils$$.$getColor$(), $DvtSvgShadowUtils$$.$getAlpha$())) && $DvtSvgPatternFillUtils$$.color ? ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke", $DvtSvgPatternFillUtils$$.color), null != $DvtSvgPatternFillUtils$$.alpha && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-opacity", $DvtSvgPatternFillUtils$$.alpha, 1)) : ($dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, 
        "stroke"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-opacity"));
      }
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-width", $DvtSvgShadowUtils$$.getWidth(), 1);
      $DvtSvgShadowUtils$$.$_bFixedWidth$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "vector-effect", "non-scaling-stroke");
      $DvtSvgShadowUtils$$.$getType$() !== $dvt$$17$$.$Stroke$.$SOLID$ ? ($DvtSvgShadowUtils$$.$_sd$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-dasharray", $DvtSvgShadowUtils$$.$_sd$), $DvtSvgShadowUtils$$.$_sdo$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-dashoffset", $DvtSvgShadowUtils$$.$_sdo$)) : ($dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-dasharray"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-dashoffset"));
      ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$_sj$) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-linejoin", $DvtSvgPatternFillUtils$$);
      ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$_se$) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-linecap", $DvtSvgPatternFillUtils$$);
      ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$_sm$) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "stroke-miterlimit", $DvtSvgPatternFillUtils$$);
      $DvtSvgShadowUtils$$.$__lock$();
    } else {
      $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-opacity"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-width"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-dasharray"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-dashoffset"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-linejoin"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, 
      "stroke-linecap"), $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "stroke-miterlimit");
    }
  };
  $dvt$$17$$.$Displayable$.prototype.$setSolidStroke$ = function $$dvt$$17$$$$Displayable$$$$setSolidStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$setStroke$(new $dvt$$17$$.$SolidStroke$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$));
  };
  $dvt$$17$$.$Displayable$.prototype.$_manageDefinitions$ = function $$dvt$$17$$$$Displayable$$$$_manageDefinitions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ != $DvtSvgPatternFillUtils$$ && ($DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.$_referenceCount$--, 0 == $DvtSvgShadowUtils$$.$_referenceCount$ && $DvtSvgShadowUtils$$.$_defElem$ && (this.$getCtx$().$removeDefs$($DvtSvgShadowUtils$$.$_defElem$), $DvtSvgShadowUtils$$.$_defPresent$ = !1)), $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$.$_referenceCount$ || ($DvtSvgPatternFillUtils$$.$_referenceCount$ = 0), $DvtSvgPatternFillUtils$$.$_referenceCount$++));
  };
  $dvt$$17$$.$Displayable$.prototype.$setTranslate$ = function $$dvt$$17$$$$Displayable$$$$setTranslate$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getMatrix$().clone(), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$_decompose$();
    null != $DvtSvgShadowUtils$$ && ($DvtSvgGradientUtils$$[$dvt$$17$$.$Matrix$.$_DECOMP_TX$] = $DvtSvgShadowUtils$$);
    null != $DvtSvgPatternFillUtils$$ && ($DvtSvgGradientUtils$$[$dvt$$17$$.$Matrix$.$_DECOMP_TY$] = $DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$.$_recompose$($DvtSvgGradientUtils$$);
    this.$setMatrix$($DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$getTranslateX$ = function $$dvt$$17$$$$Displayable$$$$getTranslateX$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$17$$.$Matrix$.$_DECOMP_TX$] : 0;
  };
  $dvt$$17$$.$Displayable$.prototype.$setTranslateX$ = function $$dvt$$17$$$$Displayable$$$$setTranslateX$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().clone(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$17$$.$Matrix$.$_DECOMP_TX$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$getTranslateY$ = function $$dvt$$17$$$$Displayable$$$$getTranslateY$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$17$$.$Matrix$.$_DECOMP_TY$] : 0;
  };
  $dvt$$17$$.$Displayable$.prototype.$setTranslateY$ = function $$dvt$$17$$$$Displayable$$$$setTranslateY$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().clone(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$17$$.$Matrix$.$_DECOMP_TY$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$setScale$ = function $$dvt$$17$$$$Displayable$$$$setScale$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getMatrix$().clone(), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$_decompose$();
    $DvtSvgShadowUtils$$ && ($DvtSvgGradientUtils$$[$dvt$$17$$.$Matrix$.$_DECOMP_SX$] = $DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ && ($DvtSvgGradientUtils$$[$dvt$$17$$.$Matrix$.$_DECOMP_SY$] = $DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$.$_recompose$($DvtSvgGradientUtils$$);
    this.$setMatrix$($DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$getScaleX$ = function $$dvt$$17$$$$Displayable$$$$getScaleX$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$17$$.$Matrix$.$_DECOMP_SX$] : 1;
  };
  $dvt$$17$$.$Displayable$.prototype.$setScaleX$ = function $$dvt$$17$$$$Displayable$$$$setScaleX$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().clone(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$17$$.$Matrix$.$_DECOMP_SX$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$getScaleY$ = function $$dvt$$17$$$$Displayable$$$$getScaleY$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$17$$.$Matrix$.$_DECOMP_SY$] : 1;
  };
  $dvt$$17$$.$Displayable$.prototype.$setScaleY$ = function $$dvt$$17$$$$Displayable$$$$setScaleY$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().clone(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$17$$.$Matrix$.$_DECOMP_SY$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$getRotation$ = function $$dvt$$17$$$$Displayable$$$$getRotation$$() {
    var $DvtSvgShadowUtils$$ = this.$getMatrix$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$_decompose$()[$dvt$$17$$.$Matrix$.$_DECOMP_R$] : 0;
  };
  $dvt$$17$$.$Displayable$.prototype.$setRotation$ = function $$dvt$$17$$$$Displayable$$$$setRotation$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getMatrix$().clone(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$_decompose$();
    $DvtSvgImageFillUtils$$[$dvt$$17$$.$Matrix$.$_DECOMP_R$] = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.$_recompose$($DvtSvgImageFillUtils$$);
    this.$setMatrix$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Displayable$.prototype.$getMatrix$ = function $$dvt$$17$$$$Displayable$$$$getMatrix$$() {
    return this.$_matrix$ ? this.$_matrix$ : new $dvt$$17$$.$Matrix$;
  };
  $dvt$$17$$.$Displayable$.prototype.$setMatrix$ = function $$dvt$$17$$$$Displayable$$$$setMatrix$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isIdentity$() && ($DvtSvgShadowUtils$$ = null);
    this.$_matrix$ != $DvtSvgShadowUtils$$ && ((this.$_matrix$ = $DvtSvgShadowUtils$$) && !this.$_matrix$.$_bLocked$ && this.$_matrix$.$__lock$(), !this.$_outerElem$ && $dvt$$17$$.$Displayable$.$HasAttributes$(this.$getElem$(), $dvt$$17$$.$Displayable$.$_ATTRS_TRANSFERABLE_TO_OUTER$) && this.$_createOuterGroupElem$(), (this.$_matrix$ = $DvtSvgShadowUtils$$) ? $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "transform", "matrix(" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_a$) + 
    "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_c$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_b$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_d$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_tx$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtSvgShadowUtils$$.$_ty$) + ")", "matrix(1,0,0,1,0,0)") : $dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$(this.$getElem$(), "transform") && ($dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getElem$(), 
    "transform"), $dvt$$17$$.$Agent$.$isPlatformIE$() && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "transform", null)));
  };
  $dvt$$17$$.$Container$ = function $$dvt$$17$$$$Container$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, "g", $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Container$, $dvt$$17$$.$Displayable$);
  $dvt$$17$$.$Container$.prototype.Init = function $$dvt$$17$$$$Container$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_bShapeContainer$ = this instanceof $dvt$$17$$.$Shape$;
    $dvt$$17$$.$Container$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, null != $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : "g", $DvtSvgImageFillUtils$$);
    this.$_childGroupElem$ = null;
  };
  $dvt$$17$$.$Container$.$AttributesTransferableToGroup$ = "transform opacity visibility pointer-events clip-path cursor".split(" ");
  $dvt$$17$$.$Container$.prototype.$addChild$ = function $$dvt$$17$$$$Container$$$$addChild$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getParent();
      $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.removeChild($DvtSvgShadowUtils$$);
      this.$_arList$ || (this.$_arList$ = []);
      $DvtSvgShadowUtils$$.$setParent$(this);
      this.$_bShapeContainer$ && this.$CreateChildGroupElem$(!1);
      $dvt$$17$$.$ToolkitUtils$.$appendChildElem$(this.$getContainerElem$(), $DvtSvgShadowUtils$$.$getOuterElem$());
      this.$_arList$.push($DvtSvgShadowUtils$$);
    }
  };
  $dvt$$17$$.$Container$.prototype.$addChildAt$ = function $$dvt$$17$$$$Container$$$$addChildAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$AddChildAt$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Container$.prototype.$AddChildAt$ = function $$dvt$$17$$$$Container$$$$AddChildAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (0 <= $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$ <= this.$getNumChildren$() && $DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = this.$_findChild$($DvtSvgShadowUtils$$);
      if (!(0 <= $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$ == $DvtSvgPatternFillUtils$$)) {
        var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.getParent();
        $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$.removeChild($DvtSvgShadowUtils$$);
        $DvtSvgShadowUtils$$.$setParent$(this);
        0 <= $DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$ == this.$getNumChildren$() + 1 && $DvtSvgPatternFillUtils$$--;
        $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$;
        this.$_bShapeContainer$ && (this.$CreateChildGroupElem$(!1), $DvtSvgGradientUtils$$++);
        $DvtSvgImageFillUtils$$ = this.$getContainerElem$();
        ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.childNodes[$DvtSvgGradientUtils$$]) || ($DvtSvgGradientUtils$$ = null);
        $DvtSvgImageFillUtils$$.insertBefore($DvtSvgShadowUtils$$.$getOuterElem$(), $DvtSvgGradientUtils$$);
        this.$_arList$ || (this.$_arList$ = []);
        this.$_arList$.splice($DvtSvgPatternFillUtils$$, 0, $DvtSvgShadowUtils$$);
      }
    }
  };
  $dvt$$17$$.$Container$.prototype.contains = function $$dvt$$17$$$$Container$$$contains$($DvtSvgShadowUtils$$) {
    return 0 <= this.$_findChild$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Container$.prototype.$_findChild$ = function $$dvt$$17$$$$Container$$$$_findChild$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = -1;
    if (this.$_arList$) {
      for (var $DvtSvgImageFillUtils$$ = this.$_arList$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
        if (this.$_arList$[$DvtSvgGradientUtils$$] === $DvtSvgShadowUtils$$) {
          $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$;
          break;
        }
      }
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Container$.prototype.$getChildAfter$ = function $$dvt$$17$$$$Container$$$$getChildAfter$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = null;
    $DvtSvgShadowUtils$$ = this.$_findChild$($DvtSvgShadowUtils$$);
    0 <= $DvtSvgShadowUtils$$ && ++$DvtSvgShadowUtils$$ < this.$_arList$.length && ($DvtSvgPatternFillUtils$$ = this.$_arList$[$DvtSvgShadowUtils$$]);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Container$.prototype.$getChildBefore$ = function $$dvt$$17$$$$Container$$$$getChildBefore$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = null;
    $DvtSvgShadowUtils$$ = this.$_findChild$($DvtSvgShadowUtils$$);
    0 < $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = this.$_arList$[--$DvtSvgShadowUtils$$]);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Container$.prototype.$getChildAt$ = function $$dvt$$17$$$$Container$$$$getChildAt$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = null;
    this.$_arList$ && this.$_arList$.length > $DvtSvgShadowUtils$$ && 0 <= $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = this.$_arList$[$DvtSvgShadowUtils$$]);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Container$.prototype.$getChildIndex$ = function $$dvt$$17$$$$Container$$$$getChildIndex$$($DvtSvgShadowUtils$$) {
    return this.$_findChild$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Container$.prototype.$getNumChildren$ = function $$dvt$$17$$$$Container$$$$getNumChildren$$() {
    return this.$_arList$ ? this.$_arList$.length : 0;
  };
  $dvt$$17$$.$Container$.prototype.removeChild = function $$dvt$$17$$$$Container$$$removeChild$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_findChild$($DvtSvgShadowUtils$$);
    -1 !== $DvtSvgPatternFillUtils$$ && this.$_removeObj$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Container$.prototype.$removeChildImpl$ = function $$dvt$$17$$$$Container$$$$removeChildImpl$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getOuterElem$();
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getParent();
    $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$ && this.$getContainerElem$().removeChild($DvtSvgPatternFillUtils$$);
    !this.$_anchorElem$ && this.$_bShapeContainer$ && 1 === this.$getNumChildren$() && ($DvtSvgShadowUtils$$ = ($DvtSvgPatternFillUtils$$ = this.$_childGroupElem$) ? $DvtSvgPatternFillUtils$$.parentNode : null) && ($dvt$$17$$.$Displayable$.$TransferAttributes$($DvtSvgPatternFillUtils$$, this.$_elem$, this.$GetAttributesTransferableToGroup$()), $DvtSvgShadowUtils$$.replaceChild(this.$_elem$, $DvtSvgPatternFillUtils$$), this.$_childGroupElem$ = null);
  };
  $dvt$$17$$.$Container$.prototype.$removeChildAt$ = function $$dvt$$17$$$$Container$$$$removeChildAt$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getChildAt$($DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ && this.$_removeObj$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Container$.prototype.$removeChildren$ = function $$dvt$$17$$$$Container$$$$removeChildren$$() {
    if (this.$_arList$) {
      for (var $DvtSvgShadowUtils$$ = this.$_arList$;0 < this.$getNumChildren$();) {
        this.$_removeObj$($DvtSvgShadowUtils$$[0], 0);
      }
    }
  };
  $dvt$$17$$.$Container$.prototype.$_removeObj$ = function $$dvt$$17$$$$Container$$$$_removeObj$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$removeChildImpl$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$setParent$(null);
    this.$_arList$.splice($DvtSvgPatternFillUtils$$, 1);
    0 === this.$_arList$.length && (this.$_arList$ = null);
  };
  $dvt$$17$$.$Container$.prototype.$destroy$ = function $$dvt$$17$$$$Container$$$$destroy$$() {
    $dvt$$17$$.$Container$.$superclass$.$destroy$.call(this);
    for (var $DvtSvgShadowUtils$$ = this.$getNumChildren$(), $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$;$DvtSvgPatternFillUtils$$++) {
      this.$getChildAt$($DvtSvgPatternFillUtils$$).$destroy$();
    }
  };
  $dvt$$17$$.$Container$.prototype.$GetAttributesTransferableToGroup$ = function $$dvt$$17$$$$Container$$$$GetAttributesTransferableToGroup$$() {
    return $dvt$$17$$.$Container$.$AttributesTransferableToGroup$;
  };
  $dvt$$17$$.$Container$.prototype.$getElem$ = function $$dvt$$17$$$$Container$$$$getElem$$() {
    return this.$_childGroupElem$ ? this.$_childGroupElem$ : this.$_elem$;
  };
  $dvt$$17$$.$Container$.prototype.$CreateChildGroupElem$ = function $$dvt$$17$$$$Container$$$$CreateChildGroupElem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (this.$_childGroupElem$ || !$DvtSvgPatternFillUtils$$ && 0 !== this.$getNumChildren$()) {
      $DvtSvgShadowUtils$$ && this.$removeChildren$();
    } else {
      this.$_childGroupElem$ = $dvt$$17$$.$SvgShapeUtils$.createElement("g", $dvt$$17$$.$Displayable$.$SET_ID_ON_DOM$ && this.$_id$ ? this.$_id$ + "_g" : null);
      var $DvtSvgImageFillUtils$$ = this.getParent();
      $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.$getElem$(), $DvtSvgImageFillUtils$$.replaceChild(this.$_childGroupElem$, this.$_elem$));
      $DvtSvgShadowUtils$$ || $dvt$$17$$.$ToolkitUtils$.$appendChildElem$(this.$_childGroupElem$, this.$_elem$);
      $dvt$$17$$.$Displayable$.$TransferAttributes$(this.$_elem$, this.$_childGroupElem$, this.$GetAttributesTransferableToGroup$());
      this.$_elem$.$_obj$ && (this.$_childGroupElem$.$_obj$ = this.$_elem$.$_obj$);
      $dvt$$17$$.$Agent$.$isEnvironmentTest$() && document.$shapeContainerCount$++;
    }
  };
  $dvt$$17$$.$Container$.prototype.$getDimensionsWithStroke$ = function $$dvt$$17$$$$Container$$$$getDimensionsWithStroke$$() {
    for (var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$getNumChildren$(), $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
      $DvtSvgShadowUtils$$.push(this.$getChildAt$($DvtSvgImageFillUtils$$));
    }
    for (var $DvtSvgGradientUtils$$ = null;0 < $DvtSvgShadowUtils$$.length;) {
      var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.shift();
      ($DvtSvgPatternFillUtils$$ = $DvtSvgFilterUtils$$.$GetDimensionsWithStroke$(this)) && ($DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$.$getUnion$($DvtSvgPatternFillUtils$$) : $DvtSvgPatternFillUtils$$);
      $DvtSvgPatternFillUtils$$ = $DvtSvgFilterUtils$$.$getNumChildren$();
      for ($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
        $DvtSvgShadowUtils$$.push($DvtSvgFilterUtils$$.$getChildAt$($DvtSvgImageFillUtils$$));
      }
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$Container$.prototype.$GetDimensionsWithStroke$ = function $$dvt$$17$$$$Container$$$$GetDimensionsWithStroke$$() {
    return null;
  };
  $dvt$$17$$.$Container$.$_reparentChildren$ = function $$dvt$$17$$$$Container$$$_reparentChildren$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.childNodes;
    if ($DvtSvgImageFillUtils$$) {
      for (var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.length - 1;0 <= $DvtSvgFilterContext$$;$DvtSvgFilterContext$$--) {
        $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgFilterContext$$], $DvtSvgFilterUtils$$ ? $DvtSvgShadowUtils$$.insertBefore($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) : $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$;
      }
    }
  };
  $dvt$$17$$.$Container$.prototype.$getContainerElem$ = function $$dvt$$17$$$$Container$$$$getContainerElem$$() {
    return this.$_anchorElem$ ? this.$_anchorElem$ : this.$getElem$();
  };
  $dvt$$17$$.$Container$.prototype.$dispatchNativeEvent$ = function $$dvt$$17$$$$Container$$$$dispatchNativeEvent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$();
    var $DvtSvgPatternFillUtils$$ = null, $DvtSvgPatternFillUtils$$ = this.$_bShapeContainer$ ? this.$_childGroupElem$ : this.$_anchorElem$ ? this.$_anchorElem$ : this.$_elem$;
    $DvtSvgPatternFillUtils$$.dispatchEvent && $DvtSvgPatternFillUtils$$.dispatchEvent($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Container$.prototype.$UpdateSelectionEffect$ = function $$dvt$$17$$$$Container$$$$UpdateSelectionEffect$$() {
  };
  $dvt$$17$$.$Container$.prototype.$setHollow$ = function $$dvt$$17$$$$Container$$$$setHollow$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < this.$getNumChildren$();$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = this.$getChildAt$($DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$getFill$() ? $DvtSvgGradientUtils$$.$getFill$().$getColor$() : $DvtSvgShadowUtils$$;
      $DvtSvgGradientUtils$$.$setHollow$($DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtStage$$, $dvt$$17$$.$Container$);
  $DvtStage$$.prototype.$addChild$ = function $$DvtStage$$$$$addChild$$($DvtSvgShadowUtils$$) {
    $DvtStage$$.$superclass$.$addChild$.call(this, $DvtSvgShadowUtils$$);
  };
  $DvtStage$$.prototype.$appendDefs$ = function $$DvtStage$$$$$appendDefs$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$(this.$_elemDefs$, $DvtSvgShadowUtils$$);
  };
  $DvtStage$$.prototype.$getDefs$ = function $$DvtStage$$$$$getDefs$$() {
    return this.$_elemDefs$;
  };
  $DvtStage$$.prototype.$disableSelection$ = function $$DvtStage$$$$$disableSelection$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.onselectstart = function $$DvtSvgShadowUtils$$$onselectstart$() {
      return !1;
    };
    $DvtSvgShadowUtils$$.onselect = function $$DvtSvgShadowUtils$$$onselect$() {
      return !1;
    };
  };
  $dvt$$17$$.$Shape$ = function $$dvt$$17$$$$Shape$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Shape$, $dvt$$17$$.$Container$);
  $dvt$$17$$.$Shape$.prototype.Init = function $$dvt$$17$$$$Shape$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$Shape$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$IsSelected$ = this.$_bSelectable$ = !1;
    this.$OriginalStroke$ = this.$SelectedHoverOuterStroke$ = this.$SelectedHoverInnerStroke$ = this.$SelectedOuterStroke$ = this.$SelectedInnerStroke$ = this.$HoverOuterStroke$ = this.$HoverInnerStroke$ = this.$InnerShape$ = null;
    this.$IsShowingHoverEffect$ = this.$_isOriginalStrokeSet$ = !1;
  };
  $dvt$$17$$.$Shape$.prototype.$setHollow$ = function $$dvt$$17$$$$Shape$$$$setHollow$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (this.$_bHollow$) {
      this.$setFill$(this.$_origFill$), this.$setStroke$(this.$_origStroke$), this.$_bHollow$ = !1;
    } else {
      this.$_origFill$ = this.$GetProperty$("fill");
      this.$_origStroke$ = this.$getStroke$();
      var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SolidFill$.$invisibleFill$(), $DvtSvgGradientUtils$$;
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$ ? new $dvt$$17$$.$SolidStroke$($dvt$$17$$.$ColorUtils$.$getRGB$($DvtSvgShadowUtils$$), $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$) : new $dvt$$17$$.$SolidStroke$(this.$GetProperty$("fill").$getColor$(), this.$GetProperty$("fill").$getAlpha$(), $DvtSvgPatternFillUtils$$);
      this.$setFill$($DvtSvgImageFillUtils$$);
      this.$setStroke$($DvtSvgGradientUtils$$);
      this.$_bHollow$ = !0;
    }
  };
  $dvt$$17$$.$Shape$.prototype.$destroy$ = function $$dvt$$17$$$$Shape$$$$destroy$$() {
    $dvt$$17$$.$Shape$.$superclass$.$destroy$.call(this);
    this.$setFill$(null);
    this.$setStroke$(null);
  };
  $dvt$$17$$.$Shape$.prototype.$getDimensionsWithStroke$ = function $$dvt$$17$$$$Shape$$$$getDimensionsWithStroke$$() {
    var $DvtSvgShadowUtils$$ = this.$GetElemDimensionsWithStroke$(), $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Shape$.$superclass$.$getDimensionsWithStroke$.call(this);
    $DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ ? $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getUnion$($DvtSvgPatternFillUtils$$) : $DvtSvgPatternFillUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Shape$.prototype.$GetDimensionsWithStroke$ = function $$dvt$$17$$$$Shape$$$$GetDimensionsWithStroke$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetElemDimensionsWithStroke$();
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ !== this ? this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$) : $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Shape$.prototype.$GetElemDimensionsWithStroke$ = function $$dvt$$17$$$$Shape$$$$GetElemDimensionsWithStroke$$() {
    var $DvtSvgShadowUtils$$ = this.$getDimensionsSelf$ && 0 == this.$getNumChildren$() - this.$_getInnerShapeCount$() ? this.$getDimensionsSelf$() : $dvt$$17$$.$Shape$.$superclass$.$getDimensions$.call(this), $DvtSvgPatternFillUtils$$ = this.$getStroke$();
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.getWidth())) {
      var $DvtSvgImageFillUtils$$ = .5 * $DvtSvgPatternFillUtils$$;
      $DvtSvgShadowUtils$$.x -= $DvtSvgImageFillUtils$$;
      $DvtSvgShadowUtils$$.y -= $DvtSvgImageFillUtils$$;
      $DvtSvgShadowUtils$$.$w$ += $DvtSvgPatternFillUtils$$;
      $DvtSvgShadowUtils$$.$h$ += $DvtSvgPatternFillUtils$$;
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Shape$.prototype.$UpdateSelectionEffect$ = function $$dvt$$17$$$$Shape$$$$UpdateSelectionEffect$$() {
    if (this.$isSelected$() || this.$IsShowingHoverEffect$) {
      var $DvtSvgShadowUtils$$;
      this.$InnerShape$ && ($DvtSvgShadowUtils$$ = this.$InnerShape$.$getStroke$(), this.removeChild(this.$InnerShape$));
      this.$InnerShape$ = this.$copyShape$();
      this.$InnerShape$.$setMouseEnabled$(!1);
      this.$InnerShape$.$setFill$(this.$getFill$());
      this.$InnerShape$.$setStyle$(this.$getStyle$()).$setClassName$(this.$getClassName$());
      $DvtSvgShadowUtils$$ && this.$InnerShape$.$setStroke$($DvtSvgShadowUtils$$);
      this.$InnerShape$.$setMouseEnabled$(!1);
      this.$InnerShape$.setCursor("pointer");
      this.$AddChildAt$(this.$InnerShape$, 0);
    }
  };
  $dvt$$17$$.$Shape$.prototype.$setHoverStroke$ = function $$dvt$$17$$$$Shape$$$$setHoverStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$HoverInnerStroke$ = $DvtSvgShadowUtils$$;
    this.$HoverOuterStroke$ = $DvtSvgPatternFillUtils$$;
    return this;
  };
  $dvt$$17$$.$Shape$.prototype.$setSelectedStroke$ = function $$dvt$$17$$$$Shape$$$$setSelectedStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$SelectedInnerStroke$ = $DvtSvgShadowUtils$$;
    this.$SelectedOuterStroke$ = $DvtSvgPatternFillUtils$$;
    return this;
  };
  $dvt$$17$$.$Shape$.prototype.$setSelectedHoverStroke$ = function $$dvt$$17$$$$Shape$$$$setSelectedHoverStroke$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$SelectedHoverInnerStroke$ = $DvtSvgShadowUtils$$;
    this.$SelectedHoverOuterStroke$ = $DvtSvgPatternFillUtils$$;
    return this;
  };
  $dvt$$17$$.$Shape$.prototype.$setSelectable$ = function $$dvt$$17$$$$Shape$$$$setSelectable$$($DvtSvgShadowUtils$$) {
    (this.$_bSelectable$ = $DvtSvgShadowUtils$$) ? this.setCursor("pointer") : this.setCursor(null);
  };
  $dvt$$17$$.$Shape$.prototype.$isSelectable$ = function $$dvt$$17$$$$Shape$$$$isSelectable$$() {
    return this.$_bSelectable$;
  };
  $dvt$$17$$.$Shape$.prototype.$isSelected$ = function $$dvt$$17$$$$Shape$$$$isSelected$$() {
    return this.$IsSelected$;
  };
  $dvt$$17$$.$Shape$.prototype.$setSelected$ = function $$dvt$$17$$$$Shape$$$$setSelected$$($DvtSvgShadowUtils$$) {
    this.$IsSelected$ != $DvtSvgShadowUtils$$ && (this.$_isOriginalStrokeSet$ || (this.$_isOriginalStrokeSet$ = !0, this.$OriginalStroke$ = this.$getStroke$()), this.$IsSelected$ = $DvtSvgShadowUtils$$, this.$isSelected$() ? (this.$UpdateSelectionEffect$(), this.$IsShowingHoverEffect$ ? (this.$CreateSelectedHoverStrokes$(), this.$InnerShape$.$setStroke$(this.$SelectedHoverInnerStroke$), this.$setStroke$(this.$SelectedHoverOuterStroke$)) : (this.$InnerShape$.$setStroke$(this.$SelectedInnerStroke$), 
    this.$setStroke$(this.$SelectedOuterStroke$))) : (this.removeChild(this.$InnerShape$), this.$setStroke$(this.$OriginalStroke$)));
  };
  $dvt$$17$$.$Shape$.prototype.$showHoverEffect$ = function $$dvt$$17$$$$Shape$$$$showHoverEffect$$() {
    this.$IsShowingHoverEffect$ || (this.$IsShowingHoverEffect$ = !0, this.$_isOriginalStrokeSet$ || (this.$_isOriginalStrokeSet$ = !0, this.$OriginalStroke$ = this.$getStroke$()), this.$UpdateSelectionEffect$(), this.$isSelected$() ? (this.$CreateSelectedHoverStrokes$(), this.$InnerShape$.$setStroke$(this.$SelectedHoverInnerStroke$), this.$setStroke$(this.$SelectedHoverOuterStroke$)) : (this.$InnerShape$.$setStroke$(this.$HoverInnerStroke$), this.$setStroke$(this.$HoverOuterStroke$)));
  };
  $dvt$$17$$.$Shape$.prototype.$CreateSelectedHoverStrokes$ = function $$dvt$$17$$$$Shape$$$$CreateSelectedHoverStrokes$$() {
    this.$SelectedHoverInnerStroke$ || (this.$SelectedHoverInnerStroke$ = this.$HoverInnerStroke$.clone());
    this.$SelectedHoverOuterStroke$ || (this.$SelectedHoverOuterStroke$ = this.$SelectedOuterStroke$.clone(), this.$SelectedHoverOuterStroke$.$setWidth$(this.$SelectedOuterStroke$.getWidth() + (this.$HoverInnerStroke$.getWidth() - this.$SelectedInnerStroke$.getWidth())));
  };
  $dvt$$17$$.$Shape$.prototype.$hideHoverEffect$ = function $$dvt$$17$$$$Shape$$$$hideHoverEffect$$() {
    this.$IsShowingHoverEffect$ && (this.$IsShowingHoverEffect$ = !1, this.$isSelected$() ? (this.$InnerShape$.$setStroke$(this.$SelectedInnerStroke$), this.$setStroke$(this.$SelectedOuterStroke$)) : (this.removeChild(this.$InnerShape$), this.$setStroke$(this.$OriginalStroke$)));
  };
  $dvt$$17$$.$Shape$.prototype.$addChildAt$ = function $$dvt$$17$$$$Shape$$$$addChildAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$17$$.$Shape$.$superclass$.$addChildAt$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ + this.$_getInnerShapeCount$());
  };
  $dvt$$17$$.$Shape$.prototype.$getChildAt$ = function $$dvt$$17$$$$Shape$$$$getChildAt$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$Shape$.$superclass$.$getChildAt$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ + this.$_getInnerShapeCount$());
  };
  $dvt$$17$$.$Shape$.prototype.$getChildIndex$ = function $$dvt$$17$$$$Shape$$$$getChildIndex$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Shape$.$superclass$.$getChildIndex$.call(this, $DvtSvgShadowUtils$$) - this.$_getInnerShapeCount$();
  };
  $dvt$$17$$.$Shape$.prototype.$removeChildAt$ = function $$dvt$$17$$$$Shape$$$$removeChildAt$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$Shape$.$superclass$.$removeChildAt$.call(this, $DvtSvgShadowUtils$$ + this.$_getInnerShapeCount$());
  };
  $dvt$$17$$.$Shape$.prototype.$getDimensions$ = function $$dvt$$17$$$$Shape$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    return this.$getDimensionsSelf$ && 0 == this.$getNumChildren$() - this.$_getInnerShapeCount$() ? this.$getDimensionsSelf$($DvtSvgShadowUtils$$) : $dvt$$17$$.$Shape$.$superclass$.$getDimensions$.call(this, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Shape$.prototype.$_getInnerShapeCount$ = function $$dvt$$17$$$$Shape$$$$_getInnerShapeCount$$() {
    return this.$isSelected$() || this.$IsShowingHoverEffect$ ? 1 : 0;
  };
  $dvt$$17$$.$Shape$.prototype.$SvgPropertyChanged$ = function $$dvt$$17$$$$Shape$$$$SvgPropertyChanged$$() {
    this.$UpdateSelectionEffect$();
  };
  $dvt$$17$$.$Shape$.prototype.$copyShape$ = function $$dvt$$17$$$$Shape$$$$copyShape$$() {
    return null;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCircularShape$$, $dvt$$17$$.$Shape$);
  $DvtCircularShape$$.prototype.Init = function $$DvtCircularShape$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtCircularShape$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$);
    this.$setCx$($DvtSvgImageFillUtils$$).$setCy$($DvtSvgGradientUtils$$);
  };
  $DvtCircularShape$$.prototype.$getCx$ = function $$DvtCircularShape$$$$$getCx$$() {
    return this.$GetProperty$("cx");
  };
  $DvtCircularShape$$.prototype.$setCx$ = function $$DvtCircularShape$$$$$setCx$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("cx", $DvtSvgShadowUtils$$, 0);
  };
  $DvtCircularShape$$.prototype.$getCy$ = function $$DvtCircularShape$$$$$getCy$$() {
    return this.$GetProperty$("cy");
  };
  $DvtCircularShape$$.prototype.$setCy$ = function $$DvtCircularShape$$$$$setCy$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("cy", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtPolygonalShape$$, $dvt$$17$$.$Shape$);
  $DvtPolygonalShape$$.prototype.Init = function $$DvtPolygonalShape$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtPolygonalShape$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
    $DvtSvgImageFillUtils$$ && this.$setPoints$($DvtSvgImageFillUtils$$);
  };
  $DvtPolygonalShape$$.prototype.$getPoints$ = function $$DvtPolygonalShape$$$$$getPoints$$() {
    return this.$GetProperty$("arPoints");
  };
  $DvtPolygonalShape$$.prototype.$setPoints$ = function $$DvtPolygonalShape$$$$$setPoints$$($DvtSvgShadowUtils$$) {
    this.$SetProperty$("arPoints", $DvtSvgShadowUtils$$);
    return this.$SetSvgProperty$("points", $dvt$$17$$.$SvgShapeUtils$.$convertPointsArray$($DvtSvgShadowUtils$$));
  };
  $DvtPolygonalShape$$.prototype.$getDimensionsSelf$ = function $$DvtPolygonalShape$$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$PolygonUtils$.$getDimensions$(this.$getPoints$());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Arc$ = function $$dvt$$17$$$$Arc$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Arc$, $dvt$$17$$.$Shape$);
  $dvt$$17$$.$Arc$.OPEN = "OPEN";
  $dvt$$17$$.$Arc$.$CHORD$ = "CHORD";
  $dvt$$17$$.$Arc$.$PIE$ = "PIE";
  $dvt$$17$$.$Arc$.prototype.Init = function $$dvt$$17$$$$Arc$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    $dvt$$17$$.$Arc$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "path", $DvtDomXmlParser$$);
    this.$_ae$ = this.$_sa$ = 0;
    $DvtSvgFilterUtils$$ = null === $DvtSvgFilterUtils$$ || isNaN($DvtSvgFilterUtils$$) ? $DvtSvgGradientUtils$$ : $DvtSvgFilterUtils$$;
    this.$_bInInit$ = !0;
    this.$setCx$($DvtSvgPatternFillUtils$$);
    this.$setCy$($DvtSvgImageFillUtils$$);
    this.$setRx$($DvtSvgGradientUtils$$);
    this.$setRy$($DvtSvgFilterUtils$$);
    this.$setAngleStart$($DvtSvgFilterContext$$);
    this.$setAngleExtent$($DvtSvgImplFactory$$);
    this.$setClosure$($DvtHtmlRichTooltipManager$$ ? $DvtHtmlRichTooltipManager$$ : $dvt$$17$$.$Arc$.OPEN);
    this.$_bInInit$ = !1;
    this.$_createArc$();
  };
  $dvt$$17$$.$Arc$.prototype.$_addClosure$ = function $$dvt$$17$$$$Arc$$$$_addClosure$$($DvtSvgShadowUtils$$) {
    this.$_ct$ === $dvt$$17$$.$Arc$.$CHORD$ ? $DvtSvgShadowUtils$$ += " z" : this.$_ct$ === $dvt$$17$$.$Arc$.$PIE$ ? $DvtSvgShadowUtils$$ += " L " + this.$_cx$ + "," + this.$_cy$ + " z" : this.$_ct$ === $dvt$$17$$.$Arc$.OPEN && this.$setFill$(null);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Arc$.prototype.$_createArc$ = function $$dvt$$17$$$$Arc$$$$_createArc$$() {
    if (!this.$_bInInit$) {
      var $DvtSvgShadowUtils$$ = this.$_sa$ * $dvt$$17$$.Math.$RADS_PER_DEGREE$, $DvtSvgPatternFillUtils$$ = this.$_ae$ * $dvt$$17$$.Math.$RADS_PER_DEGREE$, $DvtSvgShadowUtils$$ = "M " + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(this.$_cx$ + this.$_rx$ * Math.cos($DvtSvgShadowUtils$$)) + " " + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(this.$_cy$ - this.$_ry$ * Math.sin($DvtSvgShadowUtils$$)) + " A " + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(this.$_rx$) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(this.$_ry$) + 
      " 0 " + (180 < Math.abs(this.$_ae$) ? "1" : "0") + "," + (0 < this.$_ae$ ? "0" : "1") + " " + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(this.$_cx$ + this.$_rx$ * Math.cos($DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$)) + "," + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(this.$_cy$ - this.$_ry$ * Math.sin($DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$)), $DvtSvgShadowUtils$$ = this.$_addClosure$($DvtSvgShadowUtils$$);
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "d", $DvtSvgShadowUtils$$);
      null !== this.$_stroke$ && this.$setStroke$(this.$_stroke$);
    }
  };
  $dvt$$17$$.$Arc$.prototype.$getAngleExtent$ = function $$dvt$$17$$$$Arc$$$$getAngleExtent$$() {
    return this.$_ae$;
  };
  $dvt$$17$$.$Arc$.prototype.$setAngleExtent$ = function $$dvt$$17$$$$Arc$$$$setAngleExtent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.$_ae$ !== $DvtSvgShadowUtils$$ && (360 === $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = 359.99), this.$_ae$ = $DvtSvgShadowUtils$$, this.$_createArc$(), this.$UpdateSelectionEffect$());
  };
  $dvt$$17$$.$Arc$.prototype.$getAngleStart$ = function $$dvt$$17$$$$Arc$$$$getAngleStart$$() {
    return this.$_sa$;
  };
  $dvt$$17$$.$Arc$.prototype.$setAngleStart$ = function $$dvt$$17$$$$Arc$$$$setAngleStart$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = null === $DvtSvgShadowUtils$$ || isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$;
    this.$_sa$ !== $DvtSvgShadowUtils$$ && (this.$_sa$ = $DvtSvgShadowUtils$$, this.$_createArc$(), this.$UpdateSelectionEffect$());
  };
  $dvt$$17$$.$Arc$.prototype.$setClosure$ = function $$dvt$$17$$$$Arc$$$$setClosure$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_ct$ && (this.$_ct$ = $DvtSvgShadowUtils$$, this.$_createArc$(), this.$UpdateSelectionEffect$());
  };
  $dvt$$17$$.$Arc$.prototype.$getCx$ = function $$dvt$$17$$$$Arc$$$$getCx$$() {
    return this.$_cx$;
  };
  $dvt$$17$$.$Arc$.prototype.$setCx$ = function $$dvt$$17$$$$Arc$$$$setCx$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_cx$ && (this.$_cx$ = $DvtSvgShadowUtils$$, $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cx", $DvtSvgShadowUtils$$), this.$UpdateSelectionEffect$());
  };
  $dvt$$17$$.$Arc$.prototype.$getCy$ = function $$dvt$$17$$$$Arc$$$$getCy$$() {
    return this.$_cy$;
  };
  $dvt$$17$$.$Arc$.prototype.$setCy$ = function $$dvt$$17$$$$Arc$$$$setCy$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_cy$ && (this.$_cy$ = $DvtSvgShadowUtils$$, $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cy", $DvtSvgShadowUtils$$), this.$UpdateSelectionEffect$());
  };
  $dvt$$17$$.$Arc$.prototype.$getRx$ = function $$dvt$$17$$$$Arc$$$$getRx$$() {
    return this.$_rx$;
  };
  $dvt$$17$$.$Arc$.prototype.$setRx$ = function $$dvt$$17$$$$Arc$$$$setRx$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_rx$ && (this.$_rx$ = $DvtSvgShadowUtils$$, $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "rx", this.$_rx$), this.$_createArc$(), this.$UpdateSelectionEffect$());
  };
  $dvt$$17$$.$Arc$.prototype.$getRy$ = function $$dvt$$17$$$$Arc$$$$getRy$$() {
    return this.$_ry$;
  };
  $dvt$$17$$.$Arc$.prototype.$setRy$ = function $$dvt$$17$$$$Arc$$$$setRy$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ !== this.$_ry$ && (this.$_ry$ = $DvtSvgShadowUtils$$, $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "ry", this.$_ry$), this.$_createArc$(), this.$UpdateSelectionEffect$());
  };
  $dvt$$17$$.$Arc$.prototype.$setRadius$ = function $$dvt$$17$$$$Arc$$$$setRadius$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$setRx$($DvtSvgShadowUtils$$);
    this.$setRy$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Arc$.prototype.$copyShape$ = function $$dvt$$17$$$$Arc$$$$copyShape$$() {
    return new $dvt$$17$$.$Arc$(this.$getCtx$(), this.$getCx$(), this.$getCy$(), this.$getRx$(), this.$getRy$(), this.$getAngleStart$(), this.$getAngleExtent$(), this.$_ct$);
  };
  $dvt$$17$$.$Arc$.prototype.$GetAriaElem$ = function $$dvt$$17$$$$Arc$$$$GetAriaElem$$() {
    $dvt$$17$$.$Agent$.$isTouchDevice$() && this.$CreateChildGroupElem$(!1, !0);
    return $dvt$$17$$.$Arc$.$superclass$.$GetAriaElem$.call(this);
  };
  $dvt$$17$$.$Circle$ = function $$dvt$$17$$$$Circle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Circle$, $DvtCircularShape$$);
  $dvt$$17$$.$Circle$.prototype.Init = function $$dvt$$17$$$$Circle$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$17$$.$Circle$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "circle", $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
    this.$setRadius$($DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Circle$.prototype.$getRadius$ = function $$dvt$$17$$$$Circle$$$$getRadius$$() {
    return this.$GetProperty$("r");
  };
  $dvt$$17$$.$Circle$.prototype.$setRadius$ = function $$dvt$$17$$$$Circle$$$$setRadius$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("r", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Circle$.prototype.$copyShape$ = function $$dvt$$17$$$$Circle$$$$copyShape$$() {
    return new $dvt$$17$$.$Circle$(this.$getCtx$(), this.$getCx$(), this.$getCy$(), this.$getRadius$());
  };
  $dvt$$17$$.$Circle$.prototype.$getDimensionsSelf$ = function $$dvt$$17$$$$Circle$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Rectangle$(this.$getCx$() - this.$getRadius$(), this.$getCy$() - this.$getRadius$(), 2 * this.$getRadius$(), 2 * this.$getRadius$());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Image = function $$dvt$$17$$$Image$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.Image, $dvt$$17$$.$Shape$);
  $dvt$$17$$.Image.$XLINK_NS$ = "http://www.w3.org/1999/xlink";
  $dvt$$17$$.Image.prototype.Init = function $$dvt$$17$$$Image$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $dvt$$17$$.Image.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "image", $DvtSvgImplFactory$$);
    $dvt$$17$$.$Agent$.$isPlatformIE$() && ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", "#FFFFFF"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill-opacity", "0"));
    this.$setImage$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    this.$setAriaProperty$("hidden", "true");
  };
  $dvt$$17$$.Image.prototype.$getX$ = function $$dvt$$17$$$Image$$$getX$$() {
    return this.$GetProperty$("x");
  };
  $dvt$$17$$.Image.prototype.$setX$ = function $$dvt$$17$$$Image$$$setX$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("x", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Image.prototype.$getY$ = function $$dvt$$17$$$Image$$$getY$$() {
    return this.$GetProperty$("y");
  };
  $dvt$$17$$.Image.prototype.$setY$ = function $$dvt$$17$$$Image$$$setY$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Image.prototype.getWidth = function $$dvt$$17$$$Image$$getWidth$() {
    return this.$GetProperty$("width");
  };
  $dvt$$17$$.Image.prototype.$setWidth$ = function $$dvt$$17$$$Image$$$setWidth$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("width", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Image.prototype.getHeight = function $$dvt$$17$$$Image$$getHeight$() {
    return this.$GetProperty$("height");
  };
  $dvt$$17$$.Image.prototype.$setHeight$ = function $$dvt$$17$$$Image$$$setHeight$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("height", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Image.prototype.$getSrc$ = function $$dvt$$17$$$Image$$$getSrc$$() {
    return this.$_src$;
  };
  $dvt$$17$$.Image.prototype.$setSrc$ = function $$dvt$$17$$$Image$$$setSrc$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ !== this.$_src$) {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$;
      this.$_src$ = $DvtSvgShadowUtils$$;
      $dvt$$17$$.$Agent$.$isEnvironmentBatik$() && ($DvtSvgShadowUtils$$ = $dvt$$17$$.$JavaImageLoader$.$getImageInfo$($DvtSvgShadowUtils$$)) && ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.uri);
      $dvt$$17$$.$ToolkitUtils$.$setAttrNS$(this.$_elem$, $dvt$$17$$.Image.$XLINK_NS$, "xlink:href", $DvtSvgPatternFillUtils$$);
    }
    return this;
  };
  $dvt$$17$$.Image.prototype.$setPos$ = function $$dvt$$17$$$Image$$$setPos$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$setX$($DvtSvgShadowUtils$$).$setY$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.Image.prototype.$setImage$ = function $$dvt$$17$$$Image$$$setImage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgPatternFillUtils$$ instanceof $dvt$$17$$.Image ? (this.$setSrc$($DvtSvgShadowUtils$$.src), this.$setPos$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y), this.$setWidth$($DvtSvgShadowUtils$$.$w$), this.$setHeight$($DvtSvgShadowUtils$$.$h$)) : (this.$setSrc$($DvtSvgShadowUtils$$), this.$setPos$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), this.$setWidth$($DvtSvgGradientUtils$$), this.$setHeight$($DvtSvgFilterUtils$$));
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "preserveAspectRatio", "none");
  };
  $dvt$$17$$.Image.prototype.$getDimensions$ = function $$dvt$$17$$$Image$$$getDimensions$$($DvtSvgShadowUtils$$) {
    if (this.$getDimensionsSelf$ && 0 == this.$getNumChildren$() - this.$_getInnerShapeCount$()) {
      return this.$getDimensionsSelf$($DvtSvgShadowUtils$$);
    }
    var $DvtSvgPatternFillUtils$$ = this.$getElem$().getBBox(), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.width && $DvtSvgPatternFillUtils$$.height ? new $dvt$$17$$.$Rectangle$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y, $DvtSvgPatternFillUtils$$.width, $DvtSvgPatternFillUtils$$.height) : new $dvt$$17$$.$Rectangle$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y, this.getWidth(), this.getHeight());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Image.prototype.$__setDimensions$ = function $$dvt$$17$$$Image$$$__setDimensions$$($DvtSvgShadowUtils$$) {
    this.$setWidth$($DvtSvgShadowUtils$$.width);
    this.$setHeight$($DvtSvgShadowUtils$$.height);
  };
  $dvt$$17$$.Image.prototype.$UpdateSelectionEffect$ = function $$dvt$$17$$$Image$$$UpdateSelectionEffect$$() {
  };
  $dvt$$17$$.Image.prototype.$copyShape$ = function $$dvt$$17$$$Image$$$copyShape$$() {
    return new $dvt$$17$$.Image(this.$getCtx$(), this.$getSrc$(), this.$getX$(), this.$getY$(), this.getWidth(), this.getHeight());
  };
  $dvt$$17$$.Image.prototype.$getDimensionsSelf$ = function $$dvt$$17$$$Image$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Rectangle$(this.$getX$(), this.$getY$(), this.getWidth(), this.getHeight());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Image.prototype.$setAriaProperty$ = function $$dvt$$17$$$Image$$$setAriaProperty$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$17$$.Image.$superclass$.$setAriaProperty$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    "hidden" != $DvtSvgShadowUtils$$ && $dvt$$17$$.Image.$superclass$.$setAriaProperty$.call(this, "hidden", null);
  };
  $dvt$$17$$.$Line$ = function $$dvt$$17$$$$Line$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Line$, $dvt$$17$$.$Shape$);
  $dvt$$17$$.$Line$.prototype.Init = function $$dvt$$17$$$$Line$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$17$$.$Line$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "line", $DvtSvgFilterContext$$);
    this.$setX1$($DvtSvgPatternFillUtils$$).$setY1$($DvtSvgImageFillUtils$$).$setX2$($DvtSvgGradientUtils$$).$setY2$($DvtSvgFilterUtils$$);
    this.$_bHollow$ = !1;
  };
  $dvt$$17$$.$Line$.prototype.$getX1$ = function $$dvt$$17$$$$Line$$$$getX1$$() {
    return this.$GetProperty$("x1");
  };
  $dvt$$17$$.$Line$.prototype.$setX1$ = function $$dvt$$17$$$$Line$$$$setX1$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("x1", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.$Line$.prototype.$getY1$ = function $$dvt$$17$$$$Line$$$$getY1$$() {
    return this.$GetProperty$("y1");
  };
  $dvt$$17$$.$Line$.prototype.$setY1$ = function $$dvt$$17$$$$Line$$$$setY1$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y1", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.$Line$.prototype.$getX2$ = function $$dvt$$17$$$$Line$$$$getX2$$() {
    return this.$GetProperty$("x2");
  };
  $dvt$$17$$.$Line$.prototype.$setX2$ = function $$dvt$$17$$$$Line$$$$setX2$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("x2", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.$Line$.prototype.$getY2$ = function $$dvt$$17$$$$Line$$$$getY2$$() {
    return this.$GetProperty$("y2");
  };
  $dvt$$17$$.$Line$.prototype.$setY2$ = function $$dvt$$17$$$$Line$$$$setY2$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y2", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.$Line$.prototype.$setHollow$ = function $$dvt$$17$$$$Line$$$$setHollow$$() {
    var $DvtSvgShadowUtils$$ = this.$_elem$.parentNode;
    if (this.$_bHollow$) {
      this.$_origElem$ && ($DvtSvgShadowUtils$$.replaceChild(this.$_origElem$, this.$_elem$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_origElem$, "opacity", this.$_alpha$), this.$_elem$ = this.$_origElem$, this.$_origElem$ = null, this.$_bHollow$ = !1);
    } else {
      this.$_origElem$ = this.$_elem$;
      var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = this.$getX2$() - this.$getX1$(), $DvtSvgGradientUtils$$ = this.$getY1$() - $DvtSvgImageFillUtils$$ / 2, $DvtSvgFilterUtils$$ = this.$getStroke$();
      $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("rect");
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "x", this.$getX1$());
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "y", $DvtSvgGradientUtils$$);
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "width", this.$getX2$() - this.$getX1$());
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "height", $DvtSvgImageFillUtils$$);
      if ($DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$.$getColor$()) {
        $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.$getAlpha$(), $dvt$$17$$.$Agent$.$isBrowserSafari$() && -1 !== $DvtSvgImageFillUtils$$.indexOf("rgba") ? ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke", $dvt$$17$$.$ColorUtils$.$getRGB$($DvtSvgImageFillUtils$$)), null != $DvtSvgFilterUtils$$ ? $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke-opacity", $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgImageFillUtils$$) * $DvtSvgFilterUtils$$) : 
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke-opacity", $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgImageFillUtils$$))) : ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke", $DvtSvgImageFillUtils$$), null != $DvtSvgFilterUtils$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke-opacity", $DvtSvgFilterUtils$$));
      }
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill", "#ffffff");
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill-opacity", "0.001");
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "shape-rendering", "crispEdges");
      $DvtSvgPatternFillUtils$$.$_obj$ = this;
      $DvtSvgShadowUtils$$.replaceChild($DvtSvgPatternFillUtils$$, this.$_elem$);
      this.$_elem$ = $DvtSvgPatternFillUtils$$;
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "opacity", this.$_alpha$);
      this.$_bHollow$ = !0;
    }
  };
  $dvt$$17$$.$Line$.prototype.$getDimensions$ = function $$dvt$$17$$$$Line$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$Line$.$superclass$.$getDimensions$.call(this, $DvtSvgShadowUtils$$);
    if (this.$_childGroupElem$ && this.$_elem$) {
      var $DvtSvgPatternFillUtils$$ = this.$_childGroupElem$.getBBox();
      0 == $DvtSvgPatternFillUtils$$.x && 0 == $DvtSvgPatternFillUtils$$.y && 0 == $DvtSvgPatternFillUtils$$.width && 0 == $DvtSvgPatternFillUtils$$.height && ($DvtSvgShadowUtils$$ = this.$_elem$.getBBox(), $DvtSvgShadowUtils$$ = new $dvt$$17$$.$Rectangle$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$.width, $DvtSvgShadowUtils$$.height));
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Line$.prototype.$copyShape$ = function $$dvt$$17$$$$Line$$$$copyShape$$() {
    return new $dvt$$17$$.$Line$(this.$getCtx$(), this.$getX1$(), this.$getY1$(), this.$getX2$(), this.$getY2$());
  };
  $dvt$$17$$.$Line$.prototype.$getDimensionsSelf$ = function $$dvt$$17$$$$Line$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    return this.$ConvertCoordSpaceRect$(new $dvt$$17$$.$Rectangle$(Math.min(this.$getX1$(), this.$getX2$()), Math.min(this.$getY1$(), this.$getY2$()), Math.abs(this.$getX1$() - this.$getX2$()), Math.abs(this.$getY1$() - this.$getY2$())), $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Line$.prototype.$_adjustDimensionsForStyle$ = function $$dvt$$17$$$$Line$$$$_adjustDimensionsForStyle$$() {
    this.$getX1$() == this.$getX2$() ? this.$setX2$(this.$getX2$() + .001) : this.$getY1$() == this.$getY2$() && this.$setY2$(this.$getY2$() + .001);
  };
  $dvt$$17$$.$Line$.prototype.$setStyle$ = function $$dvt$$17$$$$Line$$$$setStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ && !$DvtSvgPatternFillUtils$$ && this.$_adjustDimensionsForStyle$();
    return $dvt$$17$$.$Line$.$superclass$.$setStyle$.call(this, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Line$.prototype.$setClassName$ = function $$dvt$$17$$$$Line$$$$setClassName$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ && !$DvtSvgPatternFillUtils$$ && this.$_adjustDimensionsForStyle$();
    return $dvt$$17$$.$Line$.$superclass$.$setClassName$.call(this, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$SimpleMarker$ = function $$dvt$$17$$$$SimpleMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SimpleMarker$, $dvt$$17$$.$Shape$);
  $dvt$$17$$.$SimpleMarker$.$CIRCLE$ = "circle";
  $dvt$$17$$.$SimpleMarker$.$ELLIPSE$ = "ellipse";
  $dvt$$17$$.$SimpleMarker$.$SQUARE$ = "square";
  $dvt$$17$$.$SimpleMarker$.$RECTANGLE$ = "rectangle";
  $dvt$$17$$.$SimpleMarker$.$DIAMOND$ = "diamond";
  $dvt$$17$$.$SimpleMarker$.$TRIANGLE_UP$ = "triangleUp";
  $dvt$$17$$.$SimpleMarker$.$TRIANGLE_DOWN$ = "triangleDown";
  $dvt$$17$$.$SimpleMarker$.$PLUS$ = "plus";
  $dvt$$17$$.$SimpleMarker$.$HUMAN$ = "human";
  $dvt$$17$$.$SimpleMarker$.$STAR$ = "star";
  $dvt$$17$$.$SimpleMarker$.$_CIRCLE_ELEM$ = "circle";
  $dvt$$17$$.$SimpleMarker$.$_ELLIPSE_ELEM$ = "ellipse";
  $dvt$$17$$.$SimpleMarker$.$_RECT_ELEM$ = "rect";
  $dvt$$17$$.$SimpleMarker$.$_PATH_ELEM$ = "path";
  $dvt$$17$$.$SimpleMarker$.$_POLYGON_ELEM$ = "polygon";
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$ = {};
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$CIRCLE$] = $dvt$$17$$.$SimpleMarker$.$_CIRCLE_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$ELLIPSE$] = $dvt$$17$$.$SimpleMarker$.$_ELLIPSE_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$SQUARE$] = $dvt$$17$$.$SimpleMarker$.$_PATH_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$RECTANGLE$] = $dvt$$17$$.$SimpleMarker$.$_PATH_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$DIAMOND$] = $dvt$$17$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$TRIANGLE_UP$] = $dvt$$17$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$TRIANGLE_DOWN$] = $dvt$$17$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$PLUS$] = $dvt$$17$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$HUMAN$] = $dvt$$17$$.$SimpleMarker$.$_PATH_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$dvt$$17$$.$SimpleMarker$.$STAR$] = $dvt$$17$$.$SimpleMarker$.$_POLYGON_ELEM$;
  $dvt$$17$$.$SimpleMarker$.$DEFAULT_BORDER_RADIUS$ = "6";
  $dvt$$17$$.$SimpleMarker$.$_HUMAN_CMDS$ = "M 38.07,36.467856 q 13.414,0 13.414,-13.406 l 0,-9.258 q 0,-13.4039999 -13.414,-13.4039999 -13.414,0 -13.414,13.4039999 l 0,9.258 q 0,13.406 13.414,13.406 l 0,0 z m 16.219,7.275 -32.435999,0 q -10.139552,0 -15.9400009,7.443875 Q 0.5,58.133383 0.5,69.156856 l 0,54.396004 12.746001,0 0,-51.609004 q 0,-2.824 0.793,-2.824 0.742,0 0.742,2.709 l 0,124.267994 q 0,2.82401 2.823999,2.82401 l 12.531,0 q 2.824,0 2.824,-2.824 l 0,-66.25 10.219,0 0,66.25 q 0,2.824 2.824,2.824 l 12.528,0 q 2.825,0 2.825,-2.824 l 0,-124.268004 q 0,-2.709 0.839,-2.709 0.792,0 0.792,2.824 l 0,51.609004 12.65,0 0,-54.396004 Q 75.6386,58.132927 70.227626,51.186731 64.428999,43.742856 54.289,43.742856 l 0,0 z";
  $dvt$$17$$.$SimpleMarker$.$_HUMAN2_CMDS$ = "M 306.40625 386.78125 C 304.19988 386.78125 302.40625 389.07579 302.40625 391.90625 C 302.40625 394.73671 304.19988 397.03125 306.40625 397.03125 C 308.61263 397.03125 310.40625 394.73671 310.40625 391.90625 C 310.40625 389.07579 308.61263 386.78125 306.40625 386.78125 z M 301.78125 396.0625 C 300.43025 397.2945 298.28125 400.28125 298.90625 403.15625 C 302.41725 405.79925 309.20225 406.154 314.03125 403 C 314.21825 399.828 312.68325 397.5635 310.90625 396.0625 C 308.65625 400.7185 304.28125 399.7815 301.78125 396.0625 z ";
  $dvt$$17$$.$SimpleMarker$.$_SHAPE_STAR_CMDS$ = [-50, -11.22, -16.69, -17.94, 0, -47.55, 16.69, -17.94, 50, -11.22, 26.69, 13.8, 30.9, 47.56, 0, 33.42, -30.9, 47.56, -26.69, 13.8];
  $dvt$$17$$.$SimpleMarker$.prototype.Init = function $$dvt$$17$$$$SimpleMarker$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$, $DvtContextMenuTooltipItem$$) {
    $DvtCustomTooltipItem$$ && ($DvtSvgGradientUtils$$ = Math.round($DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$ = Math.round($DvtSvgFilterUtils$$), $DvtSvgFilterContext$$ = Math.round($DvtSvgFilterContext$$), $DvtSvgImplFactory$$ = Math.round($DvtSvgImplFactory$$), $DvtSvgImplFactory$$ = 1 == $DvtSvgImplFactory$$ % 2 ? $DvtSvgImplFactory$$ + 1 : $DvtSvgImplFactory$$, $DvtSvgFilterContext$$ = 1 == $DvtSvgFilterContext$$ % 2 ? $DvtSvgFilterContext$$ + 1 : $DvtSvgFilterContext$$);
    this.$_bMaintainAspectRatio$ = !0;
    !1 === $DvtDomXmlParser$$ && (this.$_bMaintainAspectRatio$ = !1, $DvtSvgPatternFillUtils$$ == $dvt$$17$$.$SimpleMarker$.$CIRCLE$ && ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$SimpleMarker$.$ELLIPSE$));
    $DvtHtmlRichTooltipManager$$ && "0" != $DvtHtmlRichTooltipManager$$ && (this.$_borderRadius$ = $DvtHtmlRichTooltipManager$$);
    this.$_skin$ = $DvtSvgImageFillUtils$$;
    this.$_shape$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $dvt$$17$$.$SimpleMarker$.$RECTANGLE$;
    this.$_dataColor$ = "#000000";
    $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[$DvtSvgPatternFillUtils$$] : $dvt$$17$$.$SimpleMarker$.$_PATH_ELEM$;
    null == $DvtSvgImageFillUtils$$ && (this.$_isCustomShape$ = !0, this.$_path$ = new $dvt$$17$$.$Path$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SimpleMarker$.$_PATH_ELEM$);
    $dvt$$17$$.$SimpleMarker$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtContextMenuTooltipItem$$);
    if (this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$SQUARE$ || this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$RECTANGLE$) {
      this.$_path$ = this.$_getBorderRadiusPath$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$);
    }
    this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$HUMAN$ && (this.$_path$ = new $dvt$$17$$.$Path$($DvtSvgShadowUtils$$, $dvt$$17$$.$CSSStyle$.$afterSkinAlta$(this.$_skin$) ? $dvt$$17$$.$SimpleMarker$.$_HUMAN2_CMDS$ : $dvt$$17$$.$SimpleMarker$.$_HUMAN_CMDS$));
    this.$_propertyChange$ = {};
    this.$setCenter$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, !0).$setSize$($DvtSvgFilterContext$$, $DvtSvgImplFactory$$);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setCenterDimensions$ = function $$dvt$$17$$$$SimpleMarker$$$$setCenterDimensions$$($DvtSvgShadowUtils$$) {
    return this.$setCenter$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, !0).$setSize$($DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$getCenterDimensions$ = function $$dvt$$17$$$$SimpleMarker$$$$getCenterDimensions$$() {
    return new $dvt$$17$$.$Rectangle$(this.$_cx$, this.$_cy$, this.$_width$, this.$_height$);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setSize$ = function $$dvt$$17$$$$SimpleMarker$$$$setSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$setWidth$($DvtSvgShadowUtils$$, !0).$setHeight$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setCenter$ = function $$dvt$$17$$$$SimpleMarker$$$$setCenter$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$setCx$($DvtSvgShadowUtils$$, !0).$setCy$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$_updateSvgProperties$ = function $$dvt$$17$$$$SimpleMarker$$$$_updateSvgProperties$$() {
    if (this.$_propertyChange$.width || this.$_propertyChange$.height) {
      var $DvtSvgShadowUtils$$ = Math.min(this.$_width$, this.$_height$);
      this.$_propertyChange$.$s$ = this.$_s$ != $DvtSvgShadowUtils$$;
      this.$_s$ = $DvtSvgShadowUtils$$;
    }
    if (this.$_shape$ != $dvt$$17$$.$SimpleMarker$.$RECTANGLE$ && this.$_shape$ != $dvt$$17$$.$SimpleMarker$.$SQUARE$ || this.$_borderRadius$) {
      this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$CIRCLE$ || this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$ELLIPSE$ ? (this.$_propertyChange$.$cx$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cx", this.$_cx$, 0), this.$_propertyChange$.$cy$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "cy", this.$_cy$, 0), this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$CIRCLE$ ? this.$_propertyChange$.$s$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "r", this.$_s$ / 2, 0) : (this.$_propertyChange$.width && 
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "rx", this.$_width$ / 2, 0), this.$_propertyChange$.height && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "ry", this.$_height$ / 2, 0))) : this.$_isPolygon$() ? (this.$_propertyChange$.$s$ || this.$_propertyChange$.$cx$ || this.$_propertyChange$.$cy$) && this.$_setPolygon$(this.$_getPolygonArray$()) : this.$_isPath$() && (this.$_propertyChange$.width || this.$_propertyChange$.height || this.$_propertyChange$.$cx$ || this.$_propertyChange$.$cy$) && 
      this.$_setCmds$(this.$_getCmds$());
    } else {
      if (this.$_propertyChange$.width || this.$_propertyChange$.height || this.$_propertyChange$.$cx$ || this.$_propertyChange$.$cy$) {
        $DvtSvgShadowUtils$$ = $dvt$$17$$.$PathUtils$.$rectangleWithBorderRadius$(this.$_cx$ - this.$_width$ / 2, this.$_cy$ - this.$_height$ / 2, this.$_width$, this.$_height$), this.$_setCmds$($DvtSvgShadowUtils$$);
      }
    }
    this.$UpdateSelectionEffect$();
    this.$_propertyChange$ = {};
    return this;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$getCx$ = function $$dvt$$17$$$$SimpleMarker$$$$getCx$$() {
    return this.$_cx$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setCx$ = function $$dvt$$17$$$$SimpleMarker$$$$setCx$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.$cx$ = this.$_cx$ != $DvtSvgShadowUtils$$;
    this.$_cx$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$();
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$getCy$ = function $$dvt$$17$$$$SimpleMarker$$$$getCy$$() {
    return this.$_cy$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setCy$ = function $$dvt$$17$$$$SimpleMarker$$$$setCy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.$cy$ = this.$_cy$ != $DvtSvgShadowUtils$$;
    this.$_cy$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$();
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$getSize$ = function $$dvt$$17$$$$SimpleMarker$$$$getSize$$() {
    return this.$_s$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.getWidth = function $$dvt$$17$$$$SimpleMarker$$$getWidth$() {
    return this.$_width$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setWidth$ = function $$dvt$$17$$$$SimpleMarker$$$$setWidth$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.width = this.$_width$ != $DvtSvgShadowUtils$$;
    this.$_width$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$();
  };
  $dvt$$17$$.$SimpleMarker$.prototype.getHeight = function $$dvt$$17$$$$SimpleMarker$$$getHeight$() {
    return this.$_height$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setHeight$ = function $$dvt$$17$$$$SimpleMarker$$$$setHeight$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.height = this.$_height$ != $DvtSvgShadowUtils$$;
    this.$_height$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$();
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$_getPolygonArray$ = function $$dvt$$17$$$$SimpleMarker$$$$_getPolygonArray$$() {
    var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$_cx$, $DvtSvgImageFillUtils$$ = this.$_cy$, $DvtSvgGradientUtils$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ / 2 : this.$_width$ / 2, $DvtSvgFilterUtils$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ / 2 : this.$_height$ / 2, $DvtSvgFilterContext$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ / 6 : this.$_width$ / 6, $DvtSvgImplFactory$$ = this.$_bMaintainAspectRatio$ ? this.$_s$ / 6 : this.$_height$ / 6;
    this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$TRIANGLE_UP$ ? $DvtSvgShadowUtils$$ = [$DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$] : this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$TRIANGLE_DOWN$ ? $DvtSvgShadowUtils$$ = [$DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, 
    $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$] : this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$DIAMOND$ ? $DvtSvgShadowUtils$$ = [$DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, 
    $DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$] : this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$PLUS$ ? $DvtSvgShadowUtils$$ = [$DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + 
    $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ - $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ + $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ + $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ + 
    $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ + $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$ + $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ + $DvtSvgImplFactory$$] : this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$STAR$ && ($DvtSvgShadowUtils$$ = $dvt$$17$$.$SimpleMarker$.$_SHAPE_STAR_CMDS$, 
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$PolygonUtils$.scale($DvtSvgShadowUtils$$, this.$_bMaintainAspectRatio$ ? this.$_s$ / 100 : this.$_width$ / 100, this.$_bMaintainAspectRatio$ ? this.$_s$ / 100 : this.$_height$ / 100), $DvtSvgShadowUtils$$ = $dvt$$17$$.$PolygonUtils$.translate($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$));
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$_setPolygon$ = function $$dvt$$17$$$$SimpleMarker$$$$_setPolygon$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "points", $dvt$$17$$.$SvgShapeUtils$.$convertPointsArray$($DvtSvgShadowUtils$$));
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$_getCmds$ = function $$dvt$$17$$$$SimpleMarker$$$$_getCmds$$() {
    var $DvtSvgShadowUtils$$ = $dvt$$17$$.$DisplayableUtils$.$getDimForced$(this.$getCtx$(), this.$_path$), $DvtSvgPatternFillUtils$$ = Math.max($DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$), $DvtSvgImageFillUtils$$ = this.$_bMaintainAspectRatio$;
    this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$RECTANGLE$ && ($DvtSvgImageFillUtils$$ = !1);
    var $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$ ? this.$_s$ / $DvtSvgPatternFillUtils$$ : this.$_width$ / $DvtSvgShadowUtils$$.$w$, $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$ ? this.$_s$ / $DvtSvgPatternFillUtils$$ : this.$_height$ / $DvtSvgShadowUtils$$.$h$;
    return $dvt$$17$$.$PathUtils$.$transformPath$(this.$_path$.$getCmds$(), this.$_cx$ - $DvtSvgShadowUtils$$.x * $DvtSvgGradientUtils$$ - $DvtSvgShadowUtils$$.$w$ * $DvtSvgGradientUtils$$ / 2, this.$_cy$ - $DvtSvgShadowUtils$$.y * $DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$.$h$ * $DvtSvgPatternFillUtils$$ / 2, $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$_setCmds$ = function $$dvt$$17$$$$SimpleMarker$$$$_setCmds$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "d", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$getType$ = function $$dvt$$17$$$$SimpleMarker$$$$getType$$() {
    return this.$_shape$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$_isPolygon$ = function $$dvt$$17$$$$SimpleMarker$$$$_isPolygon$$() {
    return $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[this.$_shape$] == $dvt$$17$$.$SimpleMarker$.$_POLYGON_ELEM$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$_isPath$ = function $$dvt$$17$$$$SimpleMarker$$$$_isPath$$() {
    return $dvt$$17$$.$SimpleMarker$.$_SHAPE_ELEM_MAP$[this.$_shape$] == $dvt$$17$$.$SimpleMarker$.$_PATH_ELEM$ || this.$_isCustomShape$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$GetStrokeWidth$ = function $$dvt$$17$$$$SimpleMarker$$$$GetStrokeWidth$$() {
    var $DvtSvgShadowUtils$$ = this.$getStroke$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.getWidth() : 0;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$_getBorderRadiusPath$ = function $$dvt$$17$$$$SimpleMarker$$$$_getBorderRadiusPath$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    if (this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$SQUARE$ || this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$RECTANGLE$) {
      var $DvtSvgImplFactory$$ = Math.min($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
      $DvtSvgGradientUtils$$ = this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$SQUARE$ ? $DvtSvgImplFactory$$ : $DvtSvgGradientUtils$$;
      $DvtSvgFilterUtils$$ = this.$_shape$ == $dvt$$17$$.$SimpleMarker$.$SQUARE$ ? $DvtSvgImplFactory$$ : $DvtSvgFilterUtils$$;
      $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$PathUtils$.$rectangleWithBorderRadius$($DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$ / 2, $DvtSvgImageFillUtils$$ - $DvtSvgFilterUtils$$ / 2, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, "0");
      return new $dvt$$17$$.$Path$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    }
    return null;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$_getBorderRadius$ = function $$dvt$$17$$$$SimpleMarker$$$$_getBorderRadius$$() {
    return this.$_borderRadius$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setDataColor$ = function $$dvt$$17$$$$SimpleMarker$$$$setDataColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_dataColor$ = $DvtSvgShadowUtils$$;
    if (!$DvtSvgPatternFillUtils$$) {
      var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SelectionEffectUtils$.$getHoverBorderColor$($DvtSvgShadowUtils$$);
      this.$setHoverStroke$(new $dvt$$17$$.$SolidStroke$("#FFFFFF", 1, 1), new $dvt$$17$$.$SolidStroke$($DvtSvgImageFillUtils$$, 1, 3.5));
      this.$setSelectedStroke$(new $dvt$$17$$.$SolidStroke$("#FFFFFF", 1, 1.5), new $dvt$$17$$.$SolidStroke$("#5A5A5A", 1, 4.5));
      this.$setSelectedHoverStroke$(new $dvt$$17$$.$SolidStroke$("#FFFFFF", 1, 1.5), new $dvt$$17$$.$SolidStroke$($DvtSvgImageFillUtils$$, 1, 4.5));
      this.$HoverInnerStroke$.$setFixedWidth$(!0);
      this.$HoverOuterStroke$.$setFixedWidth$(!0);
      this.$SelectedInnerStroke$.$setFixedWidth$(!0);
      this.$SelectedOuterStroke$.$setFixedWidth$(!0);
      this.$SelectedHoverInnerStroke$.$setFixedWidth$(!0);
      this.$SelectedHoverOuterStroke$.$setFixedWidth$(!0);
    }
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setHollow$ = function $$dvt$$17$$$$SimpleMarker$$$$setHollow$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetStrokeWidth$();
    $dvt$$17$$.$SimpleMarker$.$superclass$.$setHollow$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : 1);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setText$ = function $$dvt$$17$$$$SimpleMarker$$$$setText$$($DvtSvgShadowUtils$$) {
    this.$_markerText$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$setAlpha$ = function $$dvt$$17$$$$SimpleMarker$$$$setAlpha$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$SimpleMarker$.$superclass$.$setAlpha$.call(this, $DvtSvgShadowUtils$$);
    this.$_markerText$ && this.$_markerText$.$setAlpha$($DvtSvgShadowUtils$$);
    this.$UpdateSelectionEffect$();
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$copyShape$ = function $$dvt$$17$$$$SimpleMarker$$$$copyShape$$() {
    return new $dvt$$17$$.$SimpleMarker$(this.$getCtx$(), this.$_shape$, this.$_skin$, this.$getCx$(), this.$getCy$(), this.getWidth(), this.getHeight(), this.$_getBorderRadius$(), this.$_bMaintainAspectRatio$);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$getDimensions$ = function $$dvt$$17$$$$SimpleMarker$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    return this.$getDimensionsSelf$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$SimpleMarker$.prototype.$getDimensionsSelf$ = function $$dvt$$17$$$$SimpleMarker$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getCx$() - this.getWidth() / 2, $DvtSvgImageFillUtils$$ = this.$getCy$() - this.getHeight() / 2, $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Rectangle$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, this.getWidth(), this.getHeight());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$ImageMarker$ = function $$dvt$$17$$$$ImageMarker$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ImageMarker$, $dvt$$17$$.$Shape$);
  $dvt$$17$$.$ImageMarker$.prototype.Init = function $$dvt$$17$$$$ImageMarker$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$, $DvtContextMenuTooltipItem$$) {
    $dvt$$17$$.$ImageMarker$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "image", $DvtContextMenuTooltipItem$$);
    this.$_setMarkerImageStates$($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$);
    this.$_setSource$(this.$_getImage$());
    this.$_propertyChange$ = {};
    this.$setCenter$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, !0).$setSize$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$_updateBorder$($DvtSvgFilterContext$$);
    $dvt$$17$$.$Agent$.$isPlatformIE$() && ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", "#FFFFFF"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill-opacity", "0"));
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setPreserveAspectRatio$ = function $$dvt$$17$$$$ImageMarker$$$$setPreserveAspectRatio$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "preserveAspectRatio", $DvtSvgShadowUtils$$, "xMidYMid");
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setCenterDimensions$ = function $$dvt$$17$$$$ImageMarker$$$$setCenterDimensions$$($DvtSvgShadowUtils$$) {
    return this.$setCenter$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y, !0).$setSize$($DvtSvgShadowUtils$$.$w$, $DvtSvgShadowUtils$$.$h$);
  };
  $dvt$$17$$.$ImageMarker$.prototype.$getCenterDimensions$ = function $$dvt$$17$$$$ImageMarker$$$$getCenterDimensions$$() {
    return new $dvt$$17$$.$Rectangle$(this.$_cx$, this.$_cy$, this.$_width$, this.$_height$);
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setSize$ = function $$dvt$$17$$$$ImageMarker$$$$setSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$setWidth$($DvtSvgShadowUtils$$, !0).$setHeight$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$ImageMarker$.prototype.$getSize$ = function $$dvt$$17$$$$ImageMarker$$$$getSize$$() {
    return Math.max(this.getWidth(), this.getHeight());
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setCenter$ = function $$dvt$$17$$$$ImageMarker$$$$setCenter$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$setCx$($DvtSvgShadowUtils$$, !0).$setCy$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$ImageMarker$.prototype.$_updateSvgProperties$ = function $$dvt$$17$$$$ImageMarker$$$$_updateSvgProperties$$() {
    (this.$_propertyChange$.$cx$ || this.$_propertyChange$.width) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "x", this.$_cx$ - this.$_width$ / 2, 0);
    (this.$_propertyChange$.$cy$ || this.$_propertyChange$.height) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "y", this.$_cy$ - this.$_height$ / 2, 0);
    this.$_propertyChange$.width && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "width", this.$_width$, 0);
    this.$_propertyChange$.height && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "height", this.$_height$, 0);
    this.$_updateBorder$(this.$_borderRadius$);
    this.$UpdateSelectionEffect$();
    this.$_propertyChange$ = {};
    return this;
  };
  $dvt$$17$$.$ImageMarker$.prototype.$getCx$ = function $$dvt$$17$$$$ImageMarker$$$$getCx$$() {
    return this.$_cx$;
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setCx$ = function $$dvt$$17$$$$ImageMarker$$$$setCx$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.$cx$ = this.$_cx$ != $DvtSvgShadowUtils$$;
    this.$_cx$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$();
  };
  $dvt$$17$$.$ImageMarker$.prototype.$getCy$ = function $$dvt$$17$$$$ImageMarker$$$$getCy$$() {
    return this.$_cy$;
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setCy$ = function $$dvt$$17$$$$ImageMarker$$$$setCy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.$cy$ = this.$_cy$ != $DvtSvgShadowUtils$$;
    this.$_cy$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$();
  };
  $dvt$$17$$.$ImageMarker$.prototype.getWidth = function $$dvt$$17$$$$ImageMarker$$$getWidth$() {
    return this.$_width$;
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setWidth$ = function $$dvt$$17$$$$ImageMarker$$$$setWidth$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.width = this.$_width$ != $DvtSvgShadowUtils$$;
    this.$_width$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$();
  };
  $dvt$$17$$.$ImageMarker$.prototype.getHeight = function $$dvt$$17$$$$ImageMarker$$$getHeight$() {
    return this.$_height$;
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setHeight$ = function $$dvt$$17$$$$ImageMarker$$$$setHeight$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_propertyChange$.height = this.$_height$ != $DvtSvgShadowUtils$$;
    this.$_height$ = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$ ? this : this.$_updateSvgProperties$();
  };
  $dvt$$17$$.$ImageMarker$.prototype.$_setSource$ = function $$dvt$$17$$$$ImageMarker$$$$_setSource$$($DvtSvgShadowUtils$$) {
    if ($dvt$$17$$.$Agent$.$isEnvironmentBatik$()) {
      var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$JavaImageLoader$.$getImageInfo$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.uri);
    }
    $dvt$$17$$.$ToolkitUtils$.$setAttrNS$(this.$_elem$, $dvt$$17$$.Image.$XLINK_NS$, "xlink:href", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$ImageMarker$.prototype.$_setMarkerImageStates$ = function $$dvt$$17$$$$ImageMarker$$$$_setMarkerImageStates$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_imageStates$ = [$DvtSvgShadowUtils$$];
    this.$_imageStates$.push($DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgShadowUtils$$);
    this.$_imageStates$.push($DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : $DvtSvgShadowUtils$$);
    this.$_imageStates$.push($DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : this.$_imageStates$[1]);
  };
  $dvt$$17$$.$ImageMarker$.prototype.$_getImage$ = function $$dvt$$17$$$$ImageMarker$$$$_getImage$$() {
    return this.$_imageStates$[0];
  };
  $dvt$$17$$.$ImageMarker$.prototype.$_getImageSelected$ = function $$dvt$$17$$$$ImageMarker$$$$_getImageSelected$$() {
    return this.$_imageStates$[1];
  };
  $dvt$$17$$.$ImageMarker$.prototype.$_getImageHover$ = function $$dvt$$17$$$$ImageMarker$$$$_getImageHover$$() {
    return this.$_imageStates$[2];
  };
  $dvt$$17$$.$ImageMarker$.prototype.$_getImageHoverSelected$ = function $$dvt$$17$$$$ImageMarker$$$$_getImageHoverSelected$$() {
    return this.$_imageStates$[3];
  };
  $dvt$$17$$.$ImageMarker$.prototype.$showHoverEffect$ = function $$dvt$$17$$$$ImageMarker$$$$showHoverEffect$$() {
    this.$IsShowingHoverEffect$ = !0;
    this.$isSelected$() ? this.$_setSource$(this.$_getImageHoverSelected$()) : this.$_setSource$(this.$_getImageHover$());
  };
  $dvt$$17$$.$ImageMarker$.prototype.$hideHoverEffect$ = function $$dvt$$17$$$$ImageMarker$$$$hideHoverEffect$$() {
    this.$IsShowingHoverEffect$ = !1;
    this.$isSelected$() ? this.$_setSource$(this.$_getImageSelected$()) : this.$_setSource$(this.$_getImage$());
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setSelected$ = function $$dvt$$17$$$$ImageMarker$$$$setSelected$$($DvtSvgShadowUtils$$) {
    this.$IsSelected$ != $DvtSvgShadowUtils$$ && ((this.$IsSelected$ = $DvtSvgShadowUtils$$) ? this.$IsShowingHoverEffect$ ? this.$_setSource$(this.$_getImageHoverSelected$()) : this.$_setSource$(this.$_getImageSelected$()) : this.$_setSource$(this.$_getImage$()));
  };
  $dvt$$17$$.$ImageMarker$.prototype.$_updateBorder$ = function $$dvt$$17$$$$ImageMarker$$$$_updateBorder$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ || this.$_borderPath$) {
      if ($DvtSvgShadowUtils$$ && "0" != $DvtSvgShadowUtils$$) {
        var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$PathUtils$.$rectangleWithBorderRadius$(this.$_cx$ - this.$_width$ / 2, this.$_cy$ - this.$_height$ / 2, this.$_width$, this.$_height$, $DvtSvgShadowUtils$$, Math.min(this.$_width$, this.$_height$), "0"), $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$ClipPath$;
        $DvtSvgImageFillUtils$$.$addPath$($DvtSvgPatternFillUtils$$);
        this.$setClipPath$($DvtSvgImageFillUtils$$);
      }
      this.$_borderPath$ && ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$PathUtils$.$rectangleWithBorderRadius$(this.$_cx$ - this.$_width$ / 2 + this.$_borderWidth$ / 2, this.$_cy$ - this.$_height$ / 2 + this.$_borderWidth$ / 2, this.$_width$ - this.$_borderWidth$, this.$_height$ - this.$_borderWidth$, $DvtSvgShadowUtils$$, Math.min(this.$_width$, this.$_height$), "0"), this.$_borderPath$.$setCmds$($DvtSvgPatternFillUtils$$));
    }
    this.$_borderRadius$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ImageMarker$.prototype.$_getBorderRadius$ = function $$dvt$$17$$$$ImageMarker$$$$_getBorderRadius$$() {
    return this.$_borderRadius$;
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setStroke$ = function $$dvt$$17$$$$ImageMarker$$$$setStroke$$($DvtSvgShadowUtils$$) {
    if (!$DvtSvgShadowUtils$$ || 0 >= $DvtSvgShadowUtils$$.getWidth()) {
      this.$_borderWidth$ = 0, this.$_borderPath$ && (this.removeChild(this.$_borderPath$), this.$_borderPath$ = null);
    } else {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getWidth();
      if (!this.$_borderPath$ || $DvtSvgPatternFillUtils$$ != this.$_borderWidth$) {
        var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$PathUtils$.$rectangleWithBorderRadius$(this.$_cx$ - this.$_width$ / 2 + $DvtSvgPatternFillUtils$$ / 2, this.$_cy$ - this.$_height$ / 2 + $DvtSvgPatternFillUtils$$ / 2, this.$_width$ - $DvtSvgPatternFillUtils$$, this.$_height$ - $DvtSvgPatternFillUtils$$, this.$_borderRadius$, Math.min(this.$_width$, this.$_height$), "0");
        this.$_borderPath$ ? this.$_borderPath$.$setCmds$($DvtSvgImageFillUtils$$) : (this.$_borderPath$ = new $dvt$$17$$.$Path$(this.$getCtx$(), $DvtSvgImageFillUtils$$), this.$_borderPath$.$setInvisibleFill$(), this.$addChild$(this.$_borderPath$));
      }
      this.$_borderWidth$ = $DvtSvgPatternFillUtils$$;
      this.$_borderPath$.$setStroke$($DvtSvgShadowUtils$$);
    }
  };
  $dvt$$17$$.$ImageMarker$.prototype.$setHollow$ = function $$dvt$$17$$$$ImageMarker$$$$setHollow$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$17$$.$ImageMarker$.$superclass$.$setHollow$.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    var $DvtSvgImageFillUtils$$ = this.$_bHollow$;
    $DvtSvgImageFillUtils$$ ? (this.$_imageContainer$ = this.$_elem$.parentElement, this.$_imageContainer$.removeChild(this.$_elem$)) : !$DvtSvgImageFillUtils$$ && this.$_imageContainer$ && this.$_imageContainer$.appendChild(this.$_elem$);
  };
  $dvt$$17$$.$ImageMarker$.prototype.$copyShape$ = function $$dvt$$17$$$$ImageMarker$$$$copyShape$$() {
    return new $dvt$$17$$.$ImageMarker$(this.$getCtx$(), this.$getCx$(), this.$getCy$(), this.getWidth(), this.getHeight(), this.$_getBorderRadius$(), this.$_getImage$(), this.$_getImageSelected$(), this.$_getImageHover$(), this.$_getImageHoverSelected$(), null);
  };
  $dvt$$17$$.$Oval$ = function $$dvt$$17$$$$Oval$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Oval$, $DvtCircularShape$$);
  $dvt$$17$$.$Oval$.prototype.Init = function $$dvt$$17$$$$Oval$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$17$$.$Oval$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "ellipse", $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterContext$$);
    this.$setRx$($DvtSvgGradientUtils$$).$setRy$($DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Oval$.prototype.$getRx$ = function $$dvt$$17$$$$Oval$$$$getRx$$() {
    return this.$GetProperty$("rx");
  };
  $dvt$$17$$.$Oval$.prototype.$setRx$ = function $$dvt$$17$$$$Oval$$$$setRx$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("rx", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Oval$.prototype.$getRy$ = function $$dvt$$17$$$$Oval$$$$getRy$$() {
    return this.$GetProperty$("ry");
  };
  $dvt$$17$$.$Oval$.prototype.$setRy$ = function $$dvt$$17$$$$Oval$$$$setRy$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("ry", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Oval$.prototype.$copyShape$ = function $$dvt$$17$$$$Oval$$$$copyShape$$() {
    return new $dvt$$17$$.$Oval$(this.$getCtx$(), this.$getCx$(), this.$getCy$(), this.$getRx$(), this.$getRy$());
  };
  $dvt$$17$$.$Oval$.prototype.$getDimensionsSelf$ = function $$dvt$$17$$$$Oval$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    return this.$ConvertCoordSpaceRect$(new $dvt$$17$$.$Rectangle$(this.$getCx$() - this.$getRx$(), this.$getCy$() - this.$getRy$(), 2 * this.$getRx$(), 2 * this.$getRy$()), $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Path$ = function $$dvt$$17$$$$Path$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Path$, $dvt$$17$$.$Shape$);
  $dvt$$17$$.$Path$.prototype.Init = function $$dvt$$17$$$$Path$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$Path$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "path", $DvtSvgImageFillUtils$$);
    $dvt$$17$$.$ArrayUtils$.isArray($DvtSvgPatternFillUtils$$) ? this.$setCmds$($dvt$$17$$.$PathUtils$.$getPathString$($DvtSvgPatternFillUtils$$)) : this.$setCmds$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Path$.prototype.$getCmds$ = function $$dvt$$17$$$$Path$$$$getCmds$$() {
    return this.$GetProperty$("d");
  };
  $dvt$$17$$.$Path$.prototype.$setCmds$ = function $$dvt$$17$$$$Path$$$$setCmds$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && this.$SetSvgProperty$("d", $DvtSvgShadowUtils$$);
    this.$SetProperty$("arCmds", null);
    return this;
  };
  $dvt$$17$$.$Path$.prototype.$getCommands$ = function $$dvt$$17$$$$Path$$$$getCommands$$() {
    var $DvtSvgShadowUtils$$ = this.$GetProperty$("arCmds");
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$GetProperty$("d") ? $dvt$$17$$.$PathUtils$.$createPathArray$(this.$GetProperty$("d")) : null, this.$SetProperty$("arCmds", $DvtSvgShadowUtils$$));
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Path$.prototype.$setCommands$ = function $$dvt$$17$$$$Path$$$$setCommands$$($DvtSvgShadowUtils$$) {
    this.$setCmds$($DvtSvgShadowUtils$$ ? $dvt$$17$$.$PathUtils$.$getPathString$($DvtSvgShadowUtils$$) : null);
    this.$SetProperty$("arCmds", $DvtSvgShadowUtils$$);
    return this;
  };
  $dvt$$17$$.$Path$.prototype.$copyShape$ = function $$dvt$$17$$$$Path$$$$copyShape$$() {
    return new $dvt$$17$$.$Path$(this.$getCtx$(), this.$getCmds$());
  };
  $dvt$$17$$.$Path$.prototype.$GetAriaElem$ = function $$dvt$$17$$$$Path$$$$GetAriaElem$$() {
    $dvt$$17$$.$Agent$.$isTouchDevice$() && this.$CreateChildGroupElem$(!1, !0);
    return $dvt$$17$$.$Path$.$superclass$.$GetAriaElem$.call(this);
  };
  $dvt$$17$$.$Polygon$ = function $$dvt$$17$$$$Polygon$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Polygon$, $DvtPolygonalShape$$);
  $dvt$$17$$.$Polygon$.prototype.Init = function $$dvt$$17$$$$Polygon$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$Polygon$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "polygon", $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Polygon$.prototype.$copyShape$ = function $$dvt$$17$$$$Polygon$$$$copyShape$$() {
    return new $dvt$$17$$.$Polygon$(this.$getCtx$(), this.$getPoints$());
  };
  $dvt$$17$$.$Polygon$.prototype.$GetAriaElem$ = function $$dvt$$17$$$$Polygon$$$$GetAriaElem$$() {
    $dvt$$17$$.$Agent$.$isTouchDevice$() && this.$CreateChildGroupElem$(!1, !0);
    return $dvt$$17$$.$Polygon$.$superclass$.$GetAriaElem$.call(this);
  };
  $dvt$$17$$.$Polyline$ = function $$dvt$$17$$$$Polyline$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Polyline$, $DvtPolygonalShape$$);
  $dvt$$17$$.$Polyline$.prototype.Init = function $$dvt$$17$$$$Polyline$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$Polyline$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "polyline", $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$_elem$, "fill", "none");
  };
  $dvt$$17$$.$Polyline$.prototype.$copyShape$ = function $$dvt$$17$$$$Polyline$$$$copyShape$$() {
    return new $dvt$$17$$.$Polyline$(this.$getCtx$(), this.$getPoints$());
  };
  $dvt$$17$$.Rect = function $$dvt$$17$$$Rect$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.Rect, $dvt$$17$$.$Shape$);
  $dvt$$17$$.Rect.$_cssAttrs$ = ["background-color", "border-color", "border-width"];
  $dvt$$17$$.Rect.prototype.Init = function $$dvt$$17$$$Rect$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$17$$.Rect.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "rect", $DvtSvgFilterContext$$);
    this.$setX$($DvtSvgPatternFillUtils$$).$setY$($DvtSvgImageFillUtils$$).$setWidth$($DvtSvgGradientUtils$$).$setHeight$($DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.Rect.prototype.$getX$ = function $$dvt$$17$$$Rect$$$getX$$() {
    return this.$GetProperty$("x");
  };
  $dvt$$17$$.Rect.prototype.$setX$ = function $$dvt$$17$$$Rect$$$setX$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("x", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.Rect.prototype.$getY$ = function $$dvt$$17$$$Rect$$$getY$$() {
    return this.$GetProperty$("y");
  };
  $dvt$$17$$.Rect.prototype.$setY$ = function $$dvt$$17$$$Rect$$$setY$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.Rect.prototype.getWidth = function $$dvt$$17$$$Rect$$getWidth$() {
    return this.$GetProperty$("width");
  };
  $dvt$$17$$.Rect.prototype.$setWidth$ = function $$dvt$$17$$$Rect$$$setWidth$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("width", null != $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0);
  };
  $dvt$$17$$.Rect.prototype.getHeight = function $$dvt$$17$$$Rect$$getHeight$() {
    return this.$GetProperty$("height");
  };
  $dvt$$17$$.Rect.prototype.$setHeight$ = function $$dvt$$17$$$Rect$$$setHeight$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("height", null != $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0);
  };
  $dvt$$17$$.Rect.prototype.$getRx$ = function $$dvt$$17$$$Rect$$$getRx$$() {
    return this.$GetProperty$("rx");
  };
  $dvt$$17$$.Rect.prototype.$setRx$ = function $$dvt$$17$$$Rect$$$setRx$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("rx", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Rect.prototype.$getRy$ = function $$dvt$$17$$$Rect$$$getRy$$() {
    return this.$GetProperty$("ry");
  };
  $dvt$$17$$.Rect.prototype.$setRy$ = function $$dvt$$17$$$Rect$$$setRy$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("ry", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.Rect.prototype.$setCSSStyle$ = function $$dvt$$17$$$Rect$$$setCSSStyle$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.Rect.$superclass$.$setCSSStyle$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$_elem$;
    if ($DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("background-color");
      $DvtSvgImageFillUtils$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("border-color")) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("border-width")) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "stroke-width", $DvtSvgImageFillUtils$$);
      if ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("border-radius")) {
        $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgImageFillUtils$$).split(" "), 0 < $DvtSvgShadowUtils$$.length && $DvtSvgShadowUtils$$[0] && this.$setRx$($DvtSvgShadowUtils$$[0]), 1 < $DvtSvgShadowUtils$$.length && $DvtSvgShadowUtils$$[1] && this.$setRy$($DvtSvgShadowUtils$$[1]);
      }
    } else {
      $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$_elem$, "style");
    }
  };
  $dvt$$17$$.Rect.prototype.$setPos$ = function $$dvt$$17$$$Rect$$$setPos$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$setX$($DvtSvgShadowUtils$$).$setY$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.Rect.prototype.$setCornerRadius$ = function $$dvt$$17$$$Rect$$$setCornerRadius$$($DvtSvgShadowUtils$$) {
    this.$setRx$($DvtSvgShadowUtils$$).$setRy$(void 0);
  };
  $dvt$$17$$.Rect.prototype.$setRect$ = function $$dvt$$17$$$Rect$$$setRect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$Rectangle$ ? this.$setX$($DvtSvgShadowUtils$$.x).$setY$($DvtSvgShadowUtils$$.y).$setWidth$($DvtSvgShadowUtils$$.$w$).$setHeight$($DvtSvgShadowUtils$$.$h$) : this.$setX$($DvtSvgShadowUtils$$).$setY$($DvtSvgPatternFillUtils$$).$setWidth$($DvtSvgImageFillUtils$$).$setHeight$($DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.Rect.prototype.$copyShape$ = function $$dvt$$17$$$Rect$$$copyShape$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.Rect(this.$getCtx$(), this.$getX$(), this.$getY$(), this.getWidth(), this.getHeight());
    $DvtSvgShadowUtils$$.$setRx$(this.$getRx$()).$setRy$(this.$getRy$());
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.Rect.prototype.$getDimensionsSelf$ = function $$dvt$$17$$$Rect$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Rectangle$(this.$getX$(), this.$getY$(), this.getWidth(), this.getHeight());
    return this.$ConvertCoordSpaceRect$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$OutputText$ = function $$dvt$$17$$$$OutputText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$OutputText$, $dvt$$17$$.$Shape$);
  $dvt$$17$$.$OutputText$.$ELLIPSIS$ = "\u2026";
  $dvt$$17$$.$OutputText$.$REPRESENTATIVE_TEXT$ = "MW";
  $dvt$$17$$.$OutputText$.$BIDI_ZERO_WIDTH$ = "\u200b";
  $dvt$$17$$.$OutputText$.$H_ALIGN_LEFT$ = "left";
  $dvt$$17$$.$OutputText$.$H_ALIGN_CENTER$ = "center";
  $dvt$$17$$.$OutputText$.$H_ALIGN_RIGHT$ = "right";
  $dvt$$17$$.$OutputText$.$V_ALIGN_TOP$ = "top";
  $dvt$$17$$.$OutputText$.$V_ALIGN_MIDDLE$ = "middle";
  $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$ = "bottom";
  $dvt$$17$$.$OutputText$.$V_ALIGN_AUTO$ = "auto";
  $dvt$$17$$.$OutputText$.prototype.Init = function $$dvt$$17$$$$OutputText$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$17$$.$OutputText$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "text", $DvtSvgFilterUtils$$);
    this.$_x$ = null != $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : 0;
    this.$_baseline$ = !1;
    $dvt$$17$$.$Agent$.$isRightToLeft$($DvtSvgShadowUtils$$) && $dvt$$17$$.$Agent$.$isPlatformIE$() && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "unicode-bidi", "embed");
    this.$alignLeft$();
    this.$alignTop$();
    this.$setTextString$($DvtSvgPatternFillUtils$$);
    this.$setX$($DvtSvgImageFillUtils$$);
    this.$setY$($DvtSvgGradientUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getElem$(), "fill");
    this.$setAriaProperty$("hidden", "true");
  };
  $dvt$$17$$.$OutputText$.prototype.$getTextString$ = function $$dvt$$17$$$$OutputText$$$$getTextString$$() {
    return this.$_textString$;
  };
  $dvt$$17$$.$OutputText$.prototype.$setTextString$ = function $$dvt$$17$$$$OutputText$$$$setTextString$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = null != $DvtSvgShadowUtils$$ ? $dvt$$17$$.$StringUtils$.trim(String($DvtSvgShadowUtils$$)) : "";
    $dvt$$17$$.$OutputText$.$needsTextAnchorAdjustment$() && $dvt$$17$$.$Agent$.$isPlatformIE$() && $DvtSvgShadowUtils$$.charAt(0) != $dvt$$17$$.$OutputText$.$BIDI_ZERO_WIDTH$ && ($DvtSvgShadowUtils$$ = $dvt$$17$$.$OutputText$.$BIDI_ZERO_WIDTH$ + $DvtSvgShadowUtils$$);
    this.$_textString$ = $DvtSvgShadowUtils$$;
    var $DvtSvgPatternFillUtils$$ = this.$getElem$().firstChild;
    null !== $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$.nodeValue = $DvtSvgShadowUtils$$ : ($DvtSvgPatternFillUtils$$ = document.createTextNode($DvtSvgShadowUtils$$), $dvt$$17$$.$ToolkitUtils$.$appendChildElem$(this.$getElem$(), $DvtSvgPatternFillUtils$$));
    $dvt$$17$$.$Agent$.$isPlatformIE$() && this.$setX$(this.$_x$);
    return this;
  };
  $dvt$$17$$.$OutputText$.prototype.$isTruncated$ = function $$dvt$$17$$$$OutputText$$$$isTruncated$$() {
    return null != this.$getUntruncatedTextString$();
  };
  $dvt$$17$$.$OutputText$.prototype.$getUntruncatedTextString$ = function $$dvt$$17$$$$OutputText$$$$getUntruncatedTextString$$() {
    return this.$_untruncatedTextString$;
  };
  $dvt$$17$$.$OutputText$.prototype.$setUntruncatedTextString$ = function $$dvt$$17$$$$OutputText$$$$setUntruncatedTextString$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ != this.$getTextString$() && (this.$_untruncatedTextString$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$OutputText$.prototype.$getX$ = function $$dvt$$17$$$$OutputText$$$$getX$$() {
    var $DvtSvgShadowUtils$$;
    return ($DvtSvgShadowUtils$$ = $dvt$$17$$.$Agent$.$isPlatformIE$() ? this.$_x$ : this.$GetProperty$("x")) ? $DvtSvgShadowUtils$$ : 0;
  };
  $dvt$$17$$.$OutputText$.prototype.$setX$ = function $$dvt$$17$$$$OutputText$$$$setX$$($DvtSvgShadowUtils$$) {
    this.$_x$ = null != $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0;
    return $dvt$$17$$.$Agent$.$isPlatformIE$() ? this.$SetSvgProperty$("x", this.$_x$ + this.$_getIEAlignmentOffset$(), 0) : this.$SetSvgProperty$("x", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.$OutputText$.prototype.$_getIEAlignmentOffset$ = function $$dvt$$17$$$$OutputText$$$$_getIEAlignmentOffset$$() {
    var $DvtSvgShadowUtils$$ = this.$getHorizAlignment$(), $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Agent$.$isRightToLeft$();
    if ($DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$H_ALIGN_LEFT$) {
      return $DvtSvgPatternFillUtils$$ ? this.$measureDimensions$().$w$ : 0;
    }
    if ($DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$H_ALIGN_CENTER$) {
      return $DvtSvgPatternFillUtils$$ ? this.$measureDimensions$().$w$ / 2 : -this.$measureDimensions$().$w$ / 2;
    }
    if ($DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$H_ALIGN_RIGHT$) {
      return $DvtSvgPatternFillUtils$$ ? 0 : -this.$measureDimensions$().$w$;
    }
  };
  $dvt$$17$$.$OutputText$.prototype.$getY$ = function $$dvt$$17$$$$OutputText$$$$getY$$() {
    var $DvtSvgShadowUtils$$ = this.$GetProperty$("y");
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : 0;
  };
  $dvt$$17$$.$OutputText$.prototype.$setY$ = function $$dvt$$17$$$$OutputText$$$$setY$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.$OutputText$.prototype.$setFontSize$ = function $$dvt$$17$$$$OutputText$$$$setFontSize$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getCSSStyle$(), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$.clone() : new $dvt$$17$$.$CSSStyle$;
    $DvtSvgPatternFillUtils$$.$setFontSize$($dvt$$17$$.$CSSStyle$.$FONT_SIZE$, String($DvtSvgShadowUtils$$));
    this.$setCSSStyle$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$OutputText$.prototype.$getHorizAlignment$ = function $$dvt$$17$$$$OutputText$$$$getHorizAlignment$$() {
    return this.$_horizAlign$;
  };
  $dvt$$17$$.$OutputText$.prototype.$setHorizAlignment$ = function $$dvt$$17$$$$OutputText$$$$setHorizAlignment$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$H_ALIGN_LEFT$ ? this.$alignLeft$() : $DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$H_ALIGN_CENTER$ ? this.$alignCenter$() : $DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$H_ALIGN_RIGHT$ && this.$alignRight$();
  };
  $dvt$$17$$.$OutputText$.prototype.$getVertAlignment$ = function $$dvt$$17$$$$OutputText$$$$getVertAlignment$$() {
    return this.$_vertAlign$;
  };
  $dvt$$17$$.$OutputText$.prototype.$setVertAlignment$ = function $$dvt$$17$$$$OutputText$$$$setVertAlignment$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_TOP$ ? this.$alignTop$() : $DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_MIDDLE$ ? this.$alignMiddle$() : $DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$ ? this.$alignBottom$() : $DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_AUTO$ && this.$alignAuto$();
  };
  $dvt$$17$$.$OutputText$.prototype.$alignLeft$ = function $$dvt$$17$$$$OutputText$$$$alignLeft$$() {
    if (this.$_horizAlign$ != $dvt$$17$$.$OutputText$.$H_ALIGN_LEFT$) {
      if (this.$_horizAlign$ = $dvt$$17$$.$OutputText$.$H_ALIGN_LEFT$, $dvt$$17$$.$Agent$.$isPlatformIE$()) {
        this.$setX$(this.$_x$);
      } else {
        var $DvtSvgShadowUtils$$ = $dvt$$17$$.$OutputText$.$needsTextAnchorAdjustment$();
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "text-anchor", $DvtSvgShadowUtils$$ ? "end" : "start", "start");
      }
    }
  };
  $dvt$$17$$.$OutputText$.prototype.$alignCenter$ = function $$dvt$$17$$$$OutputText$$$$alignCenter$$() {
    this.$_horizAlign$ != $dvt$$17$$.$OutputText$.$H_ALIGN_CENTER$ && (this.$_horizAlign$ = $dvt$$17$$.$OutputText$.$H_ALIGN_CENTER$, $dvt$$17$$.$Agent$.$isPlatformIE$() ? this.$setX$(this.$_x$) : $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "text-anchor", "middle", "start"));
  };
  $dvt$$17$$.$OutputText$.prototype.$alignRight$ = function $$dvt$$17$$$$OutputText$$$$alignRight$$() {
    if (this.$_horizAlign$ != $dvt$$17$$.$OutputText$.$H_ALIGN_RIGHT$) {
      if (this.$_horizAlign$ = $dvt$$17$$.$OutputText$.$H_ALIGN_RIGHT$, $dvt$$17$$.$Agent$.$isPlatformIE$()) {
        this.$setX$(this.$_x$);
      } else {
        var $DvtSvgShadowUtils$$ = $dvt$$17$$.$OutputText$.$needsTextAnchorAdjustment$();
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "text-anchor", $DvtSvgShadowUtils$$ ? "start" : "end", "start");
      }
    }
  };
  $dvt$$17$$.$OutputText$.prototype.$alignTop$ = function $$dvt$$17$$$$OutputText$$$$alignTop$$() {
    this.$_vertAlign$ != $dvt$$17$$.$OutputText$.$V_ALIGN_TOP$ && (this.$_vertAlign$ == $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$ && $dvt$$17$$.$Agent$.$isBrowserSafari$() && this.$_setBaseline$(!1), this.$_vertAlign$ = $dvt$$17$$.$OutputText$.$V_ALIGN_TOP$, $dvt$$17$$.$Agent$.$isPlatformIE$() ? this.$_setBaseline$(!0) : this.$SetDominantBaselineAttr$("text-before-edge"));
  };
  $dvt$$17$$.$OutputText$.prototype.$alignMiddle$ = function $$dvt$$17$$$$OutputText$$$$alignMiddle$$() {
    this.$_vertAlign$ != $dvt$$17$$.$OutputText$.$V_ALIGN_MIDDLE$ && (this.$_vertAlign$ == $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$ && $dvt$$17$$.$Agent$.$isBrowserSafari$() && this.$_setBaseline$(!1), this.$_vertAlign$ = $dvt$$17$$.$OutputText$.$V_ALIGN_MIDDLE$, $dvt$$17$$.$Agent$.$isPlatformIE$() ? this.$_setBaseline$(!0) : this.$SetDominantBaselineAttr$("middle"));
  };
  $dvt$$17$$.$OutputText$.prototype.$alignBottom$ = function $$dvt$$17$$$$OutputText$$$$alignBottom$$() {
    this.$_vertAlign$ != $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$ && (this.$_vertAlign$ = $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$, $dvt$$17$$.$Agent$.$isPlatformIE$() ? this.$_setBaseline$(!0) : $dvt$$17$$.$Agent$.$isBrowserSafari$() ? (this.$_setBaseline$(!0), this.$SetDominantBaselineAttr$(null)) : this.$SetDominantBaselineAttr$("text-after-edge"));
  };
  $dvt$$17$$.$OutputText$.prototype.$alignAuto$ = function $$dvt$$17$$$$OutputText$$$$alignAuto$$() {
    this.$_vertAlign$ != $dvt$$17$$.$OutputText$.$V_ALIGN_AUTO$ && (this.$_vertAlign$ == $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$ && $dvt$$17$$.$Agent$.$isBrowserSafari$() && this.$_setBaseline$(!1), this.$_vertAlign$ = $dvt$$17$$.$OutputText$.$V_ALIGN_AUTO$, $dvt$$17$$.$Agent$.$isPlatformIE$() ? this.$_setBaseline$(!1) : this.$SetDominantBaselineAttr$(null));
  };
  $dvt$$17$$.$OutputText$.prototype.$_setBaseline$ = function $$dvt$$17$$$$OutputText$$$$_setBaseline$$($DvtSvgShadowUtils$$) {
    this.$_baseline$ = $DvtSvgShadowUtils$$;
    this.$setMatrix$(this.$getMatrix$());
  };
  $dvt$$17$$.$OutputText$.prototype.$SetDominantBaselineAttr$ = function $$dvt$$17$$$$OutputText$$$$SetDominantBaselineAttr$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ ? $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$(this.$getElem$(), "dominant-baseline", $DvtSvgShadowUtils$$) : $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$(this.$getElem$(), "dominant-baseline");
  };
  $dvt$$17$$.$OutputText$.prototype.$setCSSStyle$ = function $$dvt$$17$$$$OutputText$$$$setCSSStyle$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$OutputText$.$superclass$.$setCSSStyle$.call(this, $DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$getOuterElem$();
    if ($DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("color");
      ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$ColorUtils$.$fixColorForPlatform$($DvtSvgImageFillUtils$$)) && $DvtSvgImageFillUtils$$.color && ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill", $DvtSvgImageFillUtils$$.color), null != $DvtSvgImageFillUtils$$.alpha && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "fill-opacity", $DvtSvgImageFillUtils$$.alpha, 1));
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("font-family")) && !this.$getCtx$().$isDefaultFontFamily$($DvtSvgImageFillUtils$$) ? $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "font-family", $DvtSvgImageFillUtils$$) : $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgPatternFillUtils$$, "font-family");
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("font-size")) && $DvtSvgImageFillUtils$$ != this.$getCtx$().$_defaultFontSize$ ? ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "font-size", $DvtSvgImageFillUtils$$), ($dvt$$17$$.$Agent$.$isPlatformIE$() || $dvt$$17$$.$Agent$.$isBrowserSafari$()) && this.$setMatrix$(this.$getMatrix$())) : $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$($DvtSvgPatternFillUtils$$, "font-size");
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("font-style")) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "font-style", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("font-weight")) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "font-weight", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("text-decoration")) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "text-decoration", $DvtSvgImageFillUtils$$);
      ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getStyle$("cursor")) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "cursor", $DvtSvgImageFillUtils$$);
      $dvt$$17$$.$Agent$.$isPlatformIE$() && this.$setX$(this.$_x$);
    }
  };
  $dvt$$17$$.$OutputText$.prototype.$_getBaselineTranslation$ = function $$dvt$$17$$$$OutputText$$$$_getBaselineTranslation$$() {
    if (this.$_baseline$) {
      if (this.$_textString$ && !this.$_isRepresentativeText$()) {
        return $dvt$$17$$.$TextUtils$.$getBaselineTranslation$(this);
      }
      var $DvtSvgShadowUtils$$ = this.$getVertAlignment$();
      if ($DvtSvgShadowUtils$$ != $dvt$$17$$.$OutputText$.$V_ALIGN_AUTO$) {
        var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$(this.$getElem$(), "font-size");
        $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$(this.$getOuterElem$(), "font-size"));
        if (!$DvtSvgPatternFillUtils$$ || isNaN($DvtSvgPatternFillUtils$$) && -1 == $DvtSvgPatternFillUtils$$.indexOf("px")) {
          $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$StyleUtils$.$DEFAULT_FONT_SIZE$;
        }
        $DvtSvgPatternFillUtils$$ = parseFloat($DvtSvgPatternFillUtils$$);
        if ($DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_TOP$) {
          return .8 * $DvtSvgPatternFillUtils$$;
        }
        if ($DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_MIDDLE$) {
          return .3 * $DvtSvgPatternFillUtils$$;
        }
        if ($DvtSvgShadowUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$) {
          return -.2 * $DvtSvgPatternFillUtils$$;
        }
      }
    }
    return 0;
  };
  $dvt$$17$$.$OutputText$.prototype.$_getBaselineAdjustedMatrix$ = function $$dvt$$17$$$$OutputText$$$$_getBaselineAdjustedMatrix$$($DvtSvgShadowUtils$$) {
    if (this.$_baseline$) {
      $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = new $dvt$$17$$.$Matrix$);
      var $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Matrix$(null, null, null, null, null, this.$_getBaselineTranslation$());
      $DvtSvgPatternFillUtils$$.concat($DvtSvgShadowUtils$$);
      $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$;
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$OutputText$.prototype.$setMatrix$ = function $$dvt$$17$$$$OutputText$$$$setMatrix$$($DvtSvgShadowUtils$$) {
    if ($dvt$$17$$.$Agent$.$isPlatformIE$() || $dvt$$17$$.$Agent$.$isBrowserSafari$()) {
      this.$_matrixForIE$ = $DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$ = this.$_getBaselineAdjustedMatrix$($DvtSvgShadowUtils$$);
    }
    $dvt$$17$$.$OutputText$.$superclass$.$setMatrix$.call(this, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$OutputText$.prototype.$getMatrix$ = function $$dvt$$17$$$$OutputText$$$$getMatrix$$() {
    var $DvtSvgShadowUtils$$ = null;
    if ($dvt$$17$$.$Agent$.$isPlatformIE$() || $dvt$$17$$.$Agent$.$isBrowserSafari$()) {
      $DvtSvgShadowUtils$$ = this.$_matrixForIE$;
    }
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = $dvt$$17$$.$OutputText$.$superclass$.$getMatrix$.call(this));
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$OutputText$.prototype.$_isRepresentativeText$ = function $$dvt$$17$$$$OutputText$$$$_isRepresentativeText$$() {
    return this.$_textString$ == $dvt$$17$$.$OutputText$.$REPRESENTATIVE_TEXT$ || this.$_textString$ == $dvt$$17$$.$OutputText$.$BIDI_ZERO_WIDTH$ || this.$_textString$ == $dvt$$17$$.$OutputText$.$BIDI_ZERO_WIDTH$ + $dvt$$17$$.$OutputText$.$REPRESENTATIVE_TEXT$;
  };
  $dvt$$17$$.$OutputText$.prototype.$GetSvgDimensions$ = function $$dvt$$17$$$$OutputText$$$$GetSvgDimensions$$() {
    var $DvtSvgShadowUtils$$ = $dvt$$17$$.$OutputText$.$superclass$.$GetSvgDimensions$.call(this);
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.y += this.$_getBaselineTranslation$(), this.$_isRepresentativeText$() || ($DvtSvgShadowUtils$$.$h$ = $dvt$$17$$.$TextUtils$.$getTextStringHeight$(this.$getCtx$(), this.$getCSSStyle$())));
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$OutputText$.prototype.$UpdateSelectionEffect$ = function $$dvt$$17$$$$OutputText$$$$UpdateSelectionEffect$$() {
  };
  $dvt$$17$$.$OutputText$.prototype.$getOptimalFontSize$ = function $$dvt$$17$$$$OutputText$$$$getOptimalFontSize$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = Math.max(Math.min($DvtSvgShadowUtils$$.$w$ / this.$getTextString$().length, $DvtSvgShadowUtils$$.$h$ / 2), 9);51 > $DvtSvgPatternFillUtils$$;$DvtSvgPatternFillUtils$$ += 1) {
      this.$setFontSize$($DvtSvgPatternFillUtils$$);
      var $DvtSvgImageFillUtils$$ = this.$measureDimensions$();
      if ($DvtSvgImageFillUtils$$.$w$ > $DvtSvgShadowUtils$$.$w$ || $DvtSvgImageFillUtils$$.$h$ > $DvtSvgShadowUtils$$.$h$) {
        return Math.min($DvtSvgPatternFillUtils$$ - 1, 50);
      }
    }
    return 50;
  };
  $dvt$$17$$.$OutputText$.prototype.$measureDimensions$ = function $$dvt$$17$$$$OutputText$$$$measureDimensions$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = null != this.$getTextString$() ? this.$getTextString$() : "", $DvtSvgImageFillUtils$$ = this.$getHorizAlignment$(), $DvtSvgGradientUtils$$ = this.$getVertAlignment$();
    $dvt$$17$$.$OutputText$.$_cache$ || ($dvt$$17$$.$OutputText$.$_cache$ = new $dvt$$17$$.Cache);
    var $DvtSvgFilterUtils$$ = this.$getCSSStyle$(), $DvtSvgFilterUtils$$ = null != $DvtSvgFilterUtils$$ ? $DvtSvgFilterUtils$$.$hashCodeForTextMeasurement$() : "", $DvtSvgFilterUtils$$ = 0 < $DvtSvgPatternFillUtils$$.length ? $DvtSvgPatternFillUtils$$ + $DvtSvgFilterUtils$$ : "", $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = $dvt$$17$$.$OutputText$.$_cache$.get($DvtSvgFilterUtils$$);
    if (null != $DvtSvgImplFactory$$) {
      $DvtSvgFilterContext$$ = new $dvt$$17$$.$Rectangle$($DvtSvgImplFactory$$.x + this.$getX$(), $DvtSvgImplFactory$$.y + this.$getY$(), $DvtSvgImplFactory$$.$w$, $DvtSvgImplFactory$$.$h$);
    } else {
      $dvt$$17$$.$Agent$.$isPlatformIE$() || this.$alignLeft$();
      this.$alignAuto$();
      for (var $DvtHtmlRichTooltipManager$$ = !1, $DvtSvgImplFactory$$ = this.$getCtx$().$_stage$, $DvtDomXmlParser$$ = this.getParent();$DvtDomXmlParser$$;) {
        if ($DvtDomXmlParser$$ == $DvtSvgImplFactory$$) {
          $DvtHtmlRichTooltipManager$$ = !0;
          break;
        }
        $DvtDomXmlParser$$ = $DvtDomXmlParser$$.getParent();
      }
      $DvtHtmlRichTooltipManager$$ && ($DvtSvgFilterContext$$ = this.$GetSvgDimensions$());
      $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = new $dvt$$17$$.$Rectangle$(0, 0, 0, 0));
      if (0 >= $DvtSvgFilterContext$$.$w$ && 0 >= $DvtSvgFilterContext$$.$h$ && 0 < $DvtSvgPatternFillUtils$$.length) {
        var $DvtSvgPatternFillUtils$$ = this.getParent(), $DvtCustomTooltipItem$$;
        $DvtSvgPatternFillUtils$$ && ($DvtCustomTooltipItem$$ = $DvtSvgPatternFillUtils$$.$getChildIndex$(this));
        $DvtSvgImplFactory$$.$addChild$(this);
        $DvtSvgFilterContext$$ = this.$GetSvgDimensions$();
        $DvtSvgImplFactory$$.removeChild(this);
        $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$addChildAt$(this, $DvtCustomTooltipItem$$);
      }
      $dvt$$17$$.$Agent$.$isPlatformIE$() ? $DvtSvgImageFillUtils$$ === $dvt$$17$$.$OutputText$.$H_ALIGN_RIGHT$ ? $DvtSvgFilterContext$$.x += $DvtSvgFilterContext$$.$w$ : $DvtSvgImageFillUtils$$ === $dvt$$17$$.$OutputText$.$H_ALIGN_CENTER$ && ($DvtSvgFilterContext$$.x += $DvtSvgFilterContext$$.$w$ / 2) : this.$setHorizAlignment$($DvtSvgImageFillUtils$$);
      this.$setVertAlignment$($DvtSvgGradientUtils$$);
      $DvtSvgImplFactory$$ = new $dvt$$17$$.$Rectangle$(0, $DvtSvgFilterContext$$.y - this.$getY$(), $DvtSvgFilterContext$$.$w$, $DvtSvgFilterContext$$.$h$);
      $dvt$$17$$.$OutputText$.$_cache$.put($DvtSvgFilterUtils$$, $DvtSvgImplFactory$$);
      $DvtSvgFilterContext$$.x = this.$getX$();
    }
    $DvtSvgImageFillUtils$$ === $dvt$$17$$.$OutputText$.$H_ALIGN_RIGHT$ ? $DvtSvgFilterContext$$.x -= $DvtSvgFilterContext$$.$w$ : $DvtSvgImageFillUtils$$ === $dvt$$17$$.$OutputText$.$H_ALIGN_CENTER$ && ($DvtSvgFilterContext$$.x -= $DvtSvgFilterContext$$.$w$ / 2);
    $DvtSvgGradientUtils$$ === $dvt$$17$$.$OutputText$.$V_ALIGN_TOP$ ? $DvtSvgFilterContext$$.y -= $DvtSvgImplFactory$$.y : $DvtSvgGradientUtils$$ === $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$ ? $DvtSvgFilterContext$$.y -= $DvtSvgImplFactory$$.y + $DvtSvgImplFactory$$.$h$ : $DvtSvgGradientUtils$$ === $dvt$$17$$.$OutputText$.$V_ALIGN_MIDDLE$ && ($DvtSvgFilterContext$$.y -= $DvtSvgImplFactory$$.y + $DvtSvgImplFactory$$.$h$ / 2);
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ !== this ? this.$ConvertCoordSpaceRect$($DvtSvgFilterContext$$, $DvtSvgShadowUtils$$) : $DvtSvgFilterContext$$;
  };
  $dvt$$17$$.$OutputText$.prototype.$copyShape$ = function $$dvt$$17$$$$OutputText$$$$copyShape$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$OutputText$(this.$getCtx$(), this.$getTextString$(), this.$getX$(), this.$getY$());
    $DvtSvgShadowUtils$$.$setCSSStyle$(this.$getCSSStyle$());
    $DvtSvgShadowUtils$$.$setHorizAlignment$(this.$getHorizAlignment$());
    $DvtSvgShadowUtils$$.$setVertAlignment$(this.$getVertAlignment$());
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$OutputText$.prototype.$addChild$ = function $$dvt$$17$$$$OutputText$$$$addChild$$() {
    $dvt$$17$$.$Agent$.$isEnvironmentTest$() && (print("dvt.OutputText.prototype.addChild: Text should not be used as a shape container."), null.$errorShouldOccurDueToInvalidAddChild$());
  };
  $dvt$$17$$.$OutputText$.$needsTextAnchorAdjustment$ = function $$dvt$$17$$$$OutputText$$$needsTextAnchorAdjustment$$() {
    return $dvt$$17$$.$Agent$.$isRightToLeft$() && !$dvt$$17$$.$Agent$.$isEnvironmentBatik$();
  };
  $dvt$$17$$.$OutputText$.prototype.$getDimensionsSelf$ = function $$dvt$$17$$$$OutputText$$$$getDimensionsSelf$$($DvtSvgShadowUtils$$) {
    return this.$measureDimensions$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$OutputText$.$getCachedDimensions$ = function $$dvt$$17$$$$OutputText$$$getCachedDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = null != $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$.$hashCodeForTextMeasurement$() : "", $DvtSvgImageFillUtils$$ = 0 < $DvtSvgShadowUtils$$.length ? $DvtSvgShadowUtils$$ + $DvtSvgImageFillUtils$$ : "";
    return $dvt$$17$$.$OutputText$.$_cache$ ? $dvt$$17$$.$OutputText$.$_cache$.get($DvtSvgImageFillUtils$$) : null;
  };
  $dvt$$17$$.$BackgroundOutputText$ = function $$dvt$$17$$$$BackgroundOutputText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$BackgroundOutputText$, $dvt$$17$$.$Container$);
  $dvt$$17$$.$BackgroundOutputText$.$_PADDING$ = .15;
  $dvt$$17$$.$BackgroundOutputText$.prototype.Init = function $$dvt$$17$$$$BackgroundOutputText$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$17$$.$BackgroundOutputText$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "g", $DvtSvgFilterContext$$);
    this.$TextInstance$ = this.$CreateTextInstance$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$);
    this.$_backgroundRect$ = null;
    $DvtSvgFilterUtils$$ && this.$setCSSStyle$($DvtSvgFilterUtils$$);
    this.$addChild$(this.$TextInstance$);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getTextString$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getTextString$$() {
    return this.$TextInstance$.$getTextString$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$setTextString$ = function $$dvt$$17$$$$BackgroundOutputText$$$$setTextString$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setTextString$($DvtSvgShadowUtils$$);
    return this;
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$isTruncated$ = function $$dvt$$17$$$$BackgroundOutputText$$$$isTruncated$$() {
    return this.$TextInstance$.$isTruncated$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getUntruncatedTextString$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getUntruncatedTextString$$() {
    return this.$TextInstance$.$getUntruncatedTextString$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$setUntruncatedTextString$ = function $$dvt$$17$$$$BackgroundOutputText$$$$setUntruncatedTextString$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setUntruncatedTextString$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getX$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getX$$() {
    return this.$TextInstance$.$getX$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$setX$ = function $$dvt$$17$$$$BackgroundOutputText$$$$setX$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$ = this.$TextInstance$.$setX$($DvtSvgShadowUtils$$);
    this.$_realignBackground$();
    return this;
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getY$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getY$$() {
    return this.$TextInstance$.$getY$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$setY$ = function $$dvt$$17$$$$BackgroundOutputText$$$$setY$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$ = this.$TextInstance$.$setY$($DvtSvgShadowUtils$$);
    this.$_realignBackground$();
    return this;
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$setFontSize$ = function $$dvt$$17$$$$BackgroundOutputText$$$$setFontSize$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setFontSize$($DvtSvgShadowUtils$$);
    this.$_style$.$setFontSize$($dvt$$17$$.$CSSStyle$.$FONT_SIZE$, String($DvtSvgShadowUtils$$));
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getHorizAlignment$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getHorizAlignment$$() {
    return this.$TextInstance$.$getHorizAlignment$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$setHorizAlignment$ = function $$dvt$$17$$$$BackgroundOutputText$$$$setHorizAlignment$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setHorizAlignment$($DvtSvgShadowUtils$$);
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getVertAlignment$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getVertAlignment$$() {
    return this.$TextInstance$.$getVertAlignment$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$setVertAlignment$ = function $$dvt$$17$$$$BackgroundOutputText$$$$setVertAlignment$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setVertAlignment$($DvtSvgShadowUtils$$);
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$alignLeft$ = function $$dvt$$17$$$$BackgroundOutputText$$$$alignLeft$$() {
    this.$TextInstance$.$alignLeft$();
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$alignCenter$ = function $$dvt$$17$$$$BackgroundOutputText$$$$alignCenter$$() {
    this.$TextInstance$.$alignCenter$();
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$alignRight$ = function $$dvt$$17$$$$BackgroundOutputText$$$$alignRight$$() {
    this.$TextInstance$.$alignRight$();
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$alignTop$ = function $$dvt$$17$$$$BackgroundOutputText$$$$alignTop$$() {
    this.$TextInstance$.$alignTop$();
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$alignMiddle$ = function $$dvt$$17$$$$BackgroundOutputText$$$$alignMiddle$$() {
    this.$TextInstance$.$alignMiddle$();
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$alignBottom$ = function $$dvt$$17$$$$BackgroundOutputText$$$$alignBottom$$() {
    this.$TextInstance$.$alignBottom$();
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$alignAuto$ = function $$dvt$$17$$$$BackgroundOutputText$$$$alignAuto$$() {
    this.$TextInstance$.$alignAuto$();
    this.$_realignBackground$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$setCSSStyle$ = function $$dvt$$17$$$$BackgroundOutputText$$$$setCSSStyle$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BACKGROUND_COLOR$) && !$DvtSvgShadowUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$COLOR$) && $DvtSvgShadowUtils$$.$setStyle$($dvt$$17$$.$CSSStyle$.$COLOR$, $dvt$$17$$.$ColorUtils$.$getContrastingTextColor$($DvtSvgShadowUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BACKGROUND_COLOR$)));
    this.$TextInstance$ && this.$TextInstance$.$setCSSStyle$($DvtSvgShadowUtils$$);
    if (this.$_backgroundRect$ || $dvt$$17$$.$BackgroundOutputText$.$_hasBackgroundStyles$($DvtSvgShadowUtils$$)) {
      this.$_backgroundRect$ || (this.$_backgroundRect$ = this.$CreateBackground$(this.$getCtx$(), this.$TextInstance$), this.$addChildAt$(this.$_backgroundRect$, 0)), this.$_setBackgroundCSSStyle$(this.$_backgroundRect$, $DvtSvgShadowUtils$$);
    }
    this.$_style$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getCSSStyle$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getCSSStyle$$() {
    return this.$_style$;
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$setMatrix$ = function $$dvt$$17$$$$BackgroundOutputText$$$$setMatrix$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setMatrix$($DvtSvgShadowUtils$$);
    this.$_backgroundRect$ && this.$_backgroundRect$.$setMatrix$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getMatrix$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getMatrix$$() {
    return this.$TextInstance$.$getMatrix$();
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getOptimalFontSize$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getOptimalFontSize$$($DvtSvgShadowUtils$$) {
    return this.$TextInstance$.$getOptimalFontSize$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$measureDimensions$ = function $$dvt$$17$$$$BackgroundOutputText$$$$measureDimensions$$($DvtSvgShadowUtils$$) {
    return this.$getDimensions$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getTextDimensions$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getTextDimensions$$() {
    return this.$TextInstance$.$getDimensions$(void 0);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$getDimensions$ = function $$dvt$$17$$$$BackgroundOutputText$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$TextInstance$.$getDimensions$($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$h$ * $dvt$$17$$.$BackgroundOutputText$.$_PADDING$;
    $DvtSvgShadowUtils$$.x -= $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$.$w$ += 2 * $DvtSvgPatternFillUtils$$;
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$copyShape$ = function $$dvt$$17$$$$BackgroundOutputText$$$$copyShape$$() {
    return this.$TextInstance$.$copyShape$();
  };
  $dvt$$17$$.$BackgroundOutputText$.$needsTextAnchorAdjustment$ = function $$dvt$$17$$$$BackgroundOutputText$$$needsTextAnchorAdjustment$$($DvtSvgShadowUtils$$) {
    return this.$TextInstance$.$needsTextAnchorAdjustment$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BackgroundOutputText$.$getCachedDimensions$ = function $$dvt$$17$$$$BackgroundOutputText$$$getCachedDimensions$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$TextInstance$.$getCachedDimensions$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$CreateTextInstance$ = function $$dvt$$17$$$$BackgroundOutputText$$$$CreateTextInstance$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    return new $dvt$$17$$.$OutputText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$CreateBackground$ = function $$dvt$$17$$$$BackgroundOutputText$$$$CreateBackground$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getDimensions$(), $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$h$ * $dvt$$17$$.$BackgroundOutputText$.$_PADDING$;
    return new $dvt$$17$$.Rect($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.x - $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.y, $DvtSvgImageFillUtils$$.$w$ + 2 * $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.$h$);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$_realignBackground$ = function $$dvt$$17$$$$BackgroundOutputText$$$$_realignBackground$$() {
    if (this.$_backgroundRect$) {
      var $DvtSvgShadowUtils$$ = this.$TextInstance$.$getDimensions$(), $DvtSvgPatternFillUtils$$ = .15 * $DvtSvgShadowUtils$$.$h$, $DvtSvgImageFillUtils$$ = this.$getHorizAlignment$(), $DvtSvgGradientUtils$$ = this.$getVertAlignment$();
      $DvtSvgImageFillUtils$$ == $dvt$$17$$.$OutputText$.$H_ALIGN_LEFT$ ? this.$_backgroundRect$.$setX$(this.$getX$() - $DvtSvgPatternFillUtils$$) : $DvtSvgImageFillUtils$$ == $dvt$$17$$.$OutputText$.$H_ALIGN_CENTER$ ? this.$_backgroundRect$.$setX$(this.$getX$() - .5 * $DvtSvgShadowUtils$$.$w$ - $DvtSvgPatternFillUtils$$) : $DvtSvgImageFillUtils$$ == $dvt$$17$$.$OutputText$.$H_ALIGN_RIGHT$ && this.$_backgroundRect$.$setX$(this.$getX$() - $DvtSvgShadowUtils$$.$w$ - $DvtSvgPatternFillUtils$$);
      var $DvtSvgFilterUtils$$ = parseFloat(this.$_style$.$getFontSize$());
      isNaN($DvtSvgFilterUtils$$) && ($DvtSvgFilterUtils$$ = 0);
      $DvtSvgImageFillUtils$$ = 0;
      ($dvt$$17$$.$Agent$.$isBrowserChrome$() || $dvt$$17$$.$Agent$.$isEnvironmentTest$()) && $DvtSvgGradientUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_MIDDLE$ ? $DvtSvgImageFillUtils$$ = .12 * $DvtSvgFilterUtils$$ : $dvt$$17$$.$Agent$.$isPlatformIE$() && $DvtSvgGradientUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$ && ($DvtSvgImageFillUtils$$ = .4 * -$DvtSvgFilterUtils$$);
      $DvtSvgFilterUtils$$ = this.$GetTextDimensionsForRealign$($DvtSvgShadowUtils$$);
      $DvtSvgGradientUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_TOP$ ? this.$_backgroundRect$.$setY$(this.$getY$()) : $DvtSvgGradientUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_MIDDLE$ ? this.$_backgroundRect$.$setY$(this.$getY$() - .5 * $DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$) : $DvtSvgGradientUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_BOTTOM$ ? this.$_backgroundRect$.$setY$(this.$getY$() - $DvtSvgFilterUtils$$ - $DvtSvgImageFillUtils$$) : $DvtSvgGradientUtils$$ == $dvt$$17$$.$OutputText$.$V_ALIGN_AUTO$ && 
      this.$_backgroundRect$.$setY$($DvtSvgShadowUtils$$.y);
      this.$_backgroundRect$.$setWidth$($DvtSvgShadowUtils$$.$w$ + 2 * $DvtSvgPatternFillUtils$$);
      this.$_backgroundRect$.$setHeight$($DvtSvgShadowUtils$$.$h$);
    }
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$_setBackgroundCSSStyle$ = function $$dvt$$17$$$$BackgroundOutputText$$$$_setBackgroundCSSStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgPatternFillUtils$$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BACKGROUND_COLOR$);
      null != $DvtSvgImageFillUtils$$ ? $DvtSvgShadowUtils$$.$setSolidFill$($DvtSvgImageFillUtils$$) : $DvtSvgShadowUtils$$.$setInvisibleFill$();
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_COLOR$), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_WIDTH$), $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_RADIUS$);
      if ($DvtSvgImageFillUtils$$ || $DvtSvgGradientUtils$$ || $DvtSvgFilterUtils$$) {
        var $DvtSvgFilterContext$$ = new $dvt$$17$$.$CSSStyle$;
        $DvtSvgFilterContext$$.$setStyle$($dvt$$17$$.$CSSStyle$.$BORDER_COLOR$, $DvtSvgImageFillUtils$$);
        $DvtSvgFilterContext$$.$setStyle$($dvt$$17$$.$CSSStyle$.$BORDER_WIDTH$, $DvtSvgGradientUtils$$);
        $DvtSvgFilterContext$$.$setStyle$($dvt$$17$$.$CSSStyle$.$BORDER_RADIUS$, $DvtSvgFilterUtils$$);
        $DvtSvgShadowUtils$$.$setCSSStyle$($DvtSvgFilterContext$$);
      }
    } else {
      $DvtSvgShadowUtils$$.$setInvisibleFill$();
    }
    $DvtSvgShadowUtils$$.$setMouseEnabled$(!1);
  };
  $dvt$$17$$.$BackgroundOutputText$.prototype.$GetTextDimensionsForRealign$ = function $$dvt$$17$$$$BackgroundOutputText$$$$GetTextDimensionsForRealign$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.$h$;
  };
  $dvt$$17$$.$BackgroundOutputText$.$_hasBackgroundStyles$ = function $$dvt$$17$$$$BackgroundOutputText$$$_hasBackgroundStyles$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_COLOR$) || $DvtSvgShadowUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_WIDTH$) || $DvtSvgShadowUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_RADIUS$) || $DvtSvgShadowUtils$$.$getStyle$($dvt$$17$$.$CSSStyle$.$BACKGROUND_COLOR$) ? !0 : !1 : !1;
  };
  $dvt$$17$$.$MultilineText$ = function $$dvt$$17$$$$MultilineText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$MultilineText$, $dvt$$17$$.$Container$);
  $dvt$$17$$.$MultilineText$.$_LINE_SPACE$ = 0;
  $dvt$$17$$.$MultilineText$.$H_ALIGN_LEFT$ = "left";
  $dvt$$17$$.$MultilineText$.$H_ALIGN_CENTER$ = "center";
  $dvt$$17$$.$MultilineText$.$H_ALIGN_RIGHT$ = "right";
  $dvt$$17$$.$MultilineText$.$V_ALIGN_TOP$ = "top";
  $dvt$$17$$.$MultilineText$.$V_ALIGN_MIDDLE$ = "middle";
  $dvt$$17$$.$MultilineText$.$V_ALIGN_BOTTOM$ = "bottom";
  $dvt$$17$$.$MultilineText$.prototype.Init = function $$dvt$$17$$$$MultilineText$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$17$$.$MultilineText$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, null, $DvtSvgFilterUtils$$);
    this.$_textInstance$ = null;
    this.$_additionalLines$ = [];
    this.$_yCoord$ = this.$_lineHeight$ = null;
    this.$_noWrap$ = !1;
    this.$setTextString$($DvtSvgPatternFillUtils$$);
    this.$setX$($DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ : 0);
    this.$setY$($DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : 0);
    this.$setMaxLines$(Infinity);
  };
  $dvt$$17$$.$MultilineText$.prototype.$getTextString$ = function $$dvt$$17$$$$MultilineText$$$$getTextString$$() {
    return this.$_textString$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$setTextString$ = function $$dvt$$17$$$$MultilineText$$$$setTextString$$($DvtSvgShadowUtils$$) {
    this.$_textString$ = null != $DvtSvgShadowUtils$$ ? String($DvtSvgShadowUtils$$) : null;
    this.$_textInstance$ ? (this.$_textInstance$.$setTextString$($DvtSvgShadowUtils$$), this.$_removeAdditionalLines$()) : (this.$_textInstance$ = new $dvt$$17$$.$OutputText$(this.$getCtx$(), this.$_textString$), this.$addChild$(this.$_textInstance$));
    this.$_bTruncated$ = !1;
  };
  $dvt$$17$$.$MultilineText$.prototype.$_getTextLines$ = function $$dvt$$17$$$$MultilineText$$$$_getTextLines$$() {
    var $DvtSvgShadowUtils$$ = this.$_additionalLines$.slice();
    this.$_textInstance$.getParent() == this && $DvtSvgShadowUtils$$.unshift(this.$_textInstance$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$getX$ = function $$dvt$$17$$$$MultilineText$$$$getX$$() {
    return this.$_textInstance$.$getX$();
  };
  $dvt$$17$$.$MultilineText$.prototype.$setX$ = function $$dvt$$17$$$$MultilineText$$$$setX$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgPatternFillUtils$$) {
      $DvtSvgPatternFillUtils$$.$setX$($DvtSvgShadowUtils$$);
    });
    return this;
  };
  $dvt$$17$$.$MultilineText$.prototype.$getY$ = function $$dvt$$17$$$$MultilineText$$$$getY$$() {
    return this.$_textInstance$.$getY$();
  };
  $dvt$$17$$.$MultilineText$.prototype.$getYAlignCoord$ = function $$dvt$$17$$$$MultilineText$$$$getYAlignCoord$$() {
    return this.$_yCoord$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$setY$ = function $$dvt$$17$$$$MultilineText$$$$setY$$($DvtSvgShadowUtils$$) {
    this.$_yCoord$ = $DvtSvgShadowUtils$$;
    if (this.$_vertAlign$) {
      this.$_alignVerticalText$();
    } else {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ - this.$_textInstance$.$getY$();
      $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$);
      $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getY$();
        $DvtSvgShadowUtils$$.$setY$($DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$ + $DvtSvgPatternFillUtils$$ : $DvtSvgPatternFillUtils$$);
      });
    }
    return this;
  };
  $dvt$$17$$.$MultilineText$.prototype.$getMaxLines$ = function $$dvt$$17$$$$MultilineText$$$$getMaxLines$$() {
    return this.$GetProperty$("maxLines");
  };
  $dvt$$17$$.$MultilineText$.prototype.$setMaxLines$ = function $$dvt$$17$$$$MultilineText$$$$setMaxLines$$($DvtSvgShadowUtils$$) {
    0 < $DvtSvgShadowUtils$$ && this.$SetProperty$("maxLines", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$MultilineText$.prototype.$isTruncated$ = function $$dvt$$17$$$$MultilineText$$$$isTruncated$$() {
    return this.$_bTruncated$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$getHorizAlignment$ = function $$dvt$$17$$$$MultilineText$$$$getHorizAlignment$$() {
    return this.$_textInstance$.$getHorizAlignment$();
  };
  $dvt$$17$$.$MultilineText$.prototype.$setHorizAlignment$ = function $$dvt$$17$$$$MultilineText$$$$setHorizAlignment$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgPatternFillUtils$$) {
      $DvtSvgPatternFillUtils$$.$setHorizAlignment$($DvtSvgShadowUtils$$);
    });
    return this;
  };
  $dvt$$17$$.$MultilineText$.prototype.$alignLeft$ = function $$dvt$$17$$$$MultilineText$$$$alignLeft$$() {
    this.$_horizAlign$ != $dvt$$17$$.$MultilineText$.$H_ALIGN_LEFT$ && (this.$_horizAlign$ = $dvt$$17$$.$MultilineText$.$H_ALIGN_LEFT$, $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignLeft$();
    }));
  };
  $dvt$$17$$.$MultilineText$.prototype.$alignCenter$ = function $$dvt$$17$$$$MultilineText$$$$alignCenter$$() {
    this.$_horizAlign$ != $dvt$$17$$.$MultilineText$.$H_ALIGN_CENTER$ && (this.$_horizAlign$ = $dvt$$17$$.$MultilineText$.$H_ALIGN_CENTER$, $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignCenter$();
    }));
  };
  $dvt$$17$$.$MultilineText$.prototype.$alignRight$ = function $$dvt$$17$$$$MultilineText$$$$alignRight$$() {
    this.$_horizAlign$ != $dvt$$17$$.$MultilineText$.$H_ALIGN_RIGHT$ && (this.$_horizAlign$ = $dvt$$17$$.$MultilineText$.$H_ALIGN_RIGHT$, $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignRight$();
    }));
  };
  $dvt$$17$$.$MultilineText$.prototype.$alignTop$ = function $$dvt$$17$$$$MultilineText$$$$alignTop$$() {
    this.$_vertAlign$ != $dvt$$17$$.$MultilineText$.$V_ALIGN_TOP$ && (this.$_vertAlign$ = $dvt$$17$$.$MultilineText$.$V_ALIGN_TOP$, this.$_alignVerticalText$(), $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignTop$();
    }));
  };
  $dvt$$17$$.$MultilineText$.prototype.$alignMiddle$ = function $$dvt$$17$$$$MultilineText$$$$alignMiddle$$() {
    this.$_vertAlign$ != $dvt$$17$$.$MultilineText$.$V_ALIGN_MIDDLE$ && (this.$_vertAlign$ = $dvt$$17$$.$MultilineText$.$V_ALIGN_MIDDLE$, this.$_alignVerticalText$(), $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignMiddle$();
    }));
  };
  $dvt$$17$$.$MultilineText$.prototype.$alignBottom$ = function $$dvt$$17$$$$MultilineText$$$$alignBottom$$() {
    this.$_vertAlign$ != $dvt$$17$$.$MultilineText$.$V_ALIGN_BOTTOM$ && (this.$_vertAlign$ = $dvt$$17$$.$MultilineText$.$V_ALIGN_BOTTOM$, this.$_alignVerticalText$(), $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.$alignBottom$();
    }));
  };
  $dvt$$17$$.$MultilineText$.prototype.$_alignVerticalText$ = function $$dvt$$17$$$$MultilineText$$$$_alignVerticalText$$() {
    if (this.$_vertAlign$) {
      for (var $DvtSvgShadowUtils$$ = this.$getYAlignCoord$(), $DvtSvgPatternFillUtils$$ = this.$getLineCount$(), $DvtSvgImageFillUtils$$ = this.$getLineHeight$(), $DvtSvgGradientUtils$$ = this.$_getTextLines$(), $DvtSvgFilterUtils$$ = 0, $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgGradientUtils$$.length;$DvtSvgFilterContext$$++) {
        var $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$[$DvtSvgFilterContext$$];
        this.$_vertAlign$ == $dvt$$17$$.$MultilineText$.$V_ALIGN_TOP$ ? $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$ * $DvtSvgFilterContext$$ : this.$_vertAlign$ == $dvt$$17$$.$MultilineText$.$V_ALIGN_MIDDLE$ ? $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$ * $DvtSvgFilterContext$$ - $DvtSvgImageFillUtils$$ * ($DvtSvgPatternFillUtils$$ - 1) / 2 : this.$_vertAlign$ == $dvt$$17$$.$MultilineText$.$V_ALIGN_BOTTOM$ && ($DvtSvgFilterUtils$$ = -$DvtSvgImageFillUtils$$ * ($DvtSvgPatternFillUtils$$ - $DvtSvgFilterContext$$ - 
        1));
        $DvtSvgImplFactory$$.$setY$($DvtSvgShadowUtils$$ + $DvtSvgFilterUtils$$);
      }
    }
  };
  $dvt$$17$$.$MultilineText$.prototype.$getCSSStyle$ = function $$dvt$$17$$$$MultilineText$$$$getCSSStyle$$() {
    return this.$_textInstance$.$getCSSStyle$();
  };
  $dvt$$17$$.$MultilineText$.prototype.$setCSSStyle$ = function $$dvt$$17$$$$MultilineText$$$$setCSSStyle$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgPatternFillUtils$$) {
      $DvtSvgPatternFillUtils$$.$setCSSStyle$($DvtSvgShadowUtils$$);
    });
    return this;
  };
  $dvt$$17$$.$MultilineText$.prototype.$copyShape$ = function $$dvt$$17$$$$MultilineText$$$$copyShape$$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$MultilineText$(this.$getCtx$(), this.$getTextString$(), this.$getX$(), this.$getY$());
    $DvtSvgShadowUtils$$.$setCSSStyle$(this.$getCSSStyle$()).$setHorizAlignment$(this.$getHorizAlignment$()).$setMaxLines$(this.$getMaxLines$());
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$_removeAdditionalLines$ = function $$dvt$$17$$$$MultilineText$$$$_removeAdditionalLines$$() {
    for (var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_additionalLines$.length;$DvtSvgShadowUtils$$++) {
      this.removeChild(this.$_additionalLines$[$DvtSvgShadowUtils$$]);
    }
    this.$_additionalLines$ = [];
  };
  $dvt$$17$$.$MultilineText$.prototype.$__fitText$ = function $$dvt$$17$$$$MultilineText$$$$__fitText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_textInstance$.$setTextString$(this.$getTextString$());
    this.$_removeAdditionalLines$();
    if ($dvt$$17$$.$TextUtils$.$fitText$(this.$_textInstance$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, this, $DvtSvgImageFillUtils$$)) {
      if (!this.$_textInstance$.$isTruncated$() || !this.$isWrapEnabled$()) {
        return !0;
      }
    } else {
      return this.getParent().removeChild(this), !1;
    }
    return this.$wrapText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, !1);
  };
  $dvt$$17$$.$MultilineText$.prototype.$wrapText$ = function $$dvt$$17$$$$MultilineText$$$$wrapText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = this.$getLineHeight$(), $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$ * $dvt$$17$$.$MultilineText$.$_LINE_SPACE$;
    $DvtSvgPatternFillUtils$$ = Math.min($DvtSvgPatternFillUtils$$, this.$getMaxLines$() * ($DvtSvgFilterUtils$$ + $DvtSvgFilterContext$$) - $DvtSvgFilterContext$$) - $DvtSvgFilterUtils$$ - $DvtSvgFilterContext$$;
    1 < this.$getLineCount$() && this.$_removeAdditionalLines$();
    var $DvtSvgImplFactory$$ = this.$getTextString$().split(" ");
    $DvtSvgImplFactory$$.reverse();
    for (var $DvtHtmlRichTooltipManager$$ = this.$_textInstance$, $DvtDomXmlParser$$ = null, $DvtCustomTooltipItem$$ = !0;0 < $DvtSvgImplFactory$$.length;) {
      var $DvtContextMenuTooltipItem$$ = $DvtSvgImplFactory$$.pop(), $DvtPolygonalShape$$ = $DvtDomXmlParser$$ ? $DvtDomXmlParser$$ + " " + $DvtContextMenuTooltipItem$$ : $DvtContextMenuTooltipItem$$;
      $DvtHtmlRichTooltipManager$$.$setTextString$($DvtPolygonalShape$$);
      $DvtHtmlRichTooltipManager$$.$setUntruncatedTextString$(null);
      if ($dvt$$17$$.$TextUtils$.$fitText$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, Infinity, this, $DvtSvgImageFillUtils$$)) {
        if ($DvtHtmlRichTooltipManager$$.$isTruncated$()) {
          if ($DvtSvgPatternFillUtils$$ < $DvtSvgFilterContext$$ + $DvtSvgFilterUtils$$) {
            this.$_bTruncated$ = !0;
            break;
          }
          if ($DvtDomXmlParser$$) {
            $DvtHtmlRichTooltipManager$$.$setTextString$($DvtDomXmlParser$$), $DvtSvgImplFactory$$.push($DvtContextMenuTooltipItem$$);
          } else {
            if ($DvtSvgGradientUtils$$) {
              return this.$_textInstance$.$setTextString$(this.$getTextString$()), this.$_removeAdditionalLines$(), !1;
            }
            this.$_bTruncated$ = !0;
          }
          0 < $DvtSvgImplFactory$$.length && ($DvtDomXmlParser$$ = $DvtHtmlRichTooltipManager$$.$copyShape$(), $DvtDomXmlParser$$.$setY$($DvtHtmlRichTooltipManager$$.$getY$() + $DvtSvgFilterContext$$ + $DvtSvgFilterUtils$$), this.$addChild$($DvtDomXmlParser$$), this.$_additionalLines$.push($DvtDomXmlParser$$), $DvtHtmlRichTooltipManager$$ = $DvtDomXmlParser$$, $DvtDomXmlParser$$ = null, $DvtSvgPatternFillUtils$$ -= $DvtSvgFilterContext$$ + $DvtSvgFilterUtils$$);
        } else {
          $DvtDomXmlParser$$ = $DvtPolygonalShape$$;
        }
      } else {
        if ($DvtCustomTooltipItem$$) {
          return !1;
        }
        break;
      }
      $DvtCustomTooltipItem$$ = !1;
    }
    return !0;
  };
  $dvt$$17$$.$MultilineText$.prototype.$GetSvgDimensions$ = function $$dvt$$17$$$$MultilineText$$$$GetSvgDimensions$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $dvt$$17$$.$ArrayUtils$.forEach(this.$_getTextLines$(), function($DvtSvgImageFillUtils$$) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$.$getUnion$($DvtSvgImageFillUtils$$.$measureDimensions$($DvtSvgShadowUtils$$)) : $DvtSvgImageFillUtils$$.$measureDimensions$($DvtSvgShadowUtils$$);
    });
    return $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : new $dvt$$17$$.$Rectangle$(0, 0, 0, 0);
  };
  $dvt$$17$$.$MultilineText$.prototype.$getLineCount$ = function $$dvt$$17$$$$MultilineText$$$$getLineCount$$() {
    return this.$_additionalLines$.length + 1;
  };
  $dvt$$17$$.$MultilineText$.prototype.$getLineHeight$ = function $$dvt$$17$$$$MultilineText$$$$getLineHeight$$() {
    this.$_lineHeight$ || (this.$_lineHeight$ = this.$_textInstance$.$measureDimensions$().$h$);
    return this.$_lineHeight$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$setWrapEnabled$ = function $$dvt$$17$$$$MultilineText$$$$setWrapEnabled$$($DvtSvgShadowUtils$$) {
    0 == $DvtSvgShadowUtils$$ && (this.$_textInstance$.getParent() != this && this.$addChild$(this.$_textInstance$), this.$_textInstance$.$getTextString$() || this.$_textInstance$.$setTextString$(this.$getTextString$()), this.$_removeAdditionalLines$());
    this.$_noWrap$ = !$DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$isWrapEnabled$ = function $$dvt$$17$$$$MultilineText$$$$isWrapEnabled$$() {
    return 0 == this.$_noWrap$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$getUntruncatedTextString$ = function $$dvt$$17$$$$MultilineText$$$$getUntruncatedTextString$$() {
    return this.$isTruncated$() ? this.$getTextString$() : null;
  };
  $dvt$$17$$.$MultilineText$.prototype.$setUntruncatedTextString$ = function $$dvt$$17$$$$MultilineText$$$$setUntruncatedTextString$$() {
  };
  $dvt$$17$$.$MultilineText$.prototype.$measureDimensions$ = function $$dvt$$17$$$$MultilineText$$$$measureDimensions$$($DvtSvgShadowUtils$$) {
    return this.$GetSvgDimensions$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$MultilineText$.prototype.$getDimensions$ = function $$dvt$$17$$$$MultilineText$$$$getDimensions$$($DvtSvgShadowUtils$$) {
    return this.$GetSvgDimensions$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$MultilineText$.prototype.$UpdateSelectionEffect$ = function $$dvt$$17$$$$MultilineText$$$$UpdateSelectionEffect$$() {
  };
  $dvt$$17$$.$MultilineText$.prototype.$getHorizAlignment$ = function $$dvt$$17$$$$MultilineText$$$$getHorizAlignment$$() {
    return this.$_horizAlign$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$setHorizAlignment$ = function $$dvt$$17$$$$MultilineText$$$$setHorizAlignment$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ == $dvt$$17$$.$MultilineText$.$H_ALIGN_LEFT$ ? this.$alignLeft$() : $DvtSvgShadowUtils$$ == $dvt$$17$$.$MultilineText$.$H_ALIGN_CENTER$ ? this.$alignCenter$() : $DvtSvgShadowUtils$$ == $dvt$$17$$.$MultilineText$.$H_ALIGN_RIGHT$ && this.$alignRight$();
  };
  $dvt$$17$$.$MultilineText$.prototype.$getVertAlignment$ = function $$dvt$$17$$$$MultilineText$$$$getVertAlignment$$() {
    return this.$_vertAlign$;
  };
  $dvt$$17$$.$MultilineText$.prototype.$setVertAlignment$ = function $$dvt$$17$$$$MultilineText$$$$setVertAlignment$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ == $dvt$$17$$.$MultilineText$.$V_ALIGN_TOP$ ? this.$alignTop$() : $DvtSvgShadowUtils$$ == $dvt$$17$$.$MultilineText$.$V_ALIGN_MIDDLE$ ? this.$alignMiddle$() : $DvtSvgShadowUtils$$ == $dvt$$17$$.$MultilineText$.$V_ALIGN_BOTTOM$ && this.$alignBottom$();
  };
  $dvt$$17$$.$BackgroundMultilineText$ = function $$dvt$$17$$$$BackgroundMultilineText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$BackgroundMultilineText$, $dvt$$17$$.$BackgroundOutputText$);
  $dvt$$17$$.$BackgroundMultilineText$.prototype.Init = function $$dvt$$17$$$$BackgroundMultilineText$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $dvt$$17$$.$BackgroundMultilineText$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$wrapText$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$wrapText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return this.$TextInstance$.$wrapText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$CreateTextInstance$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$CreateTextInstance$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    return new $dvt$$17$$.$MultilineText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$GetTextDimensionsForRealign$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$GetTextDimensionsForRealign$$() {
    return this.$getLineHeight$();
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$measureDimensions$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$measureDimensions$$() {
    return this.$TextInstance$.$measureDimensions$();
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$__fitText$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$__fitText$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$TextInstance$.$__fitText$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$_getTextLines$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$_getTextLines$$() {
    return this.$TextInstance$.$_getTextLines$();
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$getLineHeight$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$getLineHeight$$() {
    return this.$TextInstance$.$getLineHeight$();
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$getLineCount$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$getLineCount$$() {
    return this.$TextInstance$.$getLineCount$();
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$getYAlignCoord$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$getYAlignCoord$$() {
    return this.$TextInstance$.$getYAlignCoord$();
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$setWrapEnabled$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$setWrapEnabled$$($DvtSvgShadowUtils$$) {
    this.$TextInstance$.$setWrapEnabled$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$isWrapEnabled$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$isWrapEnabled$$() {
    return this.$TextInstance$.$isWrapEnabled$();
  };
  $dvt$$17$$.$BackgroundMultilineText$.prototype.$UpdateSelectionEffect$ = function $$dvt$$17$$$$BackgroundMultilineText$$$$UpdateSelectionEffect$$() {
  };
  $dvt$$17$$.$Use$ = function $$dvt$$17$$$$Use$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Use$, $dvt$$17$$.$Displayable$);
  $dvt$$17$$.$Use$.$_uniqueSeed$ = 0;
  $dvt$$17$$.$Use$.prototype.Init = function $$dvt$$17$$$$Use$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $dvt$$17$$.$Use$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, "use", $DvtSvgFilterUtils$$);
    $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.getId();
    $DvtSvgFilterUtils$$ || ($DvtSvgFilterUtils$$ = "use" + $dvt$$17$$.$Use$.$_uniqueSeed$++, $DvtSvgGradientUtils$$.setId($DvtSvgFilterUtils$$));
    $DvtSvgShadowUtils$$.$existsGlobalDefReference$($DvtSvgFilterUtils$$) || ($DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.$getElem$(), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "id", $DvtSvgFilterUtils$$), $DvtSvgShadowUtils$$.$appendDefs$($DvtSvgGradientUtils$$));
    $DvtSvgShadowUtils$$.$increaseGlobalDefReference$($DvtSvgFilterUtils$$);
    this.$_targetId$ = $DvtSvgFilterUtils$$;
    $dvt$$17$$.$ToolkitUtils$.$setAttrNS$(this.$_elem$, $dvt$$17$$.Image.$XLINK_NS$, "xlink:href", $dvt$$17$$.$ToolkitUtils$.$getUrlPathById$($DvtSvgFilterUtils$$));
    this.$setX$($DvtSvgPatternFillUtils$$).$setY$($DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Use$.prototype.$getX$ = function $$dvt$$17$$$$Use$$$$getX$$() {
    return this.$GetProperty$("x");
  };
  $dvt$$17$$.$Use$.prototype.$setX$ = function $$dvt$$17$$$$Use$$$$setX$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("x", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.$Use$.prototype.$getY$ = function $$dvt$$17$$$$Use$$$$getY$$() {
    return this.$GetProperty$("y");
  };
  $dvt$$17$$.$Use$.prototype.$setY$ = function $$dvt$$17$$$$Use$$$$setY$$($DvtSvgShadowUtils$$) {
    return this.$SetSvgProperty$("y", $DvtSvgShadowUtils$$, 0);
  };
  $dvt$$17$$.$Use$.prototype.$destroy$ = function $$dvt$$17$$$$Use$$$$destroy$$() {
    this.$getCtx$().$decreaseGlobalDefReference$(this.$_targetId$);
    $dvt$$17$$.$Use$.$superclass$.$destroy$.call(this);
  };
  $dvt$$17$$.$StyleUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$StyleUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$StyleUtils$.$DEFAULT_FONT_FAMILY$ = "Tahoma,Verdana,Helvetica,sans-serif";
  $dvt$$17$$.$StyleUtils$.$DEFAULT_FONT_SIZE$ = "11px";
  $dvt$$17$$.$StyleUtils$.$DEFAULT_FONT_COLOR$ = "black";
  $dvt$$17$$.$StyleUtils$.$getStyle$ = function $$dvt$$17$$$$StyleUtils$$$getStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$ && null !== $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] && "undefined" !== typeof $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] ? $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] : $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$StyleUtils$.$setStyle$ = function $$dvt$$17$$$$StyleUtils$$$setStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ && null !== $DvtSvgImageFillUtils$$ && "undefined" !== typeof $DvtSvgImageFillUtils$$ && ($DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$StyleUtils$.$getShadow$ = function $$dvt$$17$$$$StyleUtils$$$getShadow$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = null;
    if (null != $DvtSvgShadowUtils$$ && "none" != $DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ = 0, $DvtSvgFilterUtils$$ = 0, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.replace(/, /g, ",").split(" ");
      null == $DvtSvgShadowUtils$$.match(/rgb/i) && ($DvtSvgFilterContext$$[$DvtSvgFilterContext$$.length] = "rgba(0, 0, 0, 0.2)");
      if (3 > $DvtSvgFilterContext$$.length) {
        return null;
      }
      for ($DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < $DvtSvgFilterContext$$.length;$DvtSvgShadowUtils$$++) {
        0 == $DvtSvgShadowUtils$$ ? $DvtSvgPatternFillUtils$$ = parseInt($DvtSvgFilterContext$$[0]) : 1 == $DvtSvgShadowUtils$$ ? $DvtSvgGradientUtils$$ = parseInt($DvtSvgFilterContext$$[1]) : 2 == $DvtSvgShadowUtils$$ && null == $DvtSvgFilterContext$$[$DvtSvgShadowUtils$$].match(/rgb/i) ? $DvtSvgFilterUtils$$ = parseInt($DvtSvgFilterContext$$[$DvtSvgShadowUtils$$]) : $DvtSvgFilterContext$$[$DvtSvgShadowUtils$$].match(/rgb/i) && ($DvtSvgImageFillUtils$$ = $DvtSvgFilterContext$$[$DvtSvgShadowUtils$$])
        ;
      }
      $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Shadow$($DvtSvgImageFillUtils$$, Math.sqrt($DvtSvgPatternFillUtils$$ * $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$, 180 * Math.atan2($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$) / Math.PI, 1, 3, !1, !1, !1);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$StyleUtils$.$getTimeMilliseconds$ = function $$dvt$$17$$$$StyleUtils$$$getTimeMilliseconds$$($DvtSvgShadowUtils$$) {
    "string" == typeof $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = "ms" == $DvtSvgShadowUtils$$.slice(-2) ? parseInt($DvtSvgShadowUtils$$.slice(0, -2)) : "s" == $DvtSvgShadowUtils$$.slice(-1) ? 1E3 * parseFloat($DvtSvgShadowUtils$$.slice(0, -1)) : parseInt($DvtSvgShadowUtils$$));
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSGradient$ = function $$dvt$$17$$$$CSSGradient$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$CSSGradient$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$CSSGradient$.LINEAR = 0;
  $dvt$$17$$.$CSSGradient$.$RADIAL$ = 1;
  $dvt$$17$$.$CSSGradient$.prototype.Init = function $$dvt$$17$$$$CSSGradient$$$Init$($DvtSvgShadowUtils$$) {
    this.$_type$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSGradient$.prototype.$getAlphas$ = function $$dvt$$17$$$$CSSGradient$$$$getAlphas$$() {
    return this.$_arAlphas$;
  };
  $dvt$$17$$.$CSSGradient$.prototype.$setAlphas$ = function $$dvt$$17$$$$CSSGradient$$$$setAlphas$$($DvtSvgShadowUtils$$) {
    this.$_arAlphas$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSGradient$.prototype.$setColors$ = function $$dvt$$17$$$$CSSGradient$$$$setColors$$($DvtSvgShadowUtils$$) {
    this.$_arColors$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSGradient$.prototype.$setRatios$ = function $$dvt$$17$$$$CSSGradient$$$$setRatios$$($DvtSvgShadowUtils$$) {
    this.$_arRatios$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtLinearGradient$$, $dvt$$17$$.$CSSGradient$);
  $DvtLinearGradient$$.$LEFT$ = 0;
  $DvtLinearGradient$$.$BOTTOM_LEFT$ = 45;
  $DvtLinearGradient$$.$BOTTOM$ = 90;
  $DvtLinearGradient$$.$BOTTOM_RIGHT$ = 135;
  $DvtLinearGradient$$.$RIGHT$ = 180;
  $DvtLinearGradient$$.$TOP_RIGHT$ = 225;
  $DvtLinearGradient$$.$TOP$ = 270;
  $DvtLinearGradient$$.$TOP_LEFT$ = 315;
  $DvtLinearGradient$$.prototype.Init = function $$DvtLinearGradient$$$$Init$() {
    $DvtLinearGradient$$.$superclass$.Init.call(this, $dvt$$17$$.$CSSGradient$.LINEAR);
  };
  $DvtLinearGradient$$.prototype.$getAngle$ = function $$DvtLinearGradient$$$$$getAngle$$() {
    return this.$_angle$;
  };
  $DvtLinearGradient$$.prototype.$setAngle$ = function $$DvtLinearGradient$$$$$setAngle$$($DvtSvgShadowUtils$$) {
    this.$_angle$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$GradientParser$ = function $$dvt$$17$$$$GradientParser$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$GradientParser$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$GradientParser$.$WEBKIT_GD_LINEAR$ = "-webkit-linear-gradient";
  $dvt$$17$$.$GradientParser$.$FIREFOX_GD_LINEAR$ = "-moz-linear-gradient";
  $dvt$$17$$.$GradientParser$.$IE_GD_LINEAR$ = "progid:DXImageTransform.Microsoft.gradient";
  $dvt$$17$$.$GradientParser$.$IE_GD_LINEAR2$ = "progid:DXImageTransform.Microsoft.Gradient";
  $dvt$$17$$.$GradientParser$.$IE7_GD_FILTER$ = "filter";
  $dvt$$17$$.$GradientParser$.$IE8_GD_FILTER$ = "-ms-filter";
  $dvt$$17$$.$GradientParser$.$IE10_GD_LINEAR$ = "-ms-linear-gradient";
  $dvt$$17$$.$GradientParser$.$IE_GD_START_COLOR_STR$ = "startColorstr";
  $dvt$$17$$.$GradientParser$.$IE_GD_END_COLOR_STR$ = "endColorstr";
  $dvt$$17$$.$GradientParser$.$IE_GD_GRADIENT_TYPE$ = "GradientType";
  $dvt$$17$$.$GradientParser$.$OLD_WEBKIT_GD_LINEAR$ = "-webkit-gradient";
  $dvt$$17$$.$GradientParser$.$GD_LINEAR$ = "linear-gradient";
  $dvt$$17$$.$GradientParser$.$GD_RADIAL$ = "radial-gradient";
  $dvt$$17$$.$GradientParser$.$GD_TOP$ = "top";
  $dvt$$17$$.$GradientParser$.$GD_BOTTOM$ = "bottom";
  $dvt$$17$$.$GradientParser$.$GD_LEFT$ = "left";
  $dvt$$17$$.$GradientParser$.$GD_RIGHT$ = "right";
  $dvt$$17$$.$GradientParser$.$GD_CENTER$ = "center";
  $dvt$$17$$.$GradientParser$.$GD_TO$ = "to";
  $dvt$$17$$.$GradientParser$.$parseCSSGradient$ = function $$dvt$$17$$$$GradientParser$$$parseCSSGradient$$($DvtSvgShadowUtils$$) {
    if (null != $DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
      if ($dvt$$17$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$WEBKIT_GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$17$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$WEBKIT_GD_LINEAR$), $dvt$$17$$.$GradientParser$.$_parseLinearGradient$($DvtSvgShadowUtils$$);
      }
      if ($dvt$$17$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$FIREFOX_GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$17$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$FIREFOX_GD_LINEAR$), $dvt$$17$$.$GradientParser$.$_parseLinearGradient$($DvtSvgShadowUtils$$);
      }
      if ($dvt$$17$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$IE_GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$17$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$IE_GD_LINEAR$), $dvt$$17$$.$GradientParser$.$_parseIELinearGradient$($DvtSvgShadowUtils$$);
      }
      if ($dvt$$17$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$IE_GD_LINEAR2$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$17$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$IE_GD_LINEAR2$), $dvt$$17$$.$GradientParser$.$_parseIELinearGradient$($DvtSvgShadowUtils$$);
      }
      if ($dvt$$17$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$IE10_GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$17$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$IE10_GD_LINEAR$), $dvt$$17$$.$GradientParser$.$_parseLinearGradient$($DvtSvgShadowUtils$$);
      }
      if ($dvt$$17$$.$GradientParser$.$_startsWith$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$GD_LINEAR$)) {
        return $DvtSvgShadowUtils$$ = $dvt$$17$$.$GradientParser$.$_removeParenthesis$($DvtSvgShadowUtils$$, $dvt$$17$$.$GradientParser$.$GD_LINEAR$), $dvt$$17$$.$GradientParser$.$_parseLinearGradient$($DvtSvgShadowUtils$$);
      }
    }
    return null;
  };
  $dvt$$17$$.$GradientParser$.$_parseLinearGradient$ = function $$dvt$$17$$$$GradientParser$$$_parseLinearGradient$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = /(left|right)/, $DvtSvgImageFillUtils$$ = /(top|bottom)/, $DvtSvgGradientUtils$$ = new RegExp("(?:" + /(-?(?:\d*\.)?\d+)/.source + /(deg|rad|grad|turn)/.source + ")"), $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.match(new RegExp("(?:\\s*" + (new RegExp("(?:" + $DvtSvgGradientUtils$$.source + "|(?:" + /(?:(to)\s+)/.source + "?" + (new RegExp("(?:" + (new RegExp("(?:" + $DvtSvgPatternFillUtils$$.source + "(?:\\s+" + $DvtSvgImageFillUtils$$.source + ")?)")).source + 
    "|" + (new RegExp("(?:" + $DvtSvgImageFillUtils$$.source + "(?:\\s+" + $DvtSvgPatternFillUtils$$.source + ")?)")).source + ")")).source + "))")).source + "\\s*,\\s*)", "i"));
    if (null == $DvtSvgPatternFillUtils$$ || 0 == $DvtSvgPatternFillUtils$$.length) {
      return null;
    }
    var $DvtSvgImageFillUtils$$ = new $DvtLinearGradient$$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$[5] == $dvt$$17$$.$GradientParser$.$GD_TOP$ || $DvtSvgPatternFillUtils$$[6] == $dvt$$17$$.$GradientParser$.$GD_TOP$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$[5] == $dvt$$17$$.$GradientParser$.$GD_BOTTOM$ || $DvtSvgPatternFillUtils$$[6] == $dvt$$17$$.$GradientParser$.$GD_BOTTOM$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$[4] == $dvt$$17$$.$GradientParser$.$GD_LEFT$ || $DvtSvgPatternFillUtils$$[7] == 
    $dvt$$17$$.$GradientParser$.$GD_LEFT$, $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$[4] == $dvt$$17$$.$GradientParser$.$GD_RIGHT$ || $DvtSvgPatternFillUtils$$[7] == $dvt$$17$$.$GradientParser$.$GD_RIGHT$;
    if ($DvtSvgPatternFillUtils$$[3] == $dvt$$17$$.$GradientParser$.$GD_TO$) {
      if ($DvtSvgGradientUtils$$ || $DvtSvgFilterUtils$$) {
        $DvtSvgGradientUtils$$ = !$DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$ = !$DvtSvgFilterUtils$$;
      }
      if ($DvtSvgFilterContext$$ || $DvtSvgImplFactory$$) {
        $DvtSvgFilterContext$$ = !$DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = !$DvtSvgImplFactory$$;
      }
    }
    $DvtSvgGradientUtils$$ ? $DvtSvgFilterContext$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$TOP_LEFT$) : $DvtSvgImplFactory$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$TOP_RIGHT$) : $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$TOP$) : $DvtSvgFilterUtils$$ ? $DvtSvgFilterContext$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$BOTTOM_LEFT$) : $DvtSvgImplFactory$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$BOTTOM_RIGHT$) : 
    $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$BOTTOM$) : $DvtSvgFilterContext$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$LEFT$) : $DvtSvgImplFactory$$ ? $DvtSvgImageFillUtils$$.$setAngle$($DvtLinearGradient$$.$RIGHT$) : $DvtSvgPatternFillUtils$$[2] && ($DvtSvgGradientUtils$$ = parseFloat($DvtSvgPatternFillUtils$$[1]), isNaN($DvtSvgGradientUtils$$) || ("grad" == $DvtSvgPatternFillUtils$$[2] ? $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ / 200 * 180 : "rad" == $DvtSvgPatternFillUtils$$[2] ? 
    $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ / Math.PI * 180 : "turn" == $DvtSvgPatternFillUtils$$[2] && ($DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ / .5 * 180), $DvtSvgImageFillUtils$$.$setAngle$($DvtSvgGradientUtils$$)));
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring($DvtSvgPatternFillUtils$$[0].length);
    $dvt$$17$$.$GradientParser$.$_parseCSSColorStops$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$GradientParser$.$_parseIELinearGradient$ = function $$dvt$$17$$$$GradientParser$$$_parseIELinearGradient$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.split(",");
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = new $DvtLinearGradient$$;
    $DvtSvgFilterUtils$$.$setAngle$($DvtLinearGradient$$.$TOP$);
    for (var $DvtSvgFilterContext$$ = 0;$DvtSvgFilterContext$$ < $DvtSvgPatternFillUtils$$;$DvtSvgFilterContext$$++) {
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$[$DvtSvgFilterContext$$]).split("\x3d"), 2 == $DvtSvgImageFillUtils$$.length && ($DvtSvgImageFillUtils$$[0] = $dvt$$17$$.$StringUtils$.trim($DvtSvgImageFillUtils$$[0]), $DvtSvgImageFillUtils$$[0] == $dvt$$17$$.$GradientParser$.$IE_GD_START_COLOR_STR$ ? $DvtSvgGradientUtils$$[0] = $dvt$$17$$.$GradientParser$.$removeQuotes$($DvtSvgImageFillUtils$$[1], $dvt$$17$$.$CSSStyle$.$SINGLE_QUOTE$) : $DvtSvgImageFillUtils$$[0] == 
      $dvt$$17$$.$GradientParser$.$IE_GD_END_COLOR_STR$ ? $DvtSvgGradientUtils$$[1] = $dvt$$17$$.$GradientParser$.$removeQuotes$($DvtSvgImageFillUtils$$[1], $dvt$$17$$.$CSSStyle$.$SINGLE_QUOTE$) : $DvtSvgImageFillUtils$$[0] == $dvt$$17$$.$GradientParser$.$IE_GD_GRADIENT_TYPE$ && "1" == $DvtSvgImageFillUtils$$[1] && $DvtSvgFilterUtils$$.$setAngle$($DvtLinearGradient$$.$LEFT$));
    }
    $dvt$$17$$.$GradientParser$.$_parseColorStops$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    return $DvtSvgFilterUtils$$;
  };
  $dvt$$17$$.$GradientParser$.$_parseCSSColorStops$ = function $$dvt$$17$$$$GradientParser$$$_parseCSSColorStops$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.match(/(#[0-9a-f]+|rgb\(\s*(\d+),\s*(\d+),\s*(\d+)\s*\)|rgba\(\s*(\d+),\s*(\d+),\s*(\d+),\s*(\d?)(\.\d+)?\s*\)|[a-z]+)(\s+\d+\.?\d*%)?/gi);
    null != $DvtSvgImageFillUtils$$ && 0 < $DvtSvgImageFillUtils$$.length && $dvt$$17$$.$GradientParser$.$_parseColorStops$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$GradientParser$.$_parseColorStops$ = function $$dvt$$17$$$$GradientParser$$$_parseColorStops$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = [], $DvtSvgFilterUtils$$ = [], $DvtSvgFilterContext$$ = [], $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = !0, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$ = [], $DvtContextMenuTooltipItem$$ = 0;$DvtContextMenuTooltipItem$$ < $DvtSvgShadowUtils$$.length;$DvtContextMenuTooltipItem$$++) {
      $DvtDomXmlParser$$ = $dvt$$17$$.$CSSStyle$.$parseBorderColor$($DvtSvgShadowUtils$$[$DvtContextMenuTooltipItem$$], $DvtCustomTooltipItem$$), $DvtSvgImplFactory$$ = $DvtCustomTooltipItem$$.pop(), $DvtSvgFilterUtils$$[$DvtContextMenuTooltipItem$$] = $DvtSvgImplFactory$$, $DvtSvgGradientUtils$$[$DvtContextMenuTooltipItem$$] = $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgImplFactory$$), $DvtDomXmlParser$$ = $dvt$$17$$.$StringUtils$.trim($DvtDomXmlParser$$), 0 < $DvtDomXmlParser$$.length && ($DvtSvgImplFactory$$ = 
      parseFloat($DvtDomXmlParser$$), !isNaN($DvtSvgImplFactory$$) && $dvt$$17$$.$StringUtils$.endsWith($DvtDomXmlParser$$, "%") && ($DvtSvgFilterContext$$[$DvtContextMenuTooltipItem$$] = $DvtSvgImplFactory$$ / 100, $DvtHtmlRichTooltipManager$$ = !1));
    }
    if (1 < $DvtSvgImageFillUtils$$ && $DvtHtmlRichTooltipManager$$) {
      for ($DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgImageFillUtils$$;$DvtHtmlRichTooltipManager$$++) {
        $DvtSvgFilterContext$$[$DvtHtmlRichTooltipManager$$] = $DvtHtmlRichTooltipManager$$ / ($DvtSvgImageFillUtils$$ - 1);
      }
    } else {
      $DvtHtmlRichTooltipManager$$ && ($DvtSvgFilterContext$$[0] = 0);
    }
    $DvtSvgPatternFillUtils$$.$setColors$($DvtSvgFilterUtils$$);
    $DvtSvgPatternFillUtils$$.$setAlphas$($DvtSvgGradientUtils$$);
    $DvtSvgPatternFillUtils$$.$setRatios$($DvtSvgFilterContext$$);
  };
  $dvt$$17$$.$GradientParser$.$_removeParenthesis$ = function $$dvt$$17$$$$GradientParser$$$_removeParenthesis$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (")" != $DvtSvgShadowUtils$$.charAt($DvtSvgShadowUtils$$.length - 1)) {
      return null;
    }
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring($DvtSvgPatternFillUtils$$.length);
    return $dvt$$17$$.$GradientParser$.$removeQuotes$($DvtSvgShadowUtils$$, "(", ")");
  };
  $dvt$$17$$.$GradientParser$.$removeQuotes$ = function $$dvt$$17$$$$GradientParser$$$removeQuotes$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    if ($DvtSvgShadowUtils$$.charAt(0) != $DvtSvgPatternFillUtils$$) {
      return $DvtSvgShadowUtils$$;
    }
    null == $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$);
    $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.lastIndexOf($DvtSvgImageFillUtils$$);
    return 0 > $DvtSvgPatternFillUtils$$ ? $DvtSvgShadowUtils$$.substring(1) : $DvtSvgShadowUtils$$.substring(1, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$GradientParser$.$_startsWith$ = function $$dvt$$17$$$$GradientParser$$$_startsWith$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 0 == $DvtSvgShadowUtils$$.indexOf($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$CSSStyle$ = function $$dvt$$17$$$$CSSStyle$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$CSSStyle$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$CSSStyle$.$SKIN_FUSION$ = "fusion";
  $dvt$$17$$.$CSSStyle$.$SKIN_SKYROS$ = "skyros";
  $dvt$$17$$.$CSSStyle$.$SKIN_ALTA$ = "alta";
  $dvt$$17$$.$CSSStyle$.$SKIN_NEXT$ = "next";
  $dvt$$17$$.$CSSStyle$.$BACKGROUND$ = "background";
  $dvt$$17$$.$CSSStyle$.$BACKGROUND_COLOR$ = "background-color";
  $dvt$$17$$.$CSSStyle$.$BACKGROUND_IMAGE$ = "background-image";
  $dvt$$17$$.$CSSStyle$.$BACKGROUND_REPEAT$ = "background-repeat";
  $dvt$$17$$.$CSSStyle$.$BACKGROUND_POSITION$ = "background-position";
  $dvt$$17$$.$CSSStyle$.$BORDER$ = "border";
  $dvt$$17$$.$CSSStyle$.$BORDER_TOP$ = "border-top";
  $dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM$ = "border-bottom";
  $dvt$$17$$.$CSSStyle$.$BORDER_LEFT$ = "border-left";
  $dvt$$17$$.$CSSStyle$.$BORDER_RIGHT$ = "border-right";
  $dvt$$17$$.$CSSStyle$.$BORDER_WIDTH$ = "border-width";
  $dvt$$17$$.$CSSStyle$.$BORDER_TOP_WIDTH$ = "border-top-width";
  $dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$ = "border-bottom-width";
  $dvt$$17$$.$CSSStyle$.$BORDER_LEFT_WIDTH$ = "border-left-width";
  $dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$ = "border-right-width";
  $dvt$$17$$.$CSSStyle$.$BORDER_COLOR$ = "border-color";
  $dvt$$17$$.$CSSStyle$.$BORDER_TOP_COLOR$ = "border-top-color";
  $dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$ = "border-bottom-color";
  $dvt$$17$$.$CSSStyle$.$BORDER_LEFT_COLOR$ = "border-left-color";
  $dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_COLOR$ = "border-right-color";
  $dvt$$17$$.$CSSStyle$.$BORDER_STYLE$ = "border-style";
  $dvt$$17$$.$CSSStyle$.$BORDER_RADIUS$ = "border-radius";
  $dvt$$17$$.$CSSStyle$.$BORDER_TOP_LEFT_RADIUS$ = "border-top-left-radius";
  $dvt$$17$$.$CSSStyle$.$BORDER_TOP_RIGHT_RADIUS$ = "border-top-right-radius";
  $dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_RIGHT_RADIUS$ = "border-bottom-right-radius";
  $dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_LEFT_RADIUS$ = "border-bottom-left-radius";
  $dvt$$17$$.$CSSStyle$.$MARGIN$ = "margin";
  $dvt$$17$$.$CSSStyle$.$MARGIN_TOP$ = "margin-top";
  $dvt$$17$$.$CSSStyle$.$MARGIN_BOTTOM$ = "margin-bottom";
  $dvt$$17$$.$CSSStyle$.$MARGIN_LEFT$ = "margin-left";
  $dvt$$17$$.$CSSStyle$.$MARGIN_RIGHT$ = "margin-right";
  $dvt$$17$$.$CSSStyle$.$PADDING$ = "padding";
  $dvt$$17$$.$CSSStyle$.$PADDING_TOP$ = "padding-top";
  $dvt$$17$$.$CSSStyle$.$PADDING_BOTTOM$ = "padding-bottom";
  $dvt$$17$$.$CSSStyle$.$PADDING_LEFT$ = "padding-left";
  $dvt$$17$$.$CSSStyle$.$PADDING_RIGHT$ = "padding-right";
  $dvt$$17$$.$CSSStyle$.$COLOR$ = "color";
  $dvt$$17$$.$CSSStyle$.$FONT_FAMILY$ = "font-family";
  $dvt$$17$$.$CSSStyle$.$FONT_SIZE$ = "font-size";
  $dvt$$17$$.$CSSStyle$.$FONT_STYLE$ = "font-style";
  $dvt$$17$$.$CSSStyle$.$FONT_WEIGHT$ = "font-weight";
  $dvt$$17$$.$CSSStyle$.$TEXT_DECORATION$ = "text-decoration";
  $dvt$$17$$.$CSSStyle$.$TEXT_ALIGN$ = "text-align";
  $dvt$$17$$.$CSSStyle$.$BORDER_BOX$ = "border-box";
  $dvt$$17$$.$CSSStyle$.$CONTENT_BOX$ = "content-box";
  $dvt$$17$$.$CSSStyle$.$HEIGHT$ = "height";
  $dvt$$17$$.$CSSStyle$.$WIDTH$ = "width";
  $dvt$$17$$.$CSSStyle$.NONE = "none";
  $dvt$$17$$.$CSSStyle$.$NO_REPEAT$ = "no-repeat";
  $dvt$$17$$.$CSSStyle$.REPEAT = "repeat";
  $dvt$$17$$.$CSSStyle$.$REPEAT_X$ = "repeat-x";
  $dvt$$17$$.$CSSStyle$.$REPEAT_Y$ = "repeat-y";
  $dvt$$17$$.$CSSStyle$.$AUTO$ = "auto";
  $dvt$$17$$.$CSSStyle$.$AUTO_MARGIN$ = "8";
  $dvt$$17$$.$CSSStyle$.$BORDER_TYPE$ = "border-type";
  $dvt$$17$$.$CSSStyle$.$FILL_TYPE$ = "fill-type";
  $dvt$$17$$.$CSSStyle$.$CONTENT$ = "content";
  $dvt$$17$$.$CSSStyle$.$INNER_COLOR$ = "-tr-inner-color";
  $dvt$$17$$.$CSSStyle$.$OUTER_COLOR$ = "-tr-outer-color";
  $dvt$$17$$.$CSSStyle$.$WHITE_SPACE$ = "white-space";
  $dvt$$17$$.$CSSStyle$.$_NAMED_FONT_SIZE_MAP$ = {"xx-small":"9", "x-small":"10", small:"13", medium:"16", large:"18", "x-large":"24", "xx-large":"32"};
  $dvt$$17$$.$CSSStyle$.$_NAMED_WIDTH_MAP$ = {$thin$:"2", $medium$:"4", $thick$:"6"};
  $dvt$$17$$.$CSSStyle$.$_NAMED_COLOR_MAP$ = {aqua:"#00FFFF", black:"#000000", blue:"#0000FF", white:"#FFFFFF", fuchsia:"#FF00FF", gray:"#848284", lime:"#00FF00", maroon:"#840000", green:"#008200", navy:"#000084", olive:"#848200", red:"#FF0000", silver:"#C6C3C6", teal:"#008284", yellow:"#FFFF00", purple:"#800080", cyan:"#D2B48C", goldenrod:"#DAA520", lightblue:"#ADD8E6", lightyellow:"#FFFFE0", orange:"#FFA500", paleGoldenRod:"#EEE8AA", paleturquoise:"#AFEEEE", peachpuff:"#FFDAB9", pink:"#FFC0CB", 
  tan:"#D2B48C", thistle:"#D8BFD8", transparent:"transparent"};
  $dvt$$17$$.$CSSStyle$.$_numericAttrsList$ = [$dvt$$17$$.$CSSStyle$.$WIDTH$, $dvt$$17$$.$CSSStyle$.$HEIGHT$, $dvt$$17$$.$CSSStyle$.$BORDER_WIDTH$, $dvt$$17$$.$CSSStyle$.$BORDER_TOP_WIDTH$, $dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, $dvt$$17$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, $dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, $dvt$$17$$.$CSSStyle$.$MARGIN$, $dvt$$17$$.$CSSStyle$.$MARGIN_TOP$, $dvt$$17$$.$CSSStyle$.$MARGIN_BOTTOM$, $dvt$$17$$.$CSSStyle$.$MARGIN_LEFT$, $dvt$$17$$.$CSSStyle$.$MARGIN_RIGHT$, 
  $dvt$$17$$.$CSSStyle$.$PADDING$, $dvt$$17$$.$CSSStyle$.$PADDING_TOP$, $dvt$$17$$.$CSSStyle$.$PADDING_BOTTOM$, $dvt$$17$$.$CSSStyle$.$PADDING_LEFT$, $dvt$$17$$.$CSSStyle$.$PADDING_RIGHT$];
  $dvt$$17$$.$CSSStyle$.$_DOUBLE_QUOTE$ = '"';
  $dvt$$17$$.$CSSStyle$.$_SINGLE_QUOTE$ = "'";
  $dvt$$17$$.$CSSStyle$.$COLORS_SKYROS$ = "#003366 #CC3300 #666699 #006666 #FF9900 #993366 #99CC33 #624390 #669933 #FFCC33 #006699 #EBEA79".split(" ");
  $dvt$$17$$.$CSSStyle$.$COLORS_ALTA$ = "#267db3 #68c182 #fad55c #ed6647 #8561c8 #6ddbdb #ffb54d #e371b2 #47bdef #a2bf39 #a75dba #f7f37b".split(" ");
  $dvt$$17$$.$CSSStyle$.prototype.Init = function $$dvt$$17$$$$CSSStyle$$$Init$($DvtSvgShadowUtils$$) {
    this.$_styleMap$ = {};
    this.$parseInlineStyle$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$parseInlineStyle$ = function $$dvt$$17$$$$CSSStyle$$$$parseInlineStyle$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this;
    $dvt$$17$$.$CSSStyle$.$_parseStyleString$($DvtSvgShadowUtils$$, function($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) {
      $DvtSvgPatternFillUtils$$.$setStyle$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
    });
  };
  $dvt$$17$$.$CSSStyle$.prototype.$setStyle$ = function $$dvt$$17$$$$CSSStyle$$$$setStyle$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (null == $DvtSvgPatternFillUtils$$) {
      this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    } else {
      switch($DvtSvgShadowUtils$$) {
        case "background-repeat":
          this.$_setBackgroundRepeat$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "color":
        ;
        case "background-color":
        ;
        case "border-top-color":
        ;
        case "border-bottom-color":
        ;
        case "border-left-color":
        ;
        case "border-right-color":
          this.$_setColorAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "border-top":
        ;
        case "border-bottom":
        ;
        case "border-left":
        ;
        case "border-right":
          this.$_setBorderSide$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "border":
          this.$_setBorderShorthand$($DvtSvgPatternFillUtils$$);
          break;
        case "border-color":
          this.$_setBorderColorShorthand$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "border-width":
          this.$_setBorderWidthShorthand$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "border-radius":
          this.$_setBorderRadius$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "padding":
          this.$_setPaddingShorthand$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "margin":
          this.$_setMarginShorthand$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "font-size":
          this.$setFontSize$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case "background-image":
          var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$GradientParser$.$parseCSSGradient$($DvtSvgPatternFillUtils$$);
          $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$);
          this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        case $dvt$$17$$.$GradientParser$.$IE7_GD_FILTER$:
        ;
        case $dvt$$17$$.$GradientParser$.$IE8_GD_FILTER$:
          $DvtSvgImageFillUtils$$ = $dvt$$17$$.$GradientParser$.$removeQuotes$($DvtSvgPatternFillUtils$$, $dvt$$17$$.$CSSStyle$.$_DOUBLE_QUOTE$);
          if ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$GradientParser$.$parseCSSGradient$($DvtSvgImageFillUtils$$)) {
            $DvtSvgShadowUtils$$ = $dvt$$17$$.$CSSStyle$.$BACKGROUND_IMAGE$, $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$;
          }
          this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          break;
        default:
          this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
      }
    }
    return this;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getStyle$ = function $$dvt$$17$$$$CSSStyle$$$$getStyle$$($DvtSvgShadowUtils$$) {
    return this.$_styleMap$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setStyleAttr$ = function $$dvt$$17$$$$CSSStyle$$$$_setStyleAttr$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    null != $DvtSvgPatternFillUtils$$ ? this.$_styleMap$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$ : delete this.$_styleMap$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$CSSStyle$.prototype.$setFontSize$ = function $$dvt$$17$$$$CSSStyle$$$$setFontSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $dvt$$17$$.$CSSStyle$.$_NAMED_FONT_SIZE_MAP$[$DvtSvgImageFillUtils$$];
    $DvtSvgGradientUtils$$ ? this.$_setStyleAttr$($DvtSvgShadowUtils$$, String($DvtSvgGradientUtils$$) + "px") : this.$_setStyleAttr$($DvtSvgShadowUtils$$, isNaN(parseFloat($DvtSvgImageFillUtils$$)) ? $dvt$$17$$.$StyleUtils$.$DEFAULT_FONT_SIZE$ : $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setBorderWidthShorthand$ = function $$dvt$$17$$$$CSSStyle$$$$_setBorderWidthShorthand$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" "), $DvtSvgGradientUtils$$ = null;
    switch($DvtSvgImageFillUtils$$.length) {
      case 1:
        this.$_setStyleAttr$($DvtSvgShadowUtils$$, $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[0]));
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_WIDTH$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, null);
        break;
      case 2:
        $DvtSvgGradientUtils$$ = $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[0]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_WIDTH$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, $DvtSvgGradientUtils$$);
        $DvtSvgGradientUtils$$ = $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, $DvtSvgGradientUtils$$);
        break;
      case 3:
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_WIDTH$, $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[0]));
        $DvtSvgGradientUtils$$ = $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[2]));
        break;
      case 4:
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_WIDTH$, $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[0])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$, $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[1])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$, $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[2])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_LEFT_WIDTH$, $dvt$$17$$.$CSSStyle$.$_getBorderWidth$($DvtSvgImageFillUtils$$[3]));
    }
  };
  $dvt$$17$$.$CSSStyle$.$_getBorderWidth$ = function $$dvt$$17$$$$CSSStyle$$$_getBorderWidth$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$CSSStyle$.$_NAMED_WIDTH_MAP$[$DvtSvgShadowUtils$$];
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = isNaN(parseFloat($DvtSvgShadowUtils$$)) ? "0px" : $DvtSvgShadowUtils$$);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setBorderSide$ = function $$dvt$$17$$$$CSSStyle$$$$_setBorderSide$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" "), $DvtSvgGradientUtils$$ = null, $DvtSvgFilterUtils$$ = !1, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgImplFactory$$++) {
      if ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgImplFactory$$], $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$, 0 == $DvtSvgGradientUtils$$.indexOf("rgb")) {
        for (var $DvtHtmlRichTooltipManager$$ = $DvtSvgImplFactory$$ + 1;$DvtHtmlRichTooltipManager$$ < $DvtSvgImageFillUtils$$.length && ($DvtSvgGradientUtils$$ += $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$], $DvtSvgImplFactory$$++, -1 == $DvtSvgImageFillUtils$$[$DvtHtmlRichTooltipManager$$].indexOf(")"));$DvtHtmlRichTooltipManager$$++) {
        }
        $dvt$$17$$.$StringUtils$.endsWith($DvtSvgShadowUtils$$, "-" + $dvt$$17$$.$CSSStyle$.$COLOR$) || ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$ + "-" + $dvt$$17$$.$CSSStyle$.$COLOR$);
        this.$_setStyleAttr$($DvtSvgFilterContext$$, $DvtSvgGradientUtils$$);
      } else {
        $dvt$$17$$.$CSSStyle$.$_isColorValue$($DvtSvgGradientUtils$$) ? ($dvt$$17$$.$StringUtils$.endsWith($DvtSvgShadowUtils$$, "-" + $dvt$$17$$.$CSSStyle$.$COLOR$) || ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$ + "-" + $dvt$$17$$.$CSSStyle$.$COLOR$), this.$_setStyleAttr$($DvtSvgFilterContext$$, $dvt$$17$$.$CSSStyle$.$_parseHexColor$($DvtSvgGradientUtils$$))) : $dvt$$17$$.$CSSStyle$.$_isBorderWidthValue$($DvtSvgGradientUtils$$) ? ($dvt$$17$$.$StringUtils$.endsWith($DvtSvgShadowUtils$$, "-" + 
        $dvt$$17$$.$CSSStyle$.$WIDTH$) || ($DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$ + "-" + $dvt$$17$$.$CSSStyle$.$WIDTH$), this.$_setStyleAttr$($DvtSvgFilterContext$$, $DvtSvgGradientUtils$$)) : "none" == $DvtSvgPatternFillUtils$$ && ($DvtSvgFilterUtils$$ = !0);
      }
    }
    $DvtSvgFilterUtils$$ && this.$_setStyleAttr$($DvtSvgShadowUtils$$ + "-" + $dvt$$17$$.$CSSStyle$.$WIDTH$, "0");
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getBorderSideWidth$ = function $$dvt$$17$$$$CSSStyle$$$$getBorderSideWidth$$($DvtSvgShadowUtils$$) {
    return this.$_getSideWidth$($DvtSvgShadowUtils$$, $dvt$$17$$.$CSSStyle$.$BORDER_WIDTH$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getMargin$ = function $$dvt$$17$$$$CSSStyle$$$$getMargin$$($DvtSvgShadowUtils$$) {
    return this.$_getSideWidth$($DvtSvgShadowUtils$$, $dvt$$17$$.$CSSStyle$.$MARGIN$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getPadding$ = function $$dvt$$17$$$$CSSStyle$$$$getPadding$$($DvtSvgShadowUtils$$) {
    return this.$_getSideWidth$($DvtSvgShadowUtils$$, $dvt$$17$$.$CSSStyle$.$PADDING$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getBorderWidth$ = function $$dvt$$17$$$$CSSStyle$$$$getBorderWidth$$() {
    var $DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_WIDTH$);
    return $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_WIDTH$)) || ($DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_WIDTH$)) || ($DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_WIDTH$)) ? $dvt$$17$$.$CSSStyle$.$toNumber$($DvtSvgShadowUtils$$) : ($DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_LEFT_WIDTH$)) ? $dvt$$17$$.$CSSStyle$.$toNumber$($DvtSvgShadowUtils$$) : 0;
  };
  $dvt$$17$$.$CSSStyle$.prototype.getWidth = function $$dvt$$17$$$$CSSStyle$$$getWidth$() {
    return this.$getStyle$($dvt$$17$$.$CSSStyle$.$WIDTH$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.getHeight = function $$dvt$$17$$$$CSSStyle$$$getHeight$() {
    return this.$getStyle$($dvt$$17$$.$CSSStyle$.$HEIGHT$);
  };
  $dvt$$17$$.$CSSStyle$.$toNumber$ = function $$dvt$$17$$$$CSSStyle$$$toNumber$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ ? ($DvtSvgShadowUtils$$ = parseFloat($DvtSvgShadowUtils$$), isNaN($DvtSvgShadowUtils$$) ? 0 : $DvtSvgShadowUtils$$) : 0;
  };
  $dvt$$17$$.$CSSStyle$.$isInheritable$ = function $$dvt$$17$$$$CSSStyle$$$isInheritable$$($DvtSvgShadowUtils$$) {
    switch($DvtSvgShadowUtils$$) {
      case $dvt$$17$$.$CSSStyle$.$COLOR$:
      ;
      case $dvt$$17$$.$CSSStyle$.$FONT_FAMILY$:
      ;
      case $dvt$$17$$.$CSSStyle$.$FONT_SIZE$:
      ;
      case $dvt$$17$$.$CSSStyle$.$FONT_STYLE$:
      ;
      case $dvt$$17$$.$CSSStyle$.$FONT_WEIGHT$:
      ;
      case $dvt$$17$$.$CSSStyle$.$TEXT_ALIGN$:
        return !0;
      default:
        return !1;
    }
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setBorderColorShorthand$ = function $$dvt$$17$$$$CSSStyle$$$$_setBorderColorShorthand$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$CSSStyle$.$_parseBorderColorString$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$;
    switch($DvtSvgImageFillUtils$$.length) {
      case 1:
        this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$[0]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_COLOR$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_COLOR$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_LEFT_COLOR$, null);
        break;
      case 2:
        $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[0];
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_COLOR$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$, $DvtSvgGradientUtils$$);
        $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[1];
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_LEFT_COLOR$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_COLOR$, $DvtSvgGradientUtils$$);
        break;
      case 3:
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_COLOR$, $DvtSvgImageFillUtils$$[0]);
        $DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$[1];
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_LEFT_COLOR$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_COLOR$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$, $DvtSvgImageFillUtils$$[2]);
        break;
      case 4:
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_COLOR$, $DvtSvgImageFillUtils$$[0]), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_RIGHT_COLOR$, $DvtSvgImageFillUtils$$[1]), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_COLOR$, $DvtSvgImageFillUtils$$[2]), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_LEFT_COLOR$, $DvtSvgImageFillUtils$$[3]);
    }
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setPaddingShorthand$ = function $$dvt$$17$$$$CSSStyle$$$$_setPaddingShorthand$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" "), $DvtSvgGradientUtils$$ = null;
    switch($DvtSvgImageFillUtils$$.length) {
      case 1:
        this.$_setStyleAttr$($DvtSvgShadowUtils$$, this.$_getPercent$($DvtSvgImageFillUtils$$[0]));
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_TOP$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_BOTTOM$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_RIGHT$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_LEFT$, null);
        break;
      case 2:
        $DvtSvgGradientUtils$$ = this.$_getPercent$($DvtSvgImageFillUtils$$[0]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_TOP$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_BOTTOM$, $DvtSvgGradientUtils$$);
        $DvtSvgGradientUtils$$ = this.$_getPercent$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_LEFT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_RIGHT$, $DvtSvgGradientUtils$$);
        break;
      case 3:
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_TOP$, this.$_getPercent$($DvtSvgImageFillUtils$$[0]));
        $DvtSvgGradientUtils$$ = this.$_getPercent$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_LEFT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_RIGHT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_BOTTOM$, this.$_getPercent$($DvtSvgImageFillUtils$$[2]));
        break;
      case 4:
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_TOP$, this.$_getPercent$($DvtSvgImageFillUtils$$[0])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_RIGHT$, this.$_getPercent$($DvtSvgImageFillUtils$$[1])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_BOTTOM$, this.$_getPercent$($DvtSvgImageFillUtils$$[2])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$PADDING_LEFT$, this.$_getPercent$($DvtSvgImageFillUtils$$[3]));
    }
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setMarginShorthand$ = function $$dvt$$17$$$$CSSStyle$$$$_setMarginShorthand$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" "), $DvtSvgGradientUtils$$ = null;
    switch($DvtSvgImageFillUtils$$.length) {
      case 1:
        this.$_setStyleAttr$($DvtSvgShadowUtils$$, this.$_getMargin$($DvtSvgImageFillUtils$$[0]));
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_TOP$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_BOTTOM$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_RIGHT$, null);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_LEFT$, null);
        break;
      case 2:
        $DvtSvgGradientUtils$$ = this.$_getMargin$($DvtSvgImageFillUtils$$[0]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_TOP$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_BOTTOM$, $DvtSvgGradientUtils$$);
        $DvtSvgGradientUtils$$ = this.$_getMargin$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_LEFT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_RIGHT$, $DvtSvgGradientUtils$$);
        break;
      case 3:
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_TOP$, this.$_getMargin$($DvtSvgImageFillUtils$$[0]));
        $DvtSvgGradientUtils$$ = this.$_getMargin$($DvtSvgImageFillUtils$$[1]);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_LEFT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_RIGHT$, $DvtSvgGradientUtils$$);
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_BOTTOM$, this.$_getMargin$($DvtSvgImageFillUtils$$[2]));
        break;
      case 4:
        this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_TOP$, this.$_getMargin$($DvtSvgImageFillUtils$$[0])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_RIGHT$, this.$_getMargin$($DvtSvgImageFillUtils$$[1])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_BOTTOM$, this.$_getMargin$($DvtSvgImageFillUtils$$[2])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$MARGIN_LEFT$, this.$_getMargin$($DvtSvgImageFillUtils$$[3]));
    }
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_getMargin$ = function $$dvt$$17$$$$CSSStyle$$$$_getMargin$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return $dvt$$17$$.$CSSStyle$.$AUTO$ == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$CSSStyle$.$AUTO_MARGIN$ : this.$_getPercent$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_getPercent$ = function $$dvt$$17$$$$CSSStyle$$$$_getPercent$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setBorderShorthand$ = function $$dvt$$17$$$$CSSStyle$$$$_setBorderShorthand$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.split(" "), $DvtSvgImageFillUtils$$ = null, $DvtSvgGradientUtils$$ = !1, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++) {
      if ($DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$], 0 == $DvtSvgImageFillUtils$$.indexOf("rgb")) {
        for (var $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$ + 1;$DvtSvgFilterContext$$ < $DvtSvgPatternFillUtils$$.length && ($DvtSvgImageFillUtils$$ += $DvtSvgPatternFillUtils$$[$DvtSvgFilterContext$$], $DvtSvgFilterUtils$$++, -1 == $DvtSvgPatternFillUtils$$[$DvtSvgFilterContext$$].indexOf(")"));$DvtSvgFilterContext$$++) {
        }
        this.$_setBorderColorShorthand$($dvt$$17$$.$CSSStyle$.$BORDER_COLOR$, $DvtSvgImageFillUtils$$);
      } else {
        $dvt$$17$$.$CSSStyle$.$_isColorValue$($DvtSvgImageFillUtils$$) ? this.$_setBorderColorShorthand$($dvt$$17$$.$CSSStyle$.$BORDER_COLOR$, $DvtSvgImageFillUtils$$) : $dvt$$17$$.$CSSStyle$.$_isBorderWidthValue$($DvtSvgImageFillUtils$$) ? this.$_setBorderWidthShorthand$($dvt$$17$$.$CSSStyle$.$BORDER_WIDTH$, $DvtSvgImageFillUtils$$) : "none" == $DvtSvgShadowUtils$$ && ($DvtSvgGradientUtils$$ = !0);
      }
    }
    $DvtSvgGradientUtils$$ && this.$_setBorderWidthShorthand$($dvt$$17$$.$CSSStyle$.$BORDER_WIDTH$, "0");
  };
  $dvt$$17$$.$CSSStyle$.$_getBorderRadius$ = function $$dvt$$17$$$$CSSStyle$$$_getBorderRadius$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return isNaN(parseFloat($DvtSvgShadowUtils$$)) ? "0px" : $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setBorderRadius$ = function $$dvt$$17$$$$CSSStyle$$$$_setBorderRadius$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split("/");
    if (null == $DvtSvgImageFillUtils$$[0]) {
      this.$_setStyleAttr$($DvtSvgShadowUtils$$, "0px");
    } else {
      var $DvtSvgGradientUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgImageFillUtils$$[0]).split(" ");
      switch($DvtSvgGradientUtils$$.length) {
        default:
          this.$_setStyleAttr$($DvtSvgShadowUtils$$, $dvt$$17$$.$CSSStyle$.$_getBorderRadius$($DvtSvgGradientUtils$$[0])), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_LEFT_RADIUS$, null), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_TOP_RIGHT_RADIUS$, null), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_RIGHT_RADIUS$, null), this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$BORDER_BOTTOM_LEFT_RADIUS$, null);
      }
      if (2 == $DvtSvgImageFillUtils$$.length && null != $DvtSvgImageFillUtils$$[1]) {
        switch($DvtSvgImageFillUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgImageFillUtils$$[1]).split(" "), $DvtSvgImageFillUtils$$.length) {
          case 1:
            this.$getStyle$($DvtSvgShadowUtils$$) ? this.$_setStyleAttr$($DvtSvgShadowUtils$$, this.$getStyle$($DvtSvgShadowUtils$$) + " " + $dvt$$17$$.$CSSStyle$.$_getBorderRadius$($DvtSvgImageFillUtils$$[0])) : this.$_setStyleAttr$($DvtSvgShadowUtils$$, $dvt$$17$$.$CSSStyle$.$_getBorderRadius$($DvtSvgImageFillUtils$$[0]));
        }
      }
    }
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getBorderRadius$ = function $$dvt$$17$$$$CSSStyle$$$$getBorderRadius$$() {
    return "undefined" !== this.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_RADIUS$) && null !== this.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_RADIUS$) ? $dvt$$17$$.$CSSStyle$.$toNumber$(this.$getStyle$($dvt$$17$$.$CSSStyle$.$BORDER_RADIUS$)) : 0;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setBackgroundRepeat$ = function $$dvt$$17$$$$CSSStyle$$$$_setBackgroundRepeat$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.split(" ");
    2 == $DvtSvgImageFillUtils$$.length && ($DvtSvgImageFillUtils$$[0] == $DvtSvgImageFillUtils$$[1] ? $DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$[0] : $DvtSvgImageFillUtils$$[0] == $dvt$$17$$.$CSSStyle$.REPEAT && $DvtSvgImageFillUtils$$[1] == $dvt$$17$$.$CSSStyle$.$NO_REPEAT$ && ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$CSSStyle$.$REPEAT_X$), $DvtSvgImageFillUtils$$[0] == $dvt$$17$$.$CSSStyle$.$NO_REPEAT$ && $DvtSvgImageFillUtils$$[1] == $dvt$$17$$.$CSSStyle$.REPEAT && ($DvtSvgPatternFillUtils$$ = 
    $dvt$$17$$.$CSSStyle$.$REPEAT_Y$));
    this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_setColorAttr$ = function $$dvt$$17$$$$CSSStyle$$$$_setColorAttr$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$CSSStyle$.$_toColorVal$($DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$ ? this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) : $dvt$$17$$.$CSSStyle$.$_isColorValue$($DvtSvgPatternFillUtils$$) && this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$CSSStyle$.$_toColorVal$ = function $$dvt$$17$$$$CSSStyle$$$_toColorVal$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return ($DvtSvgShadowUtils$$ = $dvt$$17$$.$CSSStyle$.$_NAMED_COLOR_MAP$[$DvtSvgShadowUtils$$.toLowerCase()]) ? $DvtSvgShadowUtils$$ : null;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$setColor$ = function $$dvt$$17$$$$CSSStyle$$$$setColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_setStyleAttr$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$CSSStyle$.$_isValueInEM$ = function $$dvt$$17$$$$CSSStyle$$$_isValueInEM$$($DvtSvgShadowUtils$$) {
    return 0 <= $DvtSvgShadowUtils$$.toLowerCase().indexOf("em");
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_resolveEMx$ = function $$dvt$$17$$$$CSSStyle$$$$_resolveEMx$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getStyle$($DvtSvgShadowUtils$$);
    return $DvtSvgImageFillUtils$$ && $dvt$$17$$.$CSSStyle$.$_isValueInEM$($DvtSvgImageFillUtils$$) ? $DvtSvgPatternFillUtils$$ ? (this.$_setStyleAttr$($DvtSvgShadowUtils$$, String(Math.round(parseFloat($DvtSvgImageFillUtils$$) * parseFloat($DvtSvgPatternFillUtils$$))) + "px"), !0) : !1 : !0;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getAbsoluteFontSize$ = function $$dvt$$17$$$$CSSStyle$$$$getAbsoluteFontSize$$() {
    var $DvtSvgShadowUtils$$ = this.$getFontSize$();
    return $DvtSvgShadowUtils$$ && !$dvt$$17$$.$CSSStyle$.$_isValueInEM$($DvtSvgShadowUtils$$) ? $DvtSvgShadowUtils$$ : null;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$resolveEM$ = function $$dvt$$17$$$$CSSStyle$$$$resolveEM$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getFontSize$();
    $DvtSvgPatternFillUtils$$ && ($dvt$$17$$.$CSSStyle$.$_isValueInEM$($DvtSvgPatternFillUtils$$) ? this.$_resolveEMx$($dvt$$17$$.$CSSStyle$.$FONT_SIZE$, $DvtSvgShadowUtils$$) : $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$);
    for (var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$CSSStyle$.$_numericAttrsList$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length && this.$_resolveEMx$($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgShadowUtils$$);$DvtSvgImageFillUtils$$++) {
    }
  };
  $dvt$$17$$.$CSSStyle$.prototype.clone = function $$dvt$$17$$$$CSSStyle$$$clone$() {
    var $DvtSvgShadowUtils$$ = new $dvt$$17$$.$CSSStyle$, $DvtSvgPatternFillUtils$$;
    for ($DvtSvgPatternFillUtils$$ in this.$_styleMap$) {
      $DvtSvgShadowUtils$$.$_setStyleAttr$($DvtSvgPatternFillUtils$$, this.$getStyle$($DvtSvgPatternFillUtils$$));
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$merge$ = function $$dvt$$17$$$$CSSStyle$$$$merge$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      for (var $DvtSvgPatternFillUtils$$ in $DvtSvgShadowUtils$$.$_styleMap$) {
        this.$_setStyleAttr$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.$getStyle$($DvtSvgPatternFillUtils$$));
      }
    }
    return this;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$mergeUnder$ = function $$dvt$$17$$$$CSSStyle$$$$mergeUnder$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      for (var $DvtSvgPatternFillUtils$$ in $DvtSvgShadowUtils$$.$_styleMap$) {
        this.$getStyle$($DvtSvgPatternFillUtils$$) || this.$_setStyleAttr$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.$getStyle$($DvtSvgPatternFillUtils$$));
      }
    }
    return this;
  };
  $dvt$$17$$.$CSSStyle$.prototype.toString = function $$dvt$$17$$$$CSSStyle$$$toString$() {
    var $DvtSvgShadowUtils$$ = "", $DvtSvgPatternFillUtils$$;
    for ($DvtSvgPatternFillUtils$$ in this.$_styleMap$) {
      $DvtSvgShadowUtils$$ += $DvtSvgPatternFillUtils$$ + ":" + this.$getStyle$($DvtSvgPatternFillUtils$$) + "; ";
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getBackgroundImage$ = function $$dvt$$17$$$$CSSStyle$$$$getBackgroundImage$$() {
    var $DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$17$$.$CSSStyle$.$BACKGROUND_IMAGE$), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$;
    if ($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$CSSGradient$) {
      return $DvtSvgShadowUtils$$;
    }
    $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.indexOf("url("), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.lastIndexOf(")"), 0 == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$.length - 1 && ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(4, $DvtSvgImageFillUtils$$)));
    $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.indexOf($dvt$$17$$.$CSSStyle$.$_SINGLE_QUOTE$), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.lastIndexOf($dvt$$17$$.$CSSStyle$.$_SINGLE_QUOTE$), 0 == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$.length - 1 ? $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(1, $DvtSvgImageFillUtils$$) : ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.indexOf($dvt$$17$$.$CSSStyle$.$_DOUBLE_QUOTE$), 
    $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.lastIndexOf($dvt$$17$$.$CSSStyle$.$_DOUBLE_QUOTE$), 0 == $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$ == $DvtSvgShadowUtils$$.length - 1 && ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.substring(1, $DvtSvgImageFillUtils$$))));
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.$_isColorValue$ = function $$dvt$$17$$$$CSSStyle$$$_isColorValue$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return 0 == $DvtSvgShadowUtils$$.indexOf("rgb") || 0 == $DvtSvgShadowUtils$$.indexOf("#") || $dvt$$17$$.$CSSStyle$.$_NAMED_COLOR_MAP$[$DvtSvgShadowUtils$$.toLowerCase()] ? !0 : !1;
  };
  $dvt$$17$$.$CSSStyle$.$_isBorderWidthValue$ = function $$dvt$$17$$$$CSSStyle$$$_isBorderWidthValue$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    return $dvt$$17$$.$CSSStyle$.$_NAMED_WIDTH_MAP$[$DvtSvgShadowUtils$$] ? !0 : !isNaN(parseFloat($DvtSvgShadowUtils$$));
  };
  $dvt$$17$$.$CSSStyle$.$_parseBorderColorString$ = function $$dvt$$17$$$$CSSStyle$$$_parseBorderColorString$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    for (var $DvtSvgPatternFillUtils$$ = [];null != $DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length;) {
      $DvtSvgShadowUtils$$ = $dvt$$17$$.$CSSStyle$.$parseBorderColor$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.$parseBorderColor$ = function $$dvt$$17$$$$CSSStyle$$$parseBorderColor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$);
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.length, $DvtSvgGradientUtils$$ = -1;
    if (!$DvtSvgShadowUtils$$) {
      return $DvtSvgShadowUtils$$;
    }
    if (0 == $DvtSvgShadowUtils$$.indexOf("rgb")) {
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.indexOf(")") + 1, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.slice(0, $DvtSvgGradientUtils$$);
    } else {
      $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.indexOf(" ");
      -1 == $DvtSvgGradientUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$);
      var $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.slice(0, $DvtSvgGradientUtils$$);
      ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$CSSStyle$.$_toColorVal$($DvtSvgFilterUtils$$)) || ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$CSSStyle$.$_parseHexColor$($DvtSvgFilterUtils$$));
    }
    $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$.push($DvtSvgImageFillUtils$$), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.slice($DvtSvgGradientUtils$$));
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.$_parseHexColor$ = function $$dvt$$17$$$$CSSStyle$$$_parseHexColor$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length && ($DvtSvgPatternFillUtils$$ = 7 < $DvtSvgShadowUtils$$.length ? "#" + $DvtSvgShadowUtils$$.substring(3) : $DvtSvgShadowUtils$$);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$_getSideWidth$ = function $$dvt$$17$$$$CSSStyle$$$$_getSideWidth$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getStyle$($DvtSvgShadowUtils$$);
    $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = this.$getStyle$($DvtSvgPatternFillUtils$$));
    return $dvt$$17$$.$CSSStyle$.$toNumber$($DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getFontSize$ = function $$dvt$$17$$$$CSSStyle$$$$getFontSize$$() {
    return this.$getStyle$($dvt$$17$$.$CSSStyle$.$FONT_SIZE$);
  };
  $dvt$$17$$.$CSSStyle$.$mergeStyles$ = function $$dvt$$17$$$$CSSStyle$$$mergeStyles$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$CSSStyle$;
    if ($DvtSvgShadowUtils$$) {
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgPatternFillUtils$$.$merge$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]);
      }
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$isEmpty$ = function $$dvt$$17$$$$CSSStyle$$$$isEmpty$$() {
    for (var $DvtSvgShadowUtils$$ in this.$_styleMap$) {
      return !1;
    }
    return !0;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$isTextAlignEnd$ = function $$dvt$$17$$$$CSSStyle$$$$isTextAlignEnd$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getStyle$($dvt$$17$$.$CSSStyle$.$TEXT_ALIGN$);
    return "end" == $DvtSvgPatternFillUtils$$ ? !0 : $dvt$$17$$.$Agent$.$isRightToLeft$($DvtSvgShadowUtils$$) ? "left" == $DvtSvgPatternFillUtils$$ : "right" == $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$parseBackgroundPosition$ = function $$dvt$$17$$$$CSSStyle$$$$parseBackgroundPosition$$() {
    var $DvtSvgShadowUtils$$ = this.$getStyle$($dvt$$17$$.$CSSStyle$.$BACKGROUND_POSITION$);
    if (!$DvtSvgShadowUtils$$) {
      return null;
    }
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.split(" ");
    if (0 == $DvtSvgShadowUtils$$.length) {
      return ["0%", "0%"];
    }
    var $DvtSvgPatternFillUtils$$ = ["50%", "50%"], $DvtSvgImageFillUtils$$;
    0 < $DvtSvgShadowUtils$$.length && ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$[0]), "left" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[0] = "0%" : "right" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[0] = "100%" : "top" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[1] = "0%" : "bottom" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[1] = "100%" : "center" != $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$[0] = $DvtSvgImageFillUtils$$));
    1 < $DvtSvgShadowUtils$$.length && ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgShadowUtils$$[1]), "left" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[0] = "0%" : "right" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[0] = "100%" : "top" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[1] = "0%" : "bottom" == $DvtSvgImageFillUtils$$ ? $DvtSvgPatternFillUtils$$[1] = "100%" : "center" != $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$[1] = $DvtSvgImageFillUtils$$));
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.prototype.$getIconUrl$ = function $$dvt$$17$$$$CSSStyle$$$$getIconUrl$$() {
    return this.$getStyle$($dvt$$17$$.$CSSStyle$.$CONTENT$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$setIconUrl$ = function $$dvt$$17$$$$CSSStyle$$$$setIconUrl$$($DvtSvgShadowUtils$$) {
    this.$_setStyleAttr$($dvt$$17$$.$CSSStyle$.$CONTENT$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$CSSStyle$.prototype.$hashCodeForTextMeasurement$ = function $$dvt$$17$$$$CSSStyle$$$$hashCodeForTextMeasurement$$() {
    for (var $DvtSvgShadowUtils$$ = "", $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$CSSStyle$.$getTextMeasurementProperties$(), $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      this.$getStyle$($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]) && ($DvtSvgShadowUtils$$ += this.$getStyle$($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$]));
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.$getTextMeasurementProperties$ = function $$dvt$$17$$$$CSSStyle$$$getTextMeasurementProperties$$() {
    return [$dvt$$17$$.$CSSStyle$.$FONT_FAMILY$, $dvt$$17$$.$CSSStyle$.$FONT_SIZE$, $dvt$$17$$.$CSSStyle$.$FONT_STYLE$, $dvt$$17$$.$CSSStyle$.$FONT_WEIGHT$];
  };
  $dvt$$17$$.$CSSStyle$.$afterSkinAlta$ = function $$dvt$$17$$$$CSSStyle$$$afterSkinAlta$$($DvtSvgShadowUtils$$) {
    return null != $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$ != $dvt$$17$$.$CSSStyle$.$SKIN_FUSION$ && $DvtSvgShadowUtils$$ != $dvt$$17$$.$CSSStyle$.$SKIN_SKYROS$;
  };
  $dvt$$17$$.$CSSStyle$.$cssObjectToString$ = function $$dvt$$17$$$$CSSStyle$$$cssObjectToString$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = "";
    $DvtSvgShadowUtils$$ && JSON.parse(JSON.stringify($DvtSvgShadowUtils$$), function($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) {
      $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(), $DvtSvgPatternFillUtils$$ += $DvtSvgShadowUtils$$ + ":" + $DvtSvgImageFillUtils$$ + ";");
    });
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.$cssStringToObject$ = function $$dvt$$17$$$$CSSStyle$$$cssStringToObject$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = {};
    $dvt$$17$$.$CSSStyle$.$_parseStyleString$($DvtSvgShadowUtils$$, function($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) {
      $DvtSvgShadowUtils$$ = $dvt$$17$$.$CSSStyle$.$cssStringToObjectProperty$($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$[$DvtSvgShadowUtils$$] = $DvtSvgImageFillUtils$$;
    });
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.$cssStringToObjectProperty$ = function $$dvt$$17$$$$CSSStyle$$$cssStringToObjectProperty$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/-([a-z])/g, function($DvtSvgShadowUtils$$) {
      return $DvtSvgShadowUtils$$[1].toUpperCase();
    }));
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CSSStyle$.$_parseStyleString$ = function $$dvt$$17$$$$CSSStyle$$$_parseStyleString$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length) {
      for (var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.split(";"), $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
        if ($DvtSvgFilterUtils$$ && 0 < $DvtSvgFilterUtils$$.length) {
          var $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.indexOf(":");
          if (-1 < $DvtSvgFilterContext$$) {
            var $DvtSvgImplFactory$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgFilterUtils$$.substring(0, $DvtSvgFilterContext$$)), $DvtSvgFilterUtils$$ = $dvt$$17$$.$StringUtils$.trim($DvtSvgFilterUtils$$.substring($DvtSvgFilterContext$$ + 1));
            $DvtSvgImplFactory$$ && 0 < $DvtSvgImplFactory$$.length && $DvtSvgFilterUtils$$ && 0 < $DvtSvgFilterUtils$$.length && ($DvtSvgImplFactory$$ == $dvt$$17$$.$CSSStyle$.$BACKGROUND_IMAGE$ && 0 <= $DvtSvgFilterUtils$$.indexOf("data:image/") && ($DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$ + ";" + $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$ + 1], $DvtSvgGradientUtils$$++), $DvtSvgPatternFillUtils$$($DvtSvgImplFactory$$, $DvtSvgFilterUtils$$));
          }
        }
      }
    }
  };
  $dvt$$17$$.$BaseComponent$ = function $$dvt$$17$$$$BaseComponent$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$BaseComponent$, $dvt$$17$$.$Container$);
  $dvt$$17$$.$BaseComponent$.prototype.Init = function $$dvt$$17$$$$BaseComponent$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$BaseComponent$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$;
    this.$Options$ = this.$Defaults$ = null;
    this.$Height$ = this.$Width$ = 0;
    this.$Animation$ = this.$EventManager$ = null;
    this.$AnimationStopped$ = !1;
    this.$_optionsCache$ = new $dvt$$17$$.$BaseComponentCache$;
    this.$_cache$ = new $dvt$$17$$.$BaseComponentCache$;
  };
  $dvt$$17$$.$BaseComponent$.prototype.$GetDefaults$ = function $$dvt$$17$$$$BaseComponent$$$$GetDefaults$$() {
    return this.$Defaults$ ? this.$Defaults$.$getDefaults$(void 0) : {};
  };
  $dvt$$17$$.$BaseComponent$.prototype.$GetComponentDescription$ = function $$dvt$$17$$$$BaseComponent$$$$GetComponentDescription$$() {
    return $dvt$$17$$.$Bundle$.$getTranslation$(this.$getOptions$(), "componentName");
  };
  $dvt$$17$$.$BaseComponent$.prototype.$IsParentRoot$ = function $$dvt$$17$$$$BaseComponent$$$$IsParentRoot$$() {
    return this.getParent() == this.$getCtx$().$_stage$;
  };
  $dvt$$17$$.$BaseComponent$.prototype.$UpdateAriaAttributes$ = function $$dvt$$17$$$$BaseComponent$$$$UpdateAriaAttributes$$() {
    this.$IsParentRoot$() && (this.$getCtx$().$setAriaRole$("application"), this.$getCtx$().$setAriaLabel$($dvt$$17$$.$Bundle$.$getTranslatedString$($dvt$$17$$.$Bundle$.$UTIL_PREFIX$, "COLON_SEP_LIST", [$dvt$$17$$.$Bundle$.$getTranslatedString$($dvt$$17$$.$Bundle$.$UTIL_PREFIX$, "DATA_VISUALIZATION"), $dvt$$17$$.$StringUtils$.$processAriaLabel$(this.$GetComponentDescription$())])));
  };
  $dvt$$17$$.$BaseComponent$.prototype.$SetOptions$ = function $$dvt$$17$$$$BaseComponent$$$$SetOptions$$() {
  };
  $dvt$$17$$.$BaseComponent$.prototype.$getOptions$ = function $$dvt$$17$$$$BaseComponent$$$$getOptions$$() {
    this.$Options$ || (this.$Options$ = this.$GetDefaults$());
    return this.$Options$;
  };
  $dvt$$17$$.$BaseComponent$.prototype.$applyOptions$ = function $$dvt$$17$$$$BaseComponent$$$$applyOptions$$($DvtSvgShadowUtils$$) {
    this.$Options$ && $DvtSvgShadowUtils$$ && this.$SetOptions$($dvt$$17$$.$JsonUtils$.$merge$($DvtSvgShadowUtils$$, this.$Options$));
  };
  $dvt$$17$$.$BaseComponent$.prototype.$render$ = function $$dvt$$17$$$$BaseComponent$$$$render$$() {
  };
  $dvt$$17$$.$BaseComponent$.prototype.$RenderComplete$ = function $$dvt$$17$$$$BaseComponent$$$$RenderComplete$$() {
    this.$Animation$ = null;
    this.$AnimationStopped$ = !1;
    this.dispatchEvent($dvt$$17$$.$EventFactory$.$newReadyEvent$());
  };
  $dvt$$17$$.$BaseComponent$.prototype.getWidth = function $$dvt$$17$$$$BaseComponent$$$getWidth$() {
    return this.$Width$;
  };
  $dvt$$17$$.$BaseComponent$.prototype.getHeight = function $$dvt$$17$$$$BaseComponent$$$getHeight$() {
    return this.$Height$;
  };
  $dvt$$17$$.$BaseComponent$.prototype.$highlight$ = function $$dvt$$17$$$$BaseComponent$$$$highlight$$() {
  };
  $dvt$$17$$.$BaseComponent$.prototype.select = function $$dvt$$17$$$$BaseComponent$$$select$() {
  };
  $dvt$$17$$.$BaseComponent$.prototype.dispatchEvent = function $$dvt$$17$$$$BaseComponent$$$dispatchEvent$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, this, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BaseComponent$.prototype.$getDimensionsWithStroke$ = function $$dvt$$17$$$$BaseComponent$$$$getDimensionsWithStroke$$($DvtSvgShadowUtils$$) {
    return this.$getDimensions$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$BaseComponent$.prototype.$getEventManager$ = function $$dvt$$17$$$$BaseComponent$$$$getEventManager$$() {
    return this.$EventManager$;
  };
  $dvt$$17$$.$BaseComponent$.prototype.$getKeyboardFocus$ = function $$dvt$$17$$$$BaseComponent$$$$getKeyboardFocus$$() {
    var $DvtSvgShadowUtils$$ = this.$getEventManager$();
    return $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.$getFocus$() ? $DvtSvgShadowUtils$$.$getFocus$().$getTargetElem$() : null : null;
  };
  $dvt$$17$$.$BaseComponent$.prototype.$StopAnimation$ = function $$dvt$$17$$$$BaseComponent$$$$StopAnimation$$($DvtSvgShadowUtils$$) {
    this.$Animation$ && (this.$AnimationStopped$ = !0, this.$Animation$.stop($DvtSvgShadowUtils$$ || !1), this.$Animation$ = null);
  };
  $dvt$$17$$.$BaseComponent$.prototype.$destroy$ = function $$dvt$$17$$$$BaseComponent$$$$destroy$$() {
    this.$StopAnimation$();
    this.$EventManager$ && (this.$EventManager$.$removeListeners$(this), this.$EventManager$.$destroy$(), this.$EventManager$ = null);
    $dvt$$17$$.$BaseComponent$.$superclass$.$destroy$.call(this);
  };
  $dvt$$17$$.$BaseComponentDefaults$ = function $$dvt$$17$$$$BaseComponentDefaults$$() {
    this.Init();
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$BaseComponentDefaults$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE$ = "font-size: ";
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_11$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE$ + "11px;";
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_12$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE$ + "12px;";
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_13$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE$ + "13px;";
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_14$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE$ + "14px;";
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_WEIGHT_BOLD$ = "font-weight: bold;";
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_SKYROS$ = "font-family: tahoma, sans-serif;";
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ = "font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;";
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_11$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_11$;
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_12$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_12$;
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_13$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_13$;
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_14$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_14$;
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA$ + $dvt$$17$$.$BaseComponentDefaults$.$FONT_WEIGHT_BOLD$;
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD_11$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ + $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_11$;
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD_12$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ + $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_12$;
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD_13$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ + $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_13$;
  $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD_14$ = $dvt$$17$$.$BaseComponentDefaults$.$FONT_FAMILY_ALTA_BOLD$ + $dvt$$17$$.$BaseComponentDefaults$.$FONT_SIZE_14$;
  $dvt$$17$$.$BaseComponentDefaults$.$_SKINS$ = [$dvt$$17$$.$CSSStyle$.$SKIN_FUSION$, $dvt$$17$$.$CSSStyle$.$SKIN_SKYROS$, $dvt$$17$$.$CSSStyle$.$SKIN_ALTA$, $dvt$$17$$.$CSSStyle$.$SKIN_NEXT$];
  $dvt$$17$$.$BaseComponentDefaults$.prototype.Init = function $$dvt$$17$$$$BaseComponentDefaults$$$Init$($DvtSvgShadowUtils$$) {
    this.$_defaults$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : {};
    this.constructor.$defaultsCache$ || (this.constructor.$defaultsCache$ = {});
  };
  $dvt$$17$$.$BaseComponentDefaults$.prototype.$getBaseSkinName$ = function $$dvt$$17$$$$BaseComponentDefaults$$$$getBaseSkinName$$() {
    return $dvt$$17$$.$CSSStyle$.$SKIN_NEXT$;
  };
  $dvt$$17$$.$BaseComponentDefaults$.prototype.$calcOptions$ = function $$dvt$$17$$$$BaseComponentDefaults$$$$calcOptions$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getDefaults$($DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$.skin : null);
    return $DvtSvgShadowUtils$$ ? $dvt$$17$$.$JsonUtils$.$merge$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, this.$getNoCloneObject$()) : $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$BaseComponentDefaults$.prototype.$getDefaults$ = function $$dvt$$17$$$$BaseComponentDefaults$$$$getDefaults$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$getBaseSkinName$());
    if (this.constructor.$defaultsCache$[$DvtSvgShadowUtils$$]) {
      return $dvt$$17$$.$JsonUtils$.clone(this.constructor.$defaultsCache$[$DvtSvgShadowUtils$$]);
    }
    for (var $DvtSvgPatternFillUtils$$ = Math.max($dvt$$17$$.$ArrayUtils$.$getIndex$($dvt$$17$$.$BaseComponentDefaults$.$_SKINS$, $DvtSvgShadowUtils$$), 0), $DvtSvgImageFillUtils$$ = $dvt$$17$$.$JsonUtils$.clone(this.$_defaults$[$dvt$$17$$.$BaseComponentDefaults$.$_SKINS$[0]]), $DvtSvgGradientUtils$$ = 1;$DvtSvgGradientUtils$$ <= $DvtSvgPatternFillUtils$$;$DvtSvgGradientUtils$$++) {
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$JsonUtils$.$merge$(this.$_defaults$[$dvt$$17$$.$BaseComponentDefaults$.$_SKINS$[$DvtSvgGradientUtils$$]], $DvtSvgImageFillUtils$$);
    }
    this.constructor.$defaultsCache$[$DvtSvgShadowUtils$$] = $dvt$$17$$.$JsonUtils$.clone($DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$BaseComponentDefaults$.prototype.$getNoCloneObject$ = function $$dvt$$17$$$$BaseComponentDefaults$$$$getNoCloneObject$$() {
    return {};
  };
  $dvt$$17$$.$BaseComponentCache$ = function $$dvt$$17$$$$BaseComponentCache$$() {
    this.Init();
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.Init = function $$dvt$$17$$$$BaseComponentCache$$$Init$() {
    this.Cache = {};
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.$clearCache$ = function $$dvt$$17$$$$BaseComponentCache$$$$clearCache$$() {
    this.Cache = {};
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.$getFromCache$ = function $$dvt$$17$$$$BaseComponentCache$$$$getFromCache$$($DvtSvgShadowUtils$$) {
    return this.Cache[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.$putToCache$ = function $$dvt$$17$$$$BaseComponentCache$$$$putToCache$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Cache[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.$getFromCachedMap$ = function $$dvt$$17$$$$BaseComponentCache$$$$getFromCachedMap$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_getCachedMap$($DvtSvgShadowUtils$$)[$DvtSvgPatternFillUtils$$];
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.$_getCachedMap$ = function $$dvt$$17$$$$BaseComponentCache$$$$_getCachedMap$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getFromCache$($DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = {}, this.$putToCache$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$));
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.$putToCachedMap$ = function $$dvt$$17$$$$BaseComponentCache$$$$putToCachedMap$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_getCachedMap$($DvtSvgShadowUtils$$)[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.$getFromCachedMap2D$ = function $$dvt$$17$$$$BaseComponentCache$$$$getFromCachedMap2D$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return this.$_getCachedMap2D$($DvtSvgShadowUtils$$).get($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.$_getCachedMap2D$ = function $$dvt$$17$$$$BaseComponentCache$$$$_getCachedMap2D$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getFromCache$($DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Map2D$, this.$putToCache$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$));
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$BaseComponentCache$.prototype.$putToCachedMap2D$ = function $$dvt$$17$$$$BaseComponentCache$$$$putToCachedMap2D$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_getCachedMap2D$($DvtSvgShadowUtils$$).put($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$ShowPopupBehavior$ = function $$dvt$$17$$$$ShowPopupBehavior$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_popupId$ = $DvtSvgShadowUtils$$;
    this.$_triggerType$ = $DvtSvgPatternFillUtils$$;
    this.$_alignId$ = $DvtSvgImageFillUtils$$;
    this.$_align$ = $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ShowPopupBehavior$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_ACTION$ = "action";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CLICK$ = "click";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CONTEXT_MENU$ = "contextMenu";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$ = "dblClick";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_HOVER$ = "mouseHover";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$ = "mouseOver";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_DOWN$ = "mouseDown";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_MOVE$ = "mouseMove";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_UP$ = "mouseUp";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OUT$ = "mouseOut";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_DOWN$ = "keyDown";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_UP$ = "keyUp";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_PRESS$ = "keyPress";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_FOCUS$ = "focus";
  $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_BLUR$ = "blur";
  $dvt$$17$$.$ShowPopupBehavior$.$ALIGN_AFTER_START$ = "afterStart";
  $dvt$$17$$.$ShowPopupBehavior$.$ALIGN_AFTER_END$ = "afterEnd";
  $dvt$$17$$.$ShowPopupBehavior$.$ALIGN_BEFORE_START$ = "beforeStart";
  $dvt$$17$$.$ShowPopupBehavior$.$ALIGN_BEFORE_END$ = "beforeEnd";
  $dvt$$17$$.$ShowPopupBehavior$.$ALIGN_END_AFTER$ = "endAfter";
  $dvt$$17$$.$ShowPopupBehavior$.$ALIGN_END_BEFORE$ = "endBefore";
  $dvt$$17$$.$ShowPopupBehavior$.$ALIGN_START_AFTER$ = "startAfter";
  $dvt$$17$$.$ShowPopupBehavior$.$ALIGN_START_BEFORE$ = "startBefore";
  $dvt$$17$$.$ShowPopupBehavior$.$ALIGN_OVERLAP$ = "overlap";
  $dvt$$17$$.$ShowPopupBehavior$.$createBehaviors$ = function $$dvt$$17$$$$ShowPopupBehavior$$$createBehaviors$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      $DvtSvgPatternFillUtils$$.push($dvt$$17$$.$ShowPopupBehavior$.newInstance($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]));
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$ShowPopupBehavior$.newInstance = function $$dvt$$17$$$$ShowPopupBehavior$$newInstance$($DvtSvgShadowUtils$$) {
    return new $dvt$$17$$.$ShowPopupBehavior$($DvtSvgShadowUtils$$.popupId, $DvtSvgShadowUtils$$.triggerType, $DvtSvgShadowUtils$$.alignId, $DvtSvgShadowUtils$$.align);
  };
  $dvt$$17$$.$ShowPopupBehavior$.prototype.$getPopupId$ = function $$dvt$$17$$$$ShowPopupBehavior$$$$getPopupId$$() {
    return this.$_popupId$;
  };
  $dvt$$17$$.$ShowPopupBehavior$.prototype.$getTriggerType$ = function $$dvt$$17$$$$ShowPopupBehavior$$$$getTriggerType$$() {
    return this.$_triggerType$;
  };
  $dvt$$17$$.$ShowPopupBehavior$.prototype.$getAlignId$ = function $$dvt$$17$$$$ShowPopupBehavior$$$$getAlignId$$() {
    return this.$_alignId$;
  };
  $dvt$$17$$.$ShowPopupBehavior$.prototype.$getAlign$ = function $$dvt$$17$$$$ShowPopupBehavior$$$$getAlign$$() {
    return this.$_align$;
  };
  $dvt$$17$$.$ClientBehavior$ = function $$dvt$$17$$$$ClientBehavior$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_type$ = $DvtSvgShadowUtils$$;
    this.$_triggerType$ = $DvtSvgPatternFillUtils$$;
    this.$_props$ = {};
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ClientBehavior$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ClientBehavior$.$TRIGGER_TYPE_ACTION$ = "action";
  $dvt$$17$$.$ClientBehavior$.$TRIGGER_TYPE_CLICK$ = "click";
  $dvt$$17$$.$ClientBehavior$.$TYPE_ROW_DISCLOSURE$ = "DvtRowDisclosureBehavior";
  $dvt$$17$$.$ClientBehavior$.$TYPE_DRILL$ = "DvtDrillBehavior";
  $dvt$$17$$.$ClientBehavior$.$TYPE_ISOLATE_LEVELS$ = "DvtIsolateLevelsBehavior";
  $dvt$$17$$.$ClientBehavior$.$TYPE_RESTORE$ = "DvtRestoreBehavior";
  $dvt$$17$$.$ClientBehavior$.prototype.$getType$ = function $$dvt$$17$$$$ClientBehavior$$$$getType$$() {
    return this.$_type$;
  };
  $dvt$$17$$.$ClientBehavior$.prototype.$getTriggerType$ = function $$dvt$$17$$$$ClientBehavior$$$$getTriggerType$$() {
    return this.$_triggerType$;
  };
  $dvt$$17$$.$ClientBehavior$.prototype.setProperty = function $$dvt$$17$$$$ClientBehavior$$$setProperty$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_props$[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$ClientBehavior$.prototype.$getProperty$ = function $$dvt$$17$$$$ClientBehavior$$$$getProperty$$($DvtSvgShadowUtils$$) {
    return this.$_props$[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$SimpleScrollbar$ = function $$dvt$$17$$$$SimpleScrollbar$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$17$$.$SimpleScrollbar$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$;
    this.$_dragTarget$ = $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SimpleScrollbar$, $dvt$$17$$.$Container$);
  $dvt$$17$$.$SimpleScrollbar$.prototype.$render$ = function $$dvt$$17$$$$SimpleScrollbar$$$$render$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_width$ = $DvtSvgPatternFillUtils$$;
    this.$_height$ = $DvtSvgImageFillUtils$$;
    this.$_globalMin$ = $DvtSvgShadowUtils$$.min;
    this.$_globalMax$ = $DvtSvgShadowUtils$$.max;
    this.$_isHoriz$ = $DvtSvgShadowUtils$$.isHorizontal;
    this.$_isReversed$ = $DvtSvgShadowUtils$$.isReversed;
    var $DvtSvgGradientUtils$$ = new $dvt$$17$$.Rect(this.$getCtx$(), 0, 0, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgGradientUtils$$.$setSolidFill$($DvtSvgShadowUtils$$.backgroundColor);
    $DvtSvgGradientUtils$$.$setPixelHinting$();
    this.$addChild$($DvtSvgGradientUtils$$);
    this.$_thumb$ = new $dvt$$17$$.Rect(this.$getCtx$(), 0, 0, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$_thumb$.$setSolidFill$($DvtSvgShadowUtils$$.color);
    this.$_thumb$.$setPixelHinting$();
    this.$addChild$(this.$_thumb$);
    this.$_thumbMin$ = this.$_globalMin$;
    this.$_thumbMax$ = this.$_globalMax$;
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$Agent$.$isTouchDevice$() ? 8 : 4;
    $DvtSvgShadowUtils$$ = new $dvt$$17$$.Rect(this.$getCtx$(), -$DvtSvgShadowUtils$$, -$DvtSvgShadowUtils$$, this.$_width$ + 2 * $DvtSvgShadowUtils$$, this.$_height$ + 2 * $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$setInvisibleFill$();
    this.$addChild$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = null != this.$_dragTarget$;
    $dvt$$17$$.$SvgDocumentUtils$.$addDragListeners$($DvtSvgShadowUtils$$ ? this.$_dragTarget$ : this, this.$_onDragStart$, this.$_onDragMove$, this.$_onDragEnd$, this, !$DvtSvgShadowUtils$$);
    $dvt$$17$$.$Agent$.$isTouchDevice$() || $DvtSvgShadowUtils$$ || this.$addEvtListener$($dvt$$17$$.MouseEvent.$CLICK$, this.$_onClick$, !1, this);
    this.$_dragged$ = !1;
  };
  $dvt$$17$$.$SimpleScrollbar$.prototype.$setViewportRange$ = function $$dvt$$17$$$$SimpleScrollbar$$$$setViewportRange$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_getCoord$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$_getCoord$($DvtSvgPatternFillUtils$$);
    this.$_isHoriz$ ? (this.$_thumb$.$setX$(Math.min($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)), this.$_thumb$.$setWidth$(Math.abs($DvtSvgGradientUtils$$ - $DvtSvgImageFillUtils$$))) : (this.$_thumb$.$setY$(Math.min($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)), this.$_thumb$.$setHeight$(Math.abs($DvtSvgGradientUtils$$ - $DvtSvgImageFillUtils$$)));
    this.$_thumbMin$ = $DvtSvgShadowUtils$$;
    this.$_thumbMax$ = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$SimpleScrollbar$.prototype.$_getCoord$ = function $$dvt$$17$$$$SimpleScrollbar$$$$_getCoord$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = ($DvtSvgShadowUtils$$ - this.$_globalMin$) / (this.$_globalMax$ - this.$_globalMin$);
    this.$_isReversed$ && ($DvtSvgShadowUtils$$ = 1 - $DvtSvgShadowUtils$$);
    return this.$_isHoriz$ ? $DvtSvgShadowUtils$$ * this.$_width$ : $DvtSvgShadowUtils$$ * this.$_height$;
  };
  $dvt$$17$$.$SimpleScrollbar$.prototype.$_getValue$ = function $$dvt$$17$$$$SimpleScrollbar$$$$_getValue$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$stageToLocal$(this.$getCtx$().$pageToStageCoords$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)), $DvtSvgImageFillUtils$$ = this.$_isHoriz$ ? $DvtSvgImageFillUtils$$.x / this.$_width$ : $DvtSvgImageFillUtils$$.y / this.$_height$;
    this.$_isReversed$ && ($DvtSvgImageFillUtils$$ = 1 - $DvtSvgImageFillUtils$$);
    $DvtSvgImageFillUtils$$ = Math.min(Math.max($DvtSvgImageFillUtils$$, 0), 1);
    return this.$_globalMin$ + $DvtSvgImageFillUtils$$ * (this.$_globalMax$ - this.$_globalMin$);
  };
  $dvt$$17$$.$SimpleScrollbar$.prototype.$_onClick$ = function $$dvt$$17$$$$SimpleScrollbar$$$$_onClick$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
    if (!($DvtSvgShadowUtils$$ >= this.$_thumbMin$ && $DvtSvgShadowUtils$$ <= this.$_thumbMax$)) {
      var $DvtSvgPatternFillUtils$$ = this.$_thumbMax$ - this.$_thumbMin$;
      this.$_setViewportRange$($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$ / 2, $DvtSvgShadowUtils$$ + $DvtSvgPatternFillUtils$$ / 2, $dvt$$17$$.$SimpleScrollbarEvent$.$SUBTYPE_END$);
    }
  };
  $dvt$$17$$.$SimpleScrollbar$.prototype.$_onDragStart$ = function $$dvt$$17$$$$SimpleScrollbar$$$$_onDragStart$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$.touches) {
      if (1 != $DvtSvgShadowUtils$$.touches.length) {
        return !1;
      }
      $DvtSvgShadowUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.touches[0].pageX, $DvtSvgShadowUtils$$.touches[0].pageY);
    } else {
      $DvtSvgShadowUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
    }
    return this.$_dragTarget$ || $DvtSvgShadowUtils$$ >= this.$_thumbMin$ && $DvtSvgShadowUtils$$ <= this.$_thumbMax$ ? (this.$_dragged$ = !0, this.$_prevVal$ = $DvtSvgShadowUtils$$, !0) : !1;
  };
  $dvt$$17$$.$SimpleScrollbar$.prototype.$_onDragMove$ = function $$dvt$$17$$$$SimpleScrollbar$$$$_onDragMove$$($DvtSvgShadowUtils$$) {
    if (this.$_dragged$) {
      var $DvtSvgPatternFillUtils$$;
      if ($DvtSvgShadowUtils$$.touches) {
        if (1 != $DvtSvgShadowUtils$$.touches.length) {
          return;
        }
        $DvtSvgPatternFillUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.touches[0].pageX, $DvtSvgShadowUtils$$.touches[0].pageY);
      } else {
        $DvtSvgPatternFillUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
      }
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ - this.$_prevVal$;
      this.$_dragTarget$ && ($DvtSvgImageFillUtils$$ *= -1);
      this.$_setViewportRange$(this.$_thumbMin$ + $DvtSvgImageFillUtils$$, this.$_thumbMax$ + $DvtSvgImageFillUtils$$, $dvt$$17$$.$SimpleScrollbarEvent$.$SUBTYPE_MOVE$);
      this.$_prevVal$ = $DvtSvgPatternFillUtils$$;
      $DvtSvgShadowUtils$$.preventDefault();
    }
  };
  $dvt$$17$$.$SimpleScrollbar$.prototype.$_onDragEnd$ = function $$dvt$$17$$$$SimpleScrollbar$$$$_onDragEnd$$($DvtSvgShadowUtils$$) {
    this.$_dragged$ && ($DvtSvgShadowUtils$$.touches ? this.$_setViewportRange$(this.$_thumbMin$, this.$_thumbMax$, $dvt$$17$$.$SimpleScrollbarEvent$.$SUBTYPE_END$) : ($DvtSvgShadowUtils$$ = this.$_getValue$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY) - this.$_prevVal$, this.$_setViewportRange$(this.$_thumbMin$ + $DvtSvgShadowUtils$$, this.$_thumbMax$ + $DvtSvgShadowUtils$$, $dvt$$17$$.$SimpleScrollbarEvent$.$SUBTYPE_END$)), this.$_dragged$ = !1);
  };
  $dvt$$17$$.$SimpleScrollbar$.prototype.$_setViewportRange$ = function $$dvt$$17$$$$SimpleScrollbar$$$$_setViewportRange$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$;
    $DvtSvgShadowUtils$$ < this.$_globalMin$ && ($DvtSvgShadowUtils$$ = this.$_globalMin$, $DvtSvgPatternFillUtils$$ = this.$_globalMin$ + $DvtSvgGradientUtils$$);
    $DvtSvgPatternFillUtils$$ > this.$_globalMax$ && ($DvtSvgPatternFillUtils$$ = this.$_globalMax$, $DvtSvgShadowUtils$$ = this.$_globalMax$ - $DvtSvgGradientUtils$$);
    this.$setViewportRange$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    this.$_callback$ && ($DvtSvgShadowUtils$$ = new $dvt$$17$$.$SimpleScrollbarEvent$($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this));
  };
  $dvt$$17$$.$SimpleScrollableContainer$ = function $$dvt$$17$$$$SimpleScrollableContainer$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$17$$.$SimpleScrollableContainer$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_contentSize$ = $DvtSvgGradientUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgImageFillUtils$$;
    this.$_width$ = $DvtSvgPatternFillUtils$$;
    this.$_height$ = $DvtSvgImageFillUtils$$;
    this.$_background$ = new $dvt$$17$$.Rect($DvtSvgShadowUtils$$, 0, 0, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$_background$.$setInvisibleFill$();
    this.$addChild$(this.$_background$);
    this.$_container$ = new $dvt$$17$$.$Container$($DvtSvgShadowUtils$$);
    this.$addChild$(this.$_container$);
    this.$_isHorizontalScrolling$ = $DvtSvgGradientUtils$$;
    this.$_isScrollbarVisible$ = !1;
    $dvt$$17$$.$Agent$.$isTouchDevice$() || this.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEWHEEL$, this.$_onMouseWheel$, !1, this);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SimpleScrollableContainer$, $dvt$$17$$.$Container$);
  $dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$ = 3;
  $dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$ = 2;
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$getScrollingPane$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$getScrollingPane$$() {
    return this.$_container$;
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$prepareContentPane$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$prepareContentPane$$() {
    var $DvtSvgShadowUtils$$ = this.$_container$.$getDimensions$();
    this.$_contentSize$ = this.$_isHorizontalScrolling$ ? $DvtSvgShadowUtils$$.$w$ + $DvtSvgShadowUtils$$.x : $DvtSvgShadowUtils$$.$h$ + $DvtSvgShadowUtils$$.y;
    this.$hasScrollingContent$() ? (this.$_contentSize$ = this.$_isHorizontalScrolling$ ? this.$_contentSize$ + $DvtSvgShadowUtils$$.x : this.$_contentSize$ + $DvtSvgShadowUtils$$.y, this.$_maskContainer$ || ($DvtSvgShadowUtils$$ = new $dvt$$17$$.$Rectangle$(0, 0, this.$_width$, this.$_height$), this.$_fadeTop$ = new $dvt$$17$$.$Mask$(new $dvt$$17$$.$LinearGradientFill$(this.$_isHorizontalScrolling$ ? 0 : 270, ["#FFFFFF", "#FFFFFF"], [0, 1], [0, .1]), $DvtSvgShadowUtils$$), this.$_fadeBottom$ = new $dvt$$17$$.$Mask$(new $dvt$$17$$.$LinearGradientFill$(this.$_isHorizontalScrolling$ ? 
    180 : 90, ["#FFFFFF", "#FFFFFF"], [0, 1], [0, .1]), $DvtSvgShadowUtils$$), this.$_fadeTopBottom$ = new $dvt$$17$$.$Mask$(new $dvt$$17$$.$LinearGradientFill$(this.$_isHorizontalScrolling$ ? 180 : 90, ["#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"], [0, 1, 1, 0], [0, .1, .9, 1]), $DvtSvgShadowUtils$$), this.$_maskContainer$ = new $dvt$$17$$.$Container$(this.$getCtx$()), this.$addChild$(this.$_maskContainer$), $DvtSvgShadowUtils$$ = new $dvt$$17$$.$ClipPath$, $DvtSvgShadowUtils$$.$addRect$(0, 0, this.$_width$, 
    this.$_height$), this.$_container$.$setClipPath$($DvtSvgShadowUtils$$), this.$_maskContainer$.$addChild$(this.$_container$), this.$_scrollbar$ = new $dvt$$17$$.$SimpleScrollbar$(this.$getCtx$(), this.$_handleScrollbar$, this, this), this.$_scrollbarTimer$ = new $dvt$$17$$.$Timer$(this.$getCtx$(), 100, this.$_hideScrollbar$, this)), this.$_maskContainer$.$setMask$(this.$_fadeBottom$), $DvtSvgShadowUtils$$ = {color:"#9E9E9E", backgroundColor:"#F0F0F0", isHorizontal:this.$_isHorizontalScrolling$, 
    isReversed:!1, min:0, max:this.$_contentSize$}, this.$_isHorizontalScrolling$ ? (this.$_scrollbar$.$render$($DvtSvgShadowUtils$$, this.$_getScrollbarWidth$(), $dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$), this.$_scrollbar$.$setTranslate$($dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$, this.$_height$ - ($dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$ + $dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$))) : (this.$_scrollbar$.$render$($DvtSvgShadowUtils$$, 
    $dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$, this.$_getScrollbarWidth$()), this.$_scrollbar$.$setTranslate$($dvt$$17$$.$Agent$.$isRightToLeft$(this.$getCtx$()) ? $dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$ : this.$_width$ - ($dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_WIDTH$ + $dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$), $dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$)), this.$_scrollbar$.$setViewportRange$(0, this.$_getAvailSize$()), $dvt$$17$$.$Agent$.$isEnvironmentTest$() || 
    this.$_scrollbar$.$setAlpha$(0), this.$addChild$(this.$_scrollbar$)) : (this.$addChild$(this.$_container$), this.removeChild(this.$_maskContainer$), this.removeChild(this.$_scrollbar$));
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$_getScrollbarWidth$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$_getScrollbarWidth$$() {
    return (this.$_isHorizontalScrolling$ ? this.$_width$ : this.$_height$) - 2 * $dvt$$17$$.$SimpleScrollableContainer$.$_SCROLLBAR_GAP$;
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$_getAvailSize$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$_getAvailSize$$() {
    return this.$_isHorizontalScrolling$ ? this.$_width$ : this.$_height$;
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$_hideScrollbar$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$_hideScrollbar$$() {
    this.$_isScrollbarVisible$ && (this.$_isScrollbarVisible$ = !1, this.$_scrollbarTimer$.reset(), this.$_fadeOutAnim$ = new $dvt$$17$$.$AnimFadeOut$(this.$getCtx$(), this.$_scrollbar$, .2), this.$_fadeOutAnim$.play());
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$_showScrollbar$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$_showScrollbar$$() {
    this.$_isScrollbarVisible$ ? this.$_scrollbarTimer$.reset() : (this.$_fadeOutAnim$ && (this.$_fadeOutAnim$.stop(!0), this.$_fadeOutAnim$ = null), this.$_scrollbar$.$setAlpha$(1), this.$_isScrollbarVisible$ = !0);
    this.$_scrollbarTimer$.start();
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$_updateFade$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$_updateFade$$($DvtSvgShadowUtils$$) {
    0 == $DvtSvgShadowUtils$$ ? this.$_maskContainer$.$setMask$(this.$_fadeBottom$) : $DvtSvgShadowUtils$$ + this.$_getAvailSize$() >= this.$_contentSize$ ? this.$_maskContainer$.$setMask$(this.$_fadeTop$) : this.$_maskContainer$.$setMask$(this.$_fadeTopBottom$);
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$_onMouseWheel$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$_onMouseWheel$$($DvtSvgShadowUtils$$) {
    if (this.$hasScrollingContent$()) {
      this.$_showScrollbar$();
      var $DvtSvgPatternFillUtils$$ = null != $DvtSvgShadowUtils$$.wheelDelta ? $DvtSvgShadowUtils$$.wheelDelta : 0;
      $dvt$$17$$.$Agent$.$isPlatformGecko$() && ($DvtSvgPatternFillUtils$$ *= -1);
      $DvtSvgPatternFillUtils$$ = -1 * (this.$_isHorizontalScrolling$ ? this.$_container$.$getTranslateX$() : this.$_container$.$getTranslateY$()) - 4 * $DvtSvgPatternFillUtils$$;
      $DvtSvgPatternFillUtils$$ = Math.max(Math.min($DvtSvgPatternFillUtils$$, Math.max(this.$_contentSize$ - this.$_getAvailSize$(), 0)), 0);
      this.$_isHorizontalScrolling$ ? (this.$_container$.$setTranslateX$(-1 * $DvtSvgPatternFillUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgPatternFillUtils$$ + this.$_width$, $DvtSvgPatternFillUtils$$)) : (this.$_container$.$setTranslateY$(-1 * $DvtSvgPatternFillUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$ + this.$_height$));
      this.$_updateFade$($DvtSvgPatternFillUtils$$);
      $DvtSvgShadowUtils$$.preventDefault();
    }
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$_handleScrollbar$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$_handleScrollbar$$($DvtSvgShadowUtils$$) {
    this.$_showScrollbar$();
    this.$_isHorizontalScrolling$ ? this.$_container$.$setTranslateX$(-1 * $DvtSvgShadowUtils$$.$_newMin$) : this.$_container$.$setTranslateY$(-1 * $DvtSvgShadowUtils$$.$_newMin$);
    this.$_updateFade$($DvtSvgShadowUtils$$.$_newMin$);
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.getWidth = function $$dvt$$17$$$$SimpleScrollableContainer$$$getWidth$() {
    return this.$_width$;
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.getHeight = function $$dvt$$17$$$$SimpleScrollableContainer$$$getHeight$() {
    return this.$_height$;
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.scrollIntoView = function $$dvt$$17$$$$SimpleScrollableContainer$$$scrollIntoView$($DvtSvgShadowUtils$$) {
    if (this.$hasScrollingContent$()) {
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getDimensions$($DvtSvgShadowUtils$$.getParent());
      var $DvtSvgPatternFillUtils$$ = this.$_container$.$getDimensions$(), $DvtSvgImageFillUtils$$;
      if (this.$_isHorizontalScrolling$) {
        var $DvtSvgGradientUtils$$ = -1 * this.$_container$.$getTranslateX$(), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.x - $DvtSvgPatternFillUtils$$.x;
        $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ - this.$_width$ + $DvtSvgPatternFillUtils$$.x;
        $DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$ ? (this.$_container$.$setTranslateX$(-1 * $DvtSvgShadowUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgShadowUtils$$ + this.$_width$, $DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$) : $DvtSvgGradientUtils$$ > $DvtSvgFilterUtils$$ && (this.$_container$.$setTranslateX$(-1 * $DvtSvgFilterUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgFilterUtils$$ + this.$_width$, $DvtSvgFilterUtils$$), $DvtSvgImageFillUtils$$ = 
        $DvtSvgFilterUtils$$);
      } else {
        $DvtSvgGradientUtils$$ = -1 * this.$_container$.$getTranslateY$(), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.y - $DvtSvgPatternFillUtils$$.y, $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ - this.$_height$ + $DvtSvgPatternFillUtils$$.y, $DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$ ? (this.$_container$.$setTranslateY$(-1 * $DvtSvgShadowUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgShadowUtils$$, $DvtSvgShadowUtils$$ + this.$_height$), $DvtSvgImageFillUtils$$ = 
        $DvtSvgShadowUtils$$) : $DvtSvgGradientUtils$$ > $DvtSvgFilterUtils$$ && (this.$_container$.$setTranslateY$(-1 * $DvtSvgFilterUtils$$), this.$_scrollbar$.$setViewportRange$($DvtSvgFilterUtils$$, $DvtSvgFilterUtils$$ + this.$_height$), $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$);
      }
      void 0 != $DvtSvgImageFillUtils$$ && this.$_updateFade$($DvtSvgImageFillUtils$$);
    }
  };
  $dvt$$17$$.$SimpleScrollableContainer$.prototype.$hasScrollingContent$ = function $$dvt$$17$$$$SimpleScrollableContainer$$$$hasScrollingContent$$() {
    return this.$_contentSize$ > this.$_getAvailSize$();
  };
  $dvt$$17$$.$DragRecognizer$ = function $$dvt$$17$$$$DragRecognizer$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$DragRecognizer$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$DragSource$ = function $$dvt$$17$$$$DragSource$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$DragSource$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$ = 2;
  $dvt$$17$$.$DragSource$.prototype.Init = function $$dvt$$17$$$$DragSource$$$Init$($DvtSvgShadowUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_dragObj$ = this.$_dragCandidate$ = null;
  };
  $dvt$$17$$.$DragSource$.prototype.$setDragCandidate$ = function $$dvt$$17$$$$DragSource$$$$setDragCandidate$$($DvtSvgShadowUtils$$) {
    this.$_dragCandidate$ = $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isDragAvailable$ && $DvtSvgShadowUtils$$.$getDragTransferable$ ? $DvtSvgShadowUtils$$ : null;
  };
  $dvt$$17$$.$DragSource$.prototype.$isDragAvailable$ = function $$dvt$$17$$$$DragSource$$$$isDragAvailable$$($DvtSvgShadowUtils$$) {
    return null != this.$_dragCandidate$ ? this.$_dragCandidate$.$isDragAvailable$($DvtSvgShadowUtils$$) : null;
  };
  $dvt$$17$$.$DragSource$.prototype.$getDragTransferable$ = function $$dvt$$17$$$$DragSource$$$$getDragTransferable$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_dragCandidate$ ? (this.$_dragObj$ = this.$_dragCandidate$, this.$_dragCandidate$.$getDragTransferable$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)) : null;
  };
  $dvt$$17$$.$DragSource$.prototype.$getDragOverFeedback$ = function $$dvt$$17$$$$DragSource$$$$getDragOverFeedback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$.$getTooltipManager$().$hideTooltip$();
    var $DvtSvgImageFillUtils$$ = this.$_dragObj$;
    return $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.$getDragFeedback$ ? $DvtSvgImageFillUtils$$.$getDragFeedback$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) : null;
  };
  $dvt$$17$$.$DragSource$.prototype.$getDragOffset$ = function $$dvt$$17$$$$DragSource$$$$getDragOffset$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = null, $DvtSvgGradientUtils$$ = this.$getDragOverFeedback$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    if ($DvtSvgGradientUtils$$) {
      var $DvtSvgFilterUtils$$ = $dvt$$17$$.$DragAndDropUtils$.$getDragFeedbackBounds$($DvtSvgGradientUtils$$, this.$_context$.$_stage$), $DvtSvgFilterContext$$ = this.$_dragObj$;
      $DvtSvgFilterContext$$ && $DvtSvgFilterContext$$.$afterDragOverFeedback$ && $DvtSvgFilterContext$$.$afterDragOverFeedback$($DvtSvgGradientUtils$$);
      $DvtSvgFilterUtils$$ && ($DvtSvgImageFillUtils$$ = {}, $DvtSvgImageFillUtils$$.x = $DvtSvgShadowUtils$$ - $DvtSvgFilterUtils$$.x, $DvtSvgImageFillUtils$$.y = $DvtSvgPatternFillUtils$$ - $DvtSvgFilterUtils$$.y, $DvtSvgImageFillUtils$$.x += $dvt$$17$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$, $DvtSvgImageFillUtils$$.y += $dvt$$17$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$);
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$DragSource$.prototype.$setTouchManager$ = function $$dvt$$17$$$$DragSource$$$$setTouchManager$$($DvtSvgShadowUtils$$) {
    this.$_touchManager$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$DragSource$.prototype.$getTouchManager$ = function $$dvt$$17$$$$DragSource$$$$getTouchManager$$() {
    return this.$_touchManager$;
  };
  $dvt$$17$$.$DropTarget$ = function $$dvt$$17$$$$DropTarget$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$DropTarget$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Button$ = function $$dvt$$17$$$$Button$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Button$, $dvt$$17$$.$Container$);
  $dvt$$17$$.$Button$.$STATE_ENABLED$ = 0;
  $dvt$$17$$.$Button$.$STATE_OVER$ = 1;
  $dvt$$17$$.$Button$.$STATE_DOWN$ = 2;
  $dvt$$17$$.$Button$.$STATE_DISABLED$ = 3;
  $dvt$$17$$.$Button$.$NO_EVENT_LISTENERS$ = !0;
  $dvt$$17$$.$Button$.prototype.Init = function $$dvt$$17$$$$Button$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    $dvt$$17$$.$Button$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, null, $DvtSvgFilterContext$$);
    this.$setCallback$($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$);
    this.$_bDuringInit$ = !0;
    this.$setUpState$($DvtSvgPatternFillUtils$$);
    this.$setOverState$($DvtSvgImageFillUtils$$);
    this.$setDownState$($DvtSvgGradientUtils$$);
    $DvtSvgFilterUtils$$ && this.$setDisabledState$($DvtSvgFilterUtils$$);
    this.$setEnabled$(!0);
    this.$drawUpState$();
    this.$_tooltip$ = null;
    this.$_bDuringInit$ = this.$_bToggled$ = this.$_bToggleEnabled$ = !1;
  };
  $dvt$$17$$.$Button$.prototype.isEnabled = function $$dvt$$17$$$$Button$$$isEnabled$() {
    return this.$_enabled$;
  };
  $dvt$$17$$.$Button$.prototype.$setEnabled$ = function $$dvt$$17$$$$Button$$$$setEnabled$$($DvtSvgShadowUtils$$) {
    if (this.$_enabled$ != $DvtSvgShadowUtils$$) {
      this.$_enabled$ = $DvtSvgShadowUtils$$;
      var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Agent$.$isTouchDevice$() ? $dvt$$17$$.TouchEvent.$TOUCHSTART$ : $dvt$$17$$.MouseEvent.$CLICK$;
      $DvtSvgShadowUtils$$ ? (this.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOVER$, this.$OnMouseOver$, !1, this), this.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOUT$, this.$OnMouseOut$, !1, this), this.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEDOWN$, this.$OnMouseDown$, !1, this), this.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEUP$, this.$OnMouseUp$, !1, this), this.$addEvtListener$($DvtSvgPatternFillUtils$$, this.$OnClick$, !1, this), this.setCursor("pointer")) : (this.$removeEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOVER$, 
      this.$OnMouseOver$, !1, this), this.$removeEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOUT$, this.$OnMouseOut$, !1, this), this.$removeEvtListener$($dvt$$17$$.MouseEvent.$MOUSEDOWN$, this.$OnMouseDown$, !1, this), this.$removeEvtListener$($dvt$$17$$.MouseEvent.$MOUSEUP$, this.$OnMouseUp$, !1, this), this.$removeEvtListener$($DvtSvgPatternFillUtils$$, this.$OnClick$, !1, this), this.setCursor(null));
      this.$initState$();
    }
  };
  $dvt$$17$$.$Button$.prototype.$OnMouseOver$ = function $$dvt$$17$$$$Button$$$$OnMouseOver$$() {
    this.$_bToggled$ ? this.$drawOverDownState$() : this.$drawOverState$();
  };
  $dvt$$17$$.$Button$.prototype.$OnMouseOut$ = function $$dvt$$17$$$$Button$$$$OnMouseOut$$() {
    this.$_bToggled$ ? this.$drawDownState$() : this.$drawUpState$();
  };
  $dvt$$17$$.$Button$.prototype.$OnMouseDown$ = function $$dvt$$17$$$$Button$$$$OnMouseDown$$() {
    this.$drawDownState$();
  };
  $dvt$$17$$.$Button$.prototype.$OnMouseUp$ = function $$dvt$$17$$$$Button$$$$OnMouseUp$$() {
    this.$_bToggled$ ? $dvt$$17$$.$Agent$.$isTouchDevice$() ? this.$drawDownState$() : this.$drawOverDownState$() : $dvt$$17$$.$Agent$.$isTouchDevice$() ? this.$drawUpState$() : this.$drawOverState$();
  };
  $dvt$$17$$.$Button$.prototype.$OnClick$ = function $$dvt$$17$$$$Button$$$$OnClick$$($DvtSvgShadowUtils$$) {
    this.$_bToggleEnabled$ && ((this.$_bToggled$ = !this.$_bToggled$) ? $dvt$$17$$.$Agent$.$isTouchDevice$() ? this.$drawDownState$() : this.$drawOverDownState$() : $dvt$$17$$.$Agent$.$isTouchDevice$() ? this.$drawUpState$() : this.$drawOverState$());
    this.$_callback$ && (this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this), $DvtSvgShadowUtils$$.stopPropagation(), $DvtSvgShadowUtils$$.preventDefault());
  };
  $dvt$$17$$.$Button$.prototype.$drawUpState$ = function $$dvt$$17$$$$Button$$$$drawUpState$$() {
    this.$_enableButton$(this.$upState$, !0);
    this.$_enableButton$(this.$downState$, !1);
    this.$_enableButton$(this.$overState$, !1);
    this.$_enableButton$(this.$disabledState$, !1);
    this.$_enableButton$(this.$overDownState$, !1);
  };
  $dvt$$17$$.$Button$.prototype.$drawOverState$ = function $$dvt$$17$$$$Button$$$$drawOverState$$() {
    this.$_enableButton$(this.$upState$, !1);
    this.$_enableButton$(this.$downState$, !1);
    this.$_enableButton$(this.$overState$, !0);
    this.$_enableButton$(this.$disabledState$, !1);
    this.$_enableButton$(this.$overDownState$, !1);
  };
  $dvt$$17$$.$Button$.prototype.$drawDownState$ = function $$dvt$$17$$$$Button$$$$drawDownState$$() {
    this.$_enableButton$(this.$upState$, !1);
    this.$_enableButton$(this.$downState$, !0);
    this.$_enableButton$(this.$overState$, !1);
    this.$_enableButton$(this.$disabledState$, !1);
    this.$_enableButton$(this.$overDownState$, !1);
  };
  $dvt$$17$$.$Button$.prototype.$drawDisabledState$ = function $$dvt$$17$$$$Button$$$$drawDisabledState$$() {
    this.$_enableButton$(this.$upState$, !1);
    this.$_enableButton$(this.$overState$, !1);
    this.$_enableButton$(this.$downState$, !1);
    this.$_enableButton$(this.$disabledState$, !0);
    this.$_enableButton$(this.$overDownState$, !1);
  };
  $dvt$$17$$.$Button$.prototype.$drawOverDownState$ = function $$dvt$$17$$$$Button$$$$drawOverDownState$$() {
    this.$overDownState$ ? (this.$_enableButton$(this.$upState$, !1), this.$_enableButton$(this.$overState$, !1), this.$_enableButton$(this.$downState$, !1), this.$_enableButton$(this.$disabledState$, !1), this.$_enableButton$(this.$overDownState$, !0)) : this.$drawDownState$();
  };
  $dvt$$17$$.$Button$.prototype.$_enableButton$ = function $$dvt$$17$$$$Button$$$$_enableButton$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$setAlpha$($DvtSvgPatternFillUtils$$ ? 1 : 0);
  };
  $dvt$$17$$.$Button$.prototype.$setUpState$ = function $$dvt$$17$$$$Button$$$$setUpState$$($DvtSvgShadowUtils$$) {
    if (!this.$upState$ || this.$upState$ != $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = !1;
      if (this.$upState$) {
        $DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$upState$), this.removeChild(this.$upState$);
      } else {
        if (!this.$_bDuringInit$) {
          var $DvtSvgImageFillUtils$$ = !1, $DvtSvgGradientUtils$$ = !1, $DvtSvgFilterUtils$$ = !1;
          this.$downState$ && ($DvtSvgImageFillUtils$$ = this.$_isButtonEnabled$(this.$downState$));
          this.$overState$ && ($DvtSvgGradientUtils$$ = this.$_isButtonEnabled$(this.$overState$));
          this.$disabledState$ && ($DvtSvgFilterUtils$$ = this.$_isButtonEnabled$(this.$disabledState$));
          $DvtSvgImageFillUtils$$ || $DvtSvgGradientUtils$$ || $DvtSvgFilterUtils$$ || ($DvtSvgPatternFillUtils$$ = !0);
        }
      }
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$upState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$upState$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Button$.prototype.$setDownState$ = function $$dvt$$17$$$$Button$$$$setDownState$$($DvtSvgShadowUtils$$) {
    if (!this.$downState$ || this.$downState$ != $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = !1;
      this.$downState$ && ($DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$downState$), this.removeChild(this.$downState$));
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$downState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$downState$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Button$.prototype.$setOverState$ = function $$dvt$$17$$$$Button$$$$setOverState$$($DvtSvgShadowUtils$$) {
    if (!this.$overState$ || this.$overState$ != $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = !1;
      this.$overState$ && ($DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$overState$), this.removeChild(this.$overState$));
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$overState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$overState$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Button$.prototype.$setDisabledState$ = function $$dvt$$17$$$$Button$$$$setDisabledState$$($DvtSvgShadowUtils$$) {
    if (!this.$disabledState$ || this.$disabledState$ == $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = !1;
      this.$disabledState$ && ($DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$disabledState$), this.removeChild(this.$disabledState$));
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$disabledState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$disabledState$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Button$.prototype.$setOverDownState$ = function $$dvt$$17$$$$Button$$$$setOverDownState$$($DvtSvgShadowUtils$$) {
    if (!this.$overDownState$ || this.$overDownState$ == $DvtSvgShadowUtils$$) {
      var $DvtSvgPatternFillUtils$$ = !1;
      this.$overDownState$ && ($DvtSvgPatternFillUtils$$ = this.$_isButtonEnabled$(this.$overDownState$), this.removeChild(this.$overDownState$));
      $DvtSvgShadowUtils$$ && this.$addChild$($DvtSvgShadowUtils$$);
      this.$overDownState$ = $DvtSvgShadowUtils$$;
      this.$_enableButton$(this.$overDownState$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Button$.prototype.$setCallback$ = function $$dvt$$17$$$$Button$$$$setCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_callback$ = $DvtSvgShadowUtils$$;
    this.$_callbackObj$ = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Button$.prototype.$setTooltip$ = function $$dvt$$17$$$$Button$$$$setTooltip$$($DvtSvgShadowUtils$$) {
    if (this.$_tooltip$ = $DvtSvgShadowUtils$$) {
      this.$setAriaRole$("button"), this.$setAriaProperty$("label", $DvtSvgShadowUtils$$);
    }
  };
  $dvt$$17$$.$Button$.prototype.$getTooltip$ = function $$dvt$$17$$$$Button$$$$getTooltip$$() {
    return this.$_tooltip$;
  };
  $dvt$$17$$.$Button$.prototype.$isClickEventPropagationStopped$ = function $$dvt$$17$$$$Button$$$$isClickEventPropagationStopped$$() {
    return !0;
  };
  $dvt$$17$$.$Button$.prototype.$initState$ = function $$dvt$$17$$$$Button$$$$initState$$() {
    this.isEnabled() ? this.$drawUpState$() : this.$drawDisabledState$();
  };
  $dvt$$17$$.$Button$.prototype.$setSize$ = function $$dvt$$17$$$$Button$$$$setSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$upState$;
    $DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$.$setWidth$ && $DvtSvgShadowUtils$$ && $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.$setHeight$ && $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setHeight$($DvtSvgPatternFillUtils$$));
    if ($DvtSvgImageFillUtils$$ = this.$downState$) {
      $DvtSvgImageFillUtils$$.$setWidth$ && $DvtSvgShadowUtils$$ && $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.$setHeight$ && $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setHeight$($DvtSvgPatternFillUtils$$);
    }
    if ($DvtSvgImageFillUtils$$ = this.$overState$) {
      $DvtSvgImageFillUtils$$.$setWidth$ && $DvtSvgShadowUtils$$ && $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.$setHeight$ && $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setHeight$($DvtSvgPatternFillUtils$$);
    }
    if ($DvtSvgImageFillUtils$$ = this.$disabledState$) {
      $DvtSvgImageFillUtils$$.$setWidth$ && $DvtSvgShadowUtils$$ && $DvtSvgImageFillUtils$$.$setWidth$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$.$setHeight$ && $DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$.$setHeight$($DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Button$.prototype.$rightAlign$ = function $$dvt$$17$$$$Button$$$$rightAlign$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$;
    var $DvtSvgGradientUtils$$ = this.$upState$;
    $DvtSvgGradientUtils$$ && $DvtSvgShadowUtils$$ && ($DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$) : this.$_setChildX$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$));
    ($DvtSvgGradientUtils$$ = this.$downState$) && $DvtSvgShadowUtils$$ && ($DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$) : this.$_setChildX$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$));
    ($DvtSvgGradientUtils$$ = this.$overState$) && $DvtSvgShadowUtils$$ && ($DvtSvgImageFillUtils$$ ? $DvtSvgGradientUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$) : this.$_setChildX$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$));
    ($DvtSvgShadowUtils$$ = this.$disabledState$) && ($DvtSvgImageFillUtils$$ ? $DvtSvgShadowUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$) : this.$_setChildX$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$));
  };
  $dvt$$17$$.$Button$.prototype.$_setChildX$ = function $$dvt$$17$$$$Button$$$$_setChildX$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.$getNumChildren$();$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getChildAt$($DvtSvgImageFillUtils$$);
      $DvtSvgGradientUtils$$ instanceof $dvt$$17$$.$Displayable$ && $DvtSvgGradientUtils$$.$setTranslateX$($DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Button$.prototype.$setToggleEnabled$ = function $$dvt$$17$$$$Button$$$$setToggleEnabled$$() {
    this.$_bToggleEnabled$ = !0;
  };
  $dvt$$17$$.$Button$.prototype.$setToggled$ = function $$dvt$$17$$$$Button$$$$setToggled$$($DvtSvgShadowUtils$$) {
    this.$_bToggleEnabled$ && ((this.$_bToggled$ = $DvtSvgShadowUtils$$) ? this.$drawDownState$() : this.$drawUpState$());
  };
  $dvt$$17$$.$Button$.prototype.$_isButtonEnabled$ = function $$dvt$$17$$$$Button$$$$_isButtonEnabled$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = !1;
    $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = 0 < $DvtSvgShadowUtils$$.$getAlpha$() ? !0 : !1);
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Button$.prototype.$showKeyboardFocusEffect$ = function $$dvt$$17$$$$Button$$$$showKeyboardFocusEffect$$() {
    this.$_keyboardFocusEffect$ || (this.$_keyboardFocusEffect$ = this.$CreateKeyboardFocusEffect$());
    this.$_keyboardFocusEffect$.show();
    this.$_isShowingKeyboardFocusEffect$ = !0;
    this.$getCtx$().$setActiveElement$(this);
  };
  $dvt$$17$$.$Button$.prototype.$hideKeyboardFocusEffect$ = function $$dvt$$17$$$$Button$$$$hideKeyboardFocusEffect$$() {
    this.$_keyboardFocusEffect$ && this.$_keyboardFocusEffect$.$hide$();
    this.$_isShowingKeyboardFocusEffect$ = !1;
  };
  $dvt$$17$$.$Button$.prototype.$isShowingKeyboardFocusEffect$ = function $$dvt$$17$$$$Button$$$$isShowingKeyboardFocusEffect$$() {
    return this.$_isShowingKeyboardFocusEffect$;
  };
  $dvt$$17$$.$Button$.prototype.$CreateKeyboardFocusEffect$ = function $$dvt$$17$$$$Button$$$$CreateKeyboardFocusEffect$$() {
    return new $dvt$$17$$.$KeyboardFocusEffect$(this.$getCtx$(), this, this.$getDimensions$(), null, null, !0);
  };
  $dvt$$17$$.$Button$.prototype.$handleKeyboardEvent$ = function $$dvt$$17$$$$Button$$$$handleKeyboardEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode;
    $DvtSvgPatternFillUtils$$ != $dvt$$17$$.KeyboardEvent.$ENTER$ && $DvtSvgPatternFillUtils$$ != $dvt$$17$$.KeyboardEvent.$SPACE$ || !this.$_callback$ || (this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this), $DvtSvgShadowUtils$$.stopPropagation(), $DvtSvgShadowUtils$$.preventDefault());
  };
  $dvt$$17$$.$TransientButton$ = function $$dvt$$17$$$$TransientButton$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$TransientButton$, $dvt$$17$$.$Button$);
  $dvt$$17$$.$TransientButton$.$_DEFAULT_RADIUS$ = 15.5;
  $dvt$$17$$.$TransientButton$.prototype.Init = function $$dvt$$17$$$$TransientButton$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    $dvt$$17$$.$TransientButton$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, null, $DvtSvgImplFactory$$, $DvtSvgFilterContext$$);
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$_stage$;
    $DvtSvgShadowUtils$$.$addEvtListener$($DvtFocusEvent$$.$FOCUS$, this.$_onFocus$, !0, this);
    $DvtSvgShadowUtils$$.$addEvtListener$($DvtFocusEvent$$.$BLUR$, this.$_onBlur$, !0, this);
    $dvt$$17$$.$Agent$.$isTouchDevice$() || ($dvt$$17$$.$Agent$.$isPlatformIE$() ? ($DvtSvgShadowUtils$$.$addEvtListener$("mouseenter", this.$_onMouseOver$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$("mouseleave", this.$_onMouseOut$, !1, this)) : ($DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOVER$, this.$_onMouseOver$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOUT$, this.$_onMouseOut$, !1, this)));
  };
  $dvt$$17$$.$TransientButton$.$getStateFromURL$ = function $$dvt$$17$$$$TransientButton$$$getStateFromURL$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$ = $dvt$$17$$.$TransientButton$.$_DEFAULT_RADIUS$, $DvtHtmlRichTooltipManager$$ = $DvtSvgImplFactory$$ / 2, $DvtSvgImplFactory$$ = new $dvt$$17$$.$Circle$($DvtSvgShadowUtils$$, $DvtSvgImplFactory$$, $DvtSvgImplFactory$$, $DvtSvgImplFactory$$);
    $DvtSvgImplFactory$$.$setSolidFill$($DvtSvgFilterUtils$$);
    $DvtSvgImplFactory$$.$setSolidStroke$($DvtSvgFilterContext$$);
    $DvtSvgShadowUtils$$ = new $dvt$$17$$.Image($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtHtmlRichTooltipManager$$, $DvtHtmlRichTooltipManager$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    $DvtSvgImplFactory$$.$addChild$($DvtSvgShadowUtils$$);
    return $DvtSvgImplFactory$$;
  };
  $dvt$$17$$.$TransientButton$.prototype.show = function $$dvt$$17$$$$TransientButton$$$show$() {
    this.$setAlpha$(1);
  };
  $dvt$$17$$.$TransientButton$.prototype.$hide$ = function $$dvt$$17$$$$TransientButton$$$$hide$$() {
    this.$setAlpha$(0);
  };
  $dvt$$17$$.$TransientButton$.prototype.$_onFocus$ = function $$dvt$$17$$$$TransientButton$$$$_onFocus$$() {
    this.$_isFocused$ = !0;
    this.show();
  };
  $dvt$$17$$.$TransientButton$.prototype.$_onBlur$ = function $$dvt$$17$$$$TransientButton$$$$_onBlur$$() {
    this.$_isFocused$ = !1;
    this.$_isMouseOver$ || this.$hide$();
  };
  $dvt$$17$$.$TransientButton$.prototype.$_onMouseOver$ = function $$dvt$$17$$$$TransientButton$$$$_onMouseOver$$() {
    this.$_mouseOutTimer$ && this.$_mouseOutTimer$.$isRunning$() && this.$_mouseOutTimer$.stop();
    this.$_isMouseOver$ = !0;
    this.show();
  };
  $dvt$$17$$.$TransientButton$.prototype.$_onMouseOut$ = function $$dvt$$17$$$$TransientButton$$$$_onMouseOut$$() {
    this.$_mouseOutTimer$ || (this.$_mouseOutTimer$ = new $dvt$$17$$.$Timer$(this.$getCtx$(), 10, this.$_onMouseOutTimerEnd$, this, 1));
    this.$_mouseOutTimer$.reset();
    this.$_mouseOutTimer$.start();
  };
  $dvt$$17$$.$TransientButton$.prototype.$_onMouseOutTimerEnd$ = function $$dvt$$17$$$$TransientButton$$$$_onMouseOutTimerEnd$$() {
    this.$_isMouseOver$ = !1;
    this.$_isFocused$ || this.$hide$();
  };
  $dvt$$17$$.$TransientButton$.prototype.$OnMouseDown$ = function $$dvt$$17$$$$TransientButton$$$$OnMouseDown$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$TransientButton$.$superclass$.$OnMouseDown$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.stopPropagation();
  };
  $dvt$$17$$.$TransientButton$.prototype.$OnMouseUp$ = function $$dvt$$17$$$$TransientButton$$$$OnMouseUp$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$TransientButton$.$superclass$.$OnMouseUp$.call(this, $DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.stopPropagation();
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtLogicalObject$$, $dvt$$17$$.$Obj$);
  $DvtLogicalObject$$.prototype.$getDisplayables$ = function $$DvtLogicalObject$$$$$getDisplayables$$() {
  };
  $DvtLogicalObject$$.prototype.$getAriaLabel$ = function $$DvtLogicalObject$$$$$getAriaLabel$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtTooltipSource$$, $dvt$$17$$.$Obj$);
  $DvtTooltipSource$$.prototype.$getTooltip$ = function $$DvtTooltipSource$$$$$getTooltip$$() {
  };
  $DvtTooltipSource$$.prototype.$getDatatip$ = function $$DvtTooltipSource$$$$$getDatatip$$() {
  };
  $DvtTooltipSource$$.prototype.$getDatatipColor$ = function $$DvtTooltipSource$$$$$getDatatipColor$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtSelectable$$, $dvt$$17$$.$Obj$);
  $DvtSelectable$$.prototype.$isSelectable$ = function $$DvtSelectable$$$$$isSelectable$$() {
  };
  $DvtSelectable$$.prototype.$isSelected$ = function $$DvtSelectable$$$$$isSelected$$() {
  };
  $DvtSelectable$$.prototype.$setSelected$ = function $$DvtSelectable$$$$$setSelected$$() {
  };
  $DvtSelectable$$.prototype.$showHoverEffect$ = function $$DvtSelectable$$$$$showHoverEffect$$() {
  };
  $DvtSelectable$$.prototype.$hideHoverEffect$ = function $$DvtSelectable$$$$$hideHoverEffect$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtKeyboardNavigable$$, $dvt$$17$$.$Obj$);
  $DvtKeyboardNavigable$$.prototype.$getNextNavigable$ = function $$DvtKeyboardNavigable$$$$$getNextNavigable$$() {
  };
  $DvtKeyboardNavigable$$.prototype.$getTargetElem$ = function $$DvtKeyboardNavigable$$$$$getTargetElem$$() {
  };
  $DvtKeyboardNavigable$$.prototype.$getKeyboardBoundingBox$ = function $$DvtKeyboardNavigable$$$$$getKeyboardBoundingBox$$() {
  };
  $DvtKeyboardNavigable$$.prototype.$showKeyboardFocusEffect$ = function $$DvtKeyboardNavigable$$$$$showKeyboardFocusEffect$$() {
  };
  $DvtKeyboardNavigable$$.prototype.$hideKeyboardFocusEffect$ = function $$DvtKeyboardNavigable$$$$$hideKeyboardFocusEffect$$() {
  };
  $DvtKeyboardNavigable$$.prototype.$isShowingKeyboardFocusEffect$ = function $$DvtKeyboardNavigable$$$$$isShowingKeyboardFocusEffect$$() {
  };
  $DvtKeyboardNavigable$$.prototype.$getContextMenuLocation$ = function $$DvtKeyboardNavigable$$$$$getContextMenuLocation$$() {
  };
  $DvtKeyboardNavigable$$.prototype.$getKeyboardTooltipLocation$ = function $$DvtKeyboardNavigable$$$$$getKeyboardTooltipLocation$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCategoricalObject$$, $dvt$$17$$.$Obj$);
  $DvtCategoricalObject$$.prototype.$getCategories$ = function $$DvtCategoricalObject$$$$$getCategories$$() {
  };
  $DvtCategoricalObject$$.prototype.$highlight$ = function $$DvtCategoricalObject$$$$$highlight$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtContextMenuSource$$, $dvt$$17$$.$Obj$);
  $DvtContextMenuSource$$.prototype.$getContextMenuLocation$ = function $$DvtContextMenuSource$$$$$getContextMenuLocation$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtPopupSource$$, $dvt$$17$$.$Obj$);
  $DvtPopupSource$$.prototype.getId = function $$DvtPopupSource$$$$getId$() {
  };
  $DvtPopupSource$$.prototype.$getShowPopupBehaviors$ = function $$DvtPopupSource$$$$$getShowPopupBehaviors$$() {
  };
  $dvt$$17$$.$Automation$ = function $$dvt$$17$$$$Automation$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Automation$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Automation$.$TOOLTIP_SUBID$ = "tooltip";
  $dvt$$17$$.$Automation$.prototype.$getSubIdForDomElement$ = function $$dvt$$17$$$$Automation$$$$getSubIdForDomElement$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Automation$.$_findDisplayable$($DvtSvgShadowUtils$$);
    return !$DvtSvgPatternFillUtils$$ || $DvtSvgPatternFillUtils$$ instanceof Array ? $DvtSvgShadowUtils$$ && this.$IsTooltipElement$($DvtSvgShadowUtils$$) ? $dvt$$17$$.$Automation$.$TOOLTIP_SUBID$ : null : this.$GetSubIdForDomElement$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Automation$.prototype.$GetSubIdForDomElement$ = function $$dvt$$17$$$$Automation$$$$GetSubIdForDomElement$$() {
    return null;
  };
  $dvt$$17$$.$Automation$.prototype.$getDomElementForSubId$ = function $$dvt$$17$$$$Automation$$$$getDomElementForSubId$$() {
    return null;
  };
  $dvt$$17$$.$Automation$.$_findDisplayable$ = function $$dvt$$17$$$$Automation$$$_findDisplayable$$($DvtSvgShadowUtils$$) {
    for (;$DvtSvgShadowUtils$$;) {
      if ($DvtSvgShadowUtils$$.$_obj$) {
        return $DvtSvgShadowUtils$$.$_obj$;
      }
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentNode;
    }
    return null;
  };
  $dvt$$17$$.$Automation$.prototype.$GetTooltipElement$ = function $$dvt$$17$$$$Automation$$$$GetTooltipElement$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getCtx$().$getTooltipManager$($DvtSvgPatternFillUtils$$).$getTooltipElem$();
      return "hidden" == $DvtSvgImageFillUtils$$.style.visibility ? null : $DvtSvgImageFillUtils$$;
    }
    return null;
  };
  $dvt$$17$$.$Automation$.prototype.$IsTooltipElement$ = function $$dvt$$17$$$$Automation$$$$IsTooltipElement$$($DvtSvgShadowUtils$$) {
    return ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getAttribute("id")) && 0 == $DvtSvgShadowUtils$$.indexOf($dvt$$17$$.$HtmlTooltipManager$.$_TOOLTIP_DIV_ID$) ? !0 : !1;
  };
  $dvt$$17$$.$CustomDatatipPeer$ = function $$dvt$$17$$$$CustomDatatipPeer$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$CustomDatatipPeer$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$CustomDatatipPeer$.prototype.Init = function $$dvt$$17$$$$CustomDatatipPeer$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_tooltipManager$ = $DvtSvgShadowUtils$$;
    this.$_tooltipObj$ = $DvtSvgPatternFillUtils$$;
    this.$_datatipColor$ = $DvtSvgImageFillUtils$$;
    this.$_dataContext$ = $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$CustomDatatipPeer$.prototype.$getDatatip$ = function $$dvt$$17$$$$CustomDatatipPeer$$$$getDatatip$$() {
    return this.$_tooltipManager$.$getCustomTooltip$(this.$_tooltipObj$, this.$_dataContext$);
  };
  $dvt$$17$$.$CustomDatatipPeer$.prototype.$getDatatipColor$ = function $$dvt$$17$$$$CustomDatatipPeer$$$$getDatatipColor$$() {
    return this.$_datatipColor$;
  };
  $dvt$$17$$.$SimpleObjPeer$ = function $$dvt$$17$$$$SimpleObjPeer$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SimpleObjPeer$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$SimpleObjPeer$.prototype.Init = function $$dvt$$17$$$$SimpleObjPeer$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_tooltip$ = $DvtSvgShadowUtils$$;
    this.$_datatip$ = $DvtSvgPatternFillUtils$$;
    this.$_datatipColor$ = $DvtSvgImageFillUtils$$;
    this.$_params$ = $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$SimpleObjPeer$.prototype.$setTooltip$ = function $$dvt$$17$$$$SimpleObjPeer$$$$setTooltip$$($DvtSvgShadowUtils$$) {
    this.$_tooltip$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$SimpleObjPeer$.prototype.$setDatatip$ = function $$dvt$$17$$$$SimpleObjPeer$$$$setDatatip$$($DvtSvgShadowUtils$$) {
    this.$_datatip$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$SimpleObjPeer$.prototype.$getParams$ = function $$dvt$$17$$$$SimpleObjPeer$$$$getParams$$() {
    return this.$_params$;
  };
  $dvt$$17$$.$SimpleObjPeer$.prototype.$getTooltip$ = function $$dvt$$17$$$$SimpleObjPeer$$$$getTooltip$$() {
    return this.$_tooltip$;
  };
  $dvt$$17$$.$SimpleObjPeer$.prototype.$getDatatip$ = function $$dvt$$17$$$$SimpleObjPeer$$$$getDatatip$$() {
    return this.$_datatip$;
  };
  $dvt$$17$$.$SimpleObjPeer$.prototype.$getDatatipColor$ = function $$dvt$$17$$$$SimpleObjPeer$$$$getDatatipColor$$() {
    return this.$_datatipColor$;
  };
  $dvt$$17$$.$Agent$ = function $$dvt$$17$$$$Agent$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Agent$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Agent$.$UNKNOWN_VERSION$ = -1;
  $dvt$$17$$.$Agent$.$IE_PLATFORM$ = "ie";
  $dvt$$17$$.$Agent$.$GECKO_PLATFORM$ = "gecko";
  $dvt$$17$$.$Agent$.$WEBKIT_PLATFORM$ = "webkit";
  $dvt$$17$$.$Agent$.$UNKNOWN_PLATFORM$ = "unknown";
  $dvt$$17$$.$Agent$.$WINDOWS_OS$ = "Windows";
  $dvt$$17$$.$Agent$.$SOLARIS_OS$ = "Solaris";
  $dvt$$17$$.$Agent$.$MAC_OS$ = "Mac";
  $dvt$$17$$.$Agent$.$UNKNOWN_OS$ = "Unknown";
  $dvt$$17$$.$Agent$.$FOCUS_COLOR_DEFAULT$ = "#0645AD";
  $dvt$$17$$.$Agent$.$FOCUS_COLOR_IE$ = "#090909";
  $dvt$$17$$.$Agent$.$deferAriaCreation$ = function $$dvt$$17$$$$Agent$$$deferAriaCreation$$() {
    return !$dvt$$17$$.$Agent$.$isTouchDevice$() && !$dvt$$17$$.$Agent$.$isEnvironmentTest$();
  };
  $dvt$$17$$.$Agent$.$getDevicePixelRatio$ = function $$dvt$$17$$$$Agent$$$getDevicePixelRatio$$() {
    $dvt$$17$$.$Agent$.$_initialize$();
    return $dvt$$17$$.$Agent$.$_devicePixelRatio$;
  };
  $dvt$$17$$.$Agent$.$getElementPosition$ = function $$dvt$$17$$$$Agent$$$getElementPosition$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Agent$.$isPlatformIE$() ? $dvt$$17$$.$Agent$.$_getElementPositionIE$($DvtSvgShadowUtils$$) : $dvt$$17$$.$Agent$.$_getElementPositionDefault$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Agent$.$getPlatform$ = function $$dvt$$17$$$$Agent$$$getPlatform$$() {
    $dvt$$17$$.$Agent$.$_initialize$();
    return $dvt$$17$$.$Agent$.$_platform$;
  };
  $dvt$$17$$.$Agent$.$getOS$ = function $$dvt$$17$$$$Agent$$$getOS$$() {
    $dvt$$17$$.$Agent$.$_initialize$();
    return $dvt$$17$$.$Agent$.$_os$;
  };
  $dvt$$17$$.$Agent$.$getVersion$ = function $$dvt$$17$$$$Agent$$$getVersion$$() {
    $dvt$$17$$.$Agent$.$_initialize$();
    return $dvt$$17$$.$Agent$.$_version$;
  };
  $dvt$$17$$.$Agent$.$isBrowserChrome$ = function $$dvt$$17$$$$Agent$$$isBrowserChrome$$() {
    $dvt$$17$$.$Agent$.$_initialize$();
    return $dvt$$17$$.$Agent$.$_bChrome$;
  };
  $dvt$$17$$.$Agent$.$isBrowserSafari$ = function $$dvt$$17$$$$Agent$$$isBrowserSafari$$() {
    return $dvt$$17$$.$Agent$.$isPlatformWebkit$() && !$dvt$$17$$.$Agent$.$isBrowserChrome$();
  };
  $dvt$$17$$.$Agent$.$isPlatformGecko$ = function $$dvt$$17$$$$Agent$$$isPlatformGecko$$() {
    return $dvt$$17$$.$Agent$.$getPlatform$() == $dvt$$17$$.$Agent$.$GECKO_PLATFORM$;
  };
  $dvt$$17$$.$Agent$.$isPlatformIE$ = function $$dvt$$17$$$$Agent$$$isPlatformIE$$() {
    return $dvt$$17$$.$Agent$.$getPlatform$() == $dvt$$17$$.$Agent$.$IE_PLATFORM$;
  };
  $dvt$$17$$.$Agent$.$isPlatformWebkit$ = function $$dvt$$17$$$$Agent$$$isPlatformWebkit$$() {
    return $dvt$$17$$.$Agent$.$getPlatform$() == $dvt$$17$$.$Agent$.$WEBKIT_PLATFORM$;
  };
  $dvt$$17$$.$Agent$.$isRightToLeft$ = function $$dvt$$17$$$$Agent$$$isRightToLeft$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$Agent$.$_initialize$();
    return $DvtSvgShadowUtils$$ && null != $DvtSvgShadowUtils$$.$_readingDirection$ ? "rtl" == $DvtSvgShadowUtils$$.$_readingDirection$ : $dvt$$17$$.$Agent$.$_bRtl$;
  };
  $dvt$$17$$.$Agent$.$isTouchDevice$ = function $$dvt$$17$$$$Agent$$$isTouchDevice$$() {
    $dvt$$17$$.$Agent$.$_initialize$();
    return $dvt$$17$$.$Agent$.$_bTouchDevice$;
  };
  $dvt$$17$$.$Agent$.$setEnvironment$ = function $$dvt$$17$$$$Agent$$$setEnvironment$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$Agent$.$_environment$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Agent$.$isEnvironmentTest$ = function $$dvt$$17$$$$Agent$$$isEnvironmentTest$$() {
    return "test" == $dvt$$17$$.$Agent$.$_environment$;
  };
  $dvt$$17$$.$Agent$.$isEnvironmentBatik$ = function $$dvt$$17$$$$Agent$$$isEnvironmentBatik$$() {
    return "batik" == $dvt$$17$$.$Agent$.$_environment$;
  };
  $dvt$$17$$.$Agent$.$isEnvironmentBrowser$ = function $$dvt$$17$$$$Agent$$$isEnvironmentBrowser$$() {
    return !$dvt$$17$$.$Agent$.$isEnvironmentTest$() && !$dvt$$17$$.$Agent$.$isEnvironmentBatik$();
  };
  $dvt$$17$$.$Agent$.$setHighContrast$ = function $$dvt$$17$$$$Agent$$$setHighContrast$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$Agent$.$_highContrast$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Agent$.$isHighContrast$ = function $$dvt$$17$$$$Agent$$$isHighContrast$$() {
    return !0 === $dvt$$17$$.$Agent$.$_highContrast$;
  };
  $dvt$$17$$.$Agent$.$workaroundFirefoxRepaint$ = function $$dvt$$17$$$$Agent$$$workaroundFirefoxRepaint$$($DvtSvgShadowUtils$$) {
    if ($dvt$$17$$.$Agent$.$isPlatformGecko$()) {
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getParent();
      if ($DvtSvgPatternFillUtils$$) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getChildIndex$($DvtSvgShadowUtils$$);
        $DvtSvgPatternFillUtils$$.$removeChildAt$($DvtSvgImageFillUtils$$);
        $DvtSvgPatternFillUtils$$.$addChildAt$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
      }
    }
  };
  $dvt$$17$$.$Agent$.$_initialize$ = function $$dvt$$17$$$$Agent$$$_initialize$$() {
    if (!$dvt$$17$$.$Agent$.$_bInitialized$) {
      var $DvtSvgShadowUtils$$ = navigator && navigator.userAgent ? navigator.userAgent.toLowerCase() : null;
      $dvt$$17$$.$Agent$.$_os$ = $dvt$$17$$.$Agent$.$_determineOS$($DvtSvgShadowUtils$$);
      $dvt$$17$$.$Agent$.$_platform$ = $dvt$$17$$.$Agent$.$_determinePlatform$($DvtSvgShadowUtils$$);
      $dvt$$17$$.$Agent$.$_bChrome$ = $DvtSvgShadowUtils$$ && -1 != $DvtSvgShadowUtils$$.indexOf("chrome/") && -1 === $DvtSvgShadowUtils$$.indexOf("edge");
      $dvt$$17$$.$Agent$.$_version$ = $dvt$$17$$.$Agent$.$_determineVersion$($DvtSvgShadowUtils$$, $dvt$$17$$.$Agent$.$_platform$);
      $dvt$$17$$.$Agent$.$_bRtl$ = document && document.documentElement ? "rtl" == document.documentElement.dir : !1;
      $dvt$$17$$.$Agent$.$_bTouchDevice$ = $dvt$$17$$.$Agent$.$_platform$ == $dvt$$17$$.$Agent$.$WEBKIT_PLATFORM$ && $DvtSvgShadowUtils$$ && (-1 != $DvtSvgShadowUtils$$.indexOf("mobile") || -1 != $DvtSvgShadowUtils$$.indexOf("android"));
      $dvt$$17$$.$Agent$.$_devicePixelRatio$ = window && null != window.devicePixelRatio ? window.devicePixelRatio : 1;
      $dvt$$17$$.$Agent$.$_bInitialized$ = !0;
    }
  };
  $dvt$$17$$.$Agent$.$_determineOS$ = function $$dvt$$17$$$$Agent$$$_determineOS$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      if (-1 != $DvtSvgShadowUtils$$.indexOf("win")) {
        return $dvt$$17$$.$Agent$.$WINDOWS_OS$;
      }
      if (-1 != $DvtSvgShadowUtils$$.indexOf("mac")) {
        return $dvt$$17$$.$Agent$.$MAC_OS$;
      }
      if (-1 != $DvtSvgShadowUtils$$.indexOf("sunos")) {
        return $dvt$$17$$.$Agent$.$SOLARIS_OS$;
      }
    }
    return $dvt$$17$$.$Agent$.$UNKNOWN_OS$;
  };
  $dvt$$17$$.$Agent$.$_determinePlatform$ = function $$dvt$$17$$$$Agent$$$_determinePlatform$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ && -1 == $DvtSvgShadowUtils$$.indexOf("opera")) {
      if (-1 != $DvtSvgShadowUtils$$.indexOf("trident") || -1 != $DvtSvgShadowUtils$$.indexOf("msie") || -1 != $DvtSvgShadowUtils$$.indexOf("edge")) {
        return $dvt$$17$$.$Agent$.$IE_PLATFORM$;
      }
      if (-1 != $DvtSvgShadowUtils$$.indexOf("applewebkit") || -1 != $DvtSvgShadowUtils$$.indexOf("safari")) {
        return $dvt$$17$$.$Agent$.$WEBKIT_PLATFORM$;
      }
      if (-1 != $DvtSvgShadowUtils$$.indexOf("gecko/")) {
        return $dvt$$17$$.$Agent$.$GECKO_PLATFORM$;
      }
    }
    return $dvt$$17$$.$Agent$.$UNKNOWN_PLATFORM$;
  };
  $dvt$$17$$.$Agent$.$_determineVersion$ = function $$dvt$$17$$$$Agent$$$_determineVersion$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      if ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.$Agent$.$GECKO_PLATFORM$) {
        return $dvt$$17$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /rv:(\d+[.]\d+)/);
      }
      if ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.$Agent$.$IE_PLATFORM$) {
        var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /trident\/(\d+[.]\d+)/);
        if ($DvtSvgImageFillUtils$$ != $dvt$$17$$.$Agent$.$UNKNOWN_VERSION$) {
          return $DvtSvgImageFillUtils$$ + 4;
        }
        $DvtSvgImageFillUtils$$ = $dvt$$17$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /edge\/(\d+[.]\d+)/);
        if ($DvtSvgImageFillUtils$$ != $dvt$$17$$.$Agent$.$UNKNOWN_VERSION$) {
          return $DvtSvgImageFillUtils$$;
        }
        $DvtSvgImageFillUtils$$ = $dvt$$17$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /msie (\d+\.\d+);/);
        return $DvtSvgImageFillUtils$$ != $dvt$$17$$.$Agent$.$UNKNOWN_VERSION$ ? $DvtSvgImageFillUtils$$ : $dvt$$17$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /msie (\d+\.\d+)b;/);
      }
      if ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.$Agent$.$WEBKIT_PLATFORM$) {
        return $dvt$$17$$.$Agent$.$_bChrome$ ? $dvt$$17$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /chrome\/(\d+([.]\d+)*)/) : $dvt$$17$$.$Agent$.$_parseFloatVersion$($DvtSvgShadowUtils$$, /applewebkit\/(\d+([.]\d+)*)/);
      }
    }
    return $dvt$$17$$.$Agent$.$UNKNOWN_VERSION$;
  };
  $dvt$$17$$.$Agent$.$_parseFloatVersion$ = function $$dvt$$17$$$$Agent$$$_parseFloatVersion$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    try {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.match($DvtSvgPatternFillUtils$$);
      return $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$[1] ? parseFloat($DvtSvgImageFillUtils$$[1]) : $dvt$$17$$.$Agent$.$UNKNOWN_VERSION$;
    } catch ($DvtSvgGradientUtils$$) {
      return console.error("dvt.Agent._parseFloatVersion error: "), console.error($DvtSvgGradientUtils$$), $dvt$$17$$.$Agent$.$UNKNOWN_VERSION$;
    }
  };
  $dvt$$17$$.$Agent$.$_getElementPositionDefault$ = function $$dvt$$17$$$$Agent$$$_getElementPositionDefault$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getBoundingClientRect(), $DvtSvgImageFillUtils$$ = Math.round($DvtSvgPatternFillUtils$$.top), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.left, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.ownerDocument.documentElement;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.ownerDocument.body;
    $DvtSvgPatternFillUtils$$ += $DvtSvgGradientUtils$$.scrollLeft || $DvtSvgShadowUtils$$.scrollLeft;
    $DvtSvgImageFillUtils$$ += $DvtSvgGradientUtils$$.scrollTop || $DvtSvgShadowUtils$$.scrollTop;
    return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Agent$.$_getElementPositionIE$ = function $$dvt$$17$$$$Agent$$$_getElementPositionIE$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.getBoundingClientRect(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.top, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.left;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.ownerDocument.documentElement;
    $DvtSvgPatternFillUtils$$ -= $DvtSvgShadowUtils$$.clientLeft - $DvtSvgShadowUtils$$.scrollLeft;
    $DvtSvgImageFillUtils$$ -= $DvtSvgShadowUtils$$.clientTop - $DvtSvgShadowUtils$$.scrollTop;
    return new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Agent$.$getFocusColor$ = function $$dvt$$17$$$$Agent$$$getFocusColor$$() {
    $dvt$$17$$.$Agent$.$_initialize$();
    if (!$dvt$$17$$.$Agent$.$_focusColor$) {
      var $DvtSvgShadowUtils$$;
      if ($dvt$$17$$.$Agent$.$isPlatformWebkit$() && !$dvt$$17$$.$Agent$.$isEnvironmentTest$()) {
        var $DvtSvgPatternFillUtils$$ = document.getElementsByTagName("body")[0], $DvtSvgImageFillUtils$$ = document.createElement("div");
        $DvtSvgPatternFillUtils$$.appendChild($DvtSvgImageFillUtils$$);
        $DvtSvgImageFillUtils$$.style.outline = "-webkit-focus-ring-color";
        $DvtSvgShadowUtils$$ = window.getComputedStyle($DvtSvgImageFillUtils$$).getPropertyValue("outline-color");
        $DvtSvgPatternFillUtils$$.removeChild($DvtSvgImageFillUtils$$);
      } else {
        $dvt$$17$$.$Agent$.$isPlatformIE$() && ($DvtSvgShadowUtils$$ = $dvt$$17$$.$Agent$.$FOCUS_COLOR_IE$);
      }
      $dvt$$17$$.$Agent$.$_focusColor$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : $dvt$$17$$.$Agent$.$FOCUS_COLOR_DEFAULT$;
    }
    return $dvt$$17$$.$Agent$.$_focusColor$;
  };
  $dvt$$17$$.$Bundle$ = function $$dvt$$17$$$$Bundle$$() {
  };
  $dvt$$17$$.$Bundle$._localizedStrings = {};
  $dvt$$17$$.$Bundle$._defaultStrings = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$Bundle$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$Bundle$.$SUBCOMPONENT_PREFIX$ = "DvtSubcomponentBundle";
  $dvt$$17$$.$Bundle$.$AFCOMPONENT_PREFIX$ = "DvtAfComponentBundle";
  $dvt$$17$$.$Bundle$.$UTIL_PREFIX$ = "DvtUtilBundle";
  $dvt$$17$$.$Bundle$.$CHART_PREFIX$ = "DvtChartBundle";
  $dvt$$17$$.$Bundle$.$GAUGE_PREFIX$ = "DvtGaugeBundle";
  $dvt$$17$$.$Bundle$.$TREEMAP_PREFIX$ = "DvtTreemapBundle";
  $dvt$$17$$.$Bundle$.$SUNBURST_PREFIX$ = "DvtSunburstBundle";
  $dvt$$17$$.$Bundle$.$NBOX_PREFIX$ = "DvtNBoxBundle";
  $dvt$$17$$.$Bundle$.$HIERARCHYVIEWER_PREFIX$ = "DvtHierarchyViewerBundle";
  $dvt$$17$$.$Bundle$.$ADF_DIAGRAM_PREFIX$ = "DvtAdfDiagramBundle";
  $dvt$$17$$.$Bundle$.$DIAGRAM_PREFIX$ = "DvtDiagramBundle";
  $dvt$$17$$.$Bundle$.$TAGCLOUD_PREFIX$ = "DvtTagCloudBundle";
  $dvt$$17$$.$Bundle$.$TIMELINE_PREFIX$ = "DvtTimelineBundle";
  $dvt$$17$$.$Bundle$.$addLocalizedStrings$ = function $$dvt$$17$$$$Bundle$$$addLocalizedStrings$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ in $DvtSvgShadowUtils$$) {
      $dvt$$17$$.$Bundle$._localizedStrings[$DvtSvgPatternFillUtils$$] = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
    }
  };
  $dvt$$17$$.$Bundle$.$addDefaultStrings$ = function $$dvt$$17$$$$Bundle$$$addDefaultStrings$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ in $DvtSvgPatternFillUtils$$) {
      $dvt$$17$$.$Bundle$._defaultStrings[$DvtSvgShadowUtils$$ + "." + $DvtSvgImageFillUtils$$] = $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$];
    }
  };
  $dvt$$17$$.$Bundle$.format = function $$dvt$$17$$$$Bundle$$format$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.replace(/\{(\d+)\}/g, function($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) {
      return $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$];
    });
  };
  $dvt$$17$$.$Bundle$.$getTranslatedString$ = function $$dvt$$17$$$$Bundle$$$getTranslatedString$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ + "." + $DvtSvgPatternFillUtils$$;
    ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Bundle$._localizedStrings[$DvtSvgShadowUtils$$]) || ($DvtSvgPatternFillUtils$$ = $dvt$$17$$.$Bundle$._defaultStrings[$DvtSvgShadowUtils$$]);
    $DvtSvgPatternFillUtils$$ && null !== $DvtSvgImageFillUtils$$ && void 0 !== $DvtSvgImageFillUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgImageFillUtils$$ instanceof Array ? $dvt$$17$$.$Bundle$.format($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) : $dvt$$17$$.$Bundle$.format($DvtSvgPatternFillUtils$$, [$DvtSvgImageFillUtils$$]));
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Bundle$.$getTranslation$ = function $$dvt$$17$$$$Bundle$$$getTranslation$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.translations ? $DvtSvgShadowUtils$$.translations[$DvtSvgPatternFillUtils$$] : null;
    $DvtSvgShadowUtils$$ || ($DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ + "." + $DvtSvgGradientUtils$$, ($DvtSvgShadowUtils$$ = $dvt$$17$$.$Bundle$._localizedStrings[$DvtSvgImageFillUtils$$]) || ($DvtSvgShadowUtils$$ = $dvt$$17$$.$Bundle$._defaultStrings[$DvtSvgImageFillUtils$$]));
    $DvtSvgShadowUtils$$ && null !== $DvtSvgFilterUtils$$ && void 0 !== $DvtSvgFilterUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgFilterUtils$$ instanceof Array ? $dvt$$17$$.$Bundle$.format($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$) : $dvt$$17$$.$Bundle$.format($DvtSvgShadowUtils$$, [$DvtSvgFilterUtils$$]));
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ContextMenuHandler$ = function $$dvt$$17$$$$ContextMenuHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_menus$ = $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ContextMenuHandler$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ContextMenuHandler$.$TYPE_BODY_CONTEXT_MENU$ = "bodyContextMenu";
  $dvt$$17$$.$ContextMenuHandler$.$TYPE_CONTEXT_MENU$ = "contextMenu";
  $dvt$$17$$.$ContextMenuHandler$.$TYPE_MULTI_SELECT_CONTEXT_MENU$ = "multiSelectContextMenu";
  $dvt$$17$$.$ContextMenuHandler$.$_ATTR_MENU_CONTAINER_TYPE$ = "t";
  $dvt$$17$$.$ContextMenuHandler$.$_ATTR_MENU_CONTAINER_POPUP_ID$ = "id";
  $dvt$$17$$.$ContextMenuHandler$.prototype.show = function $$dvt$$17$$$$ContextMenuHandler$$$show$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < this.$_menus$.length;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = this.$_menus$[$DvtSvgImageFillUtils$$];
      if ($DvtSvgPatternFillUtils$$ == $DvtSvgGradientUtils$$[$dvt$$17$$.$ContextMenuHandler$.$_ATTR_MENU_CONTAINER_TYPE$]) {
        return $dvt$$17$$.$EventFactory$.$newAdfContextMenuEvent$($DvtSvgShadowUtils$$.$getNativeEvent$(), $DvtSvgGradientUtils$$[$dvt$$17$$.$ContextMenuHandler$.$_ATTR_MENU_CONTAINER_POPUP_ID$]);
      }
    }
    return null;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtPopupBehaviorHandler$$, $dvt$$17$$.$Obj$);
  $DvtPopupBehaviorHandler$$.prototype.$processPopupHelper$ = function $$DvtPopupBehaviorHandler$$$$$processPopupHelper$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$ = !1;
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && 0 < $DvtSvgPatternFillUtils$$.length) {
      for (var $DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgPatternFillUtils$$.length;$DvtHtmlRichTooltipManager$$++) {
        var $DvtDomXmlParser$$ = $DvtSvgPatternFillUtils$$[$DvtHtmlRichTooltipManager$$];
        if ($DvtDomXmlParser$$ && -1 != $dvt$$17$$.$ArrayUtils$.$getIndex$($DvtSvgImageFillUtils$$, $DvtDomXmlParser$$.$getTriggerType$())) {
          this.$HidePopup$($DvtSvgFilterUtils$$);
          this.$_behavior$ = $DvtDomXmlParser$$;
          var $DvtCustomTooltipItem$$ = this.$_createShowPopupEvent$($DvtSvgShadowUtils$$, $DvtDomXmlParser$$, $DvtSvgGradientUtils$$), $DvtContextMenuTooltipItem$$ = this, $DvtSvgImplFactory$$ = function $$DvtSvgImplFactory$$$() {
            $dvt$$17$$.$EventDispatcher$.dispatchEvent($DvtContextMenuTooltipItem$$.$_callback$, $DvtContextMenuTooltipItem$$.$_callbackObj$, $DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$);
          };
          $DvtSvgFilterContext$$ ? setTimeout($DvtSvgImplFactory$$, 100) : $DvtSvgImplFactory$$();
          $DvtSvgImplFactory$$ = !0;
        }
      }
    }
    return $DvtSvgImplFactory$$;
  };
  $DvtPopupBehaviorHandler$$.prototype.$processMousePopup$ = function $$DvtPopupBehaviorHandler$$$$$processMousePopup$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    if ($DvtSvgShadowUtils$$ === this.$_mouseTarget$) {
      return !0;
    }
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && 0 < $DvtSvgPatternFillUtils$$.length) {
      for (var $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImplFactory$$++) {
        var $DvtHtmlRichTooltipManager$$ = $DvtSvgPatternFillUtils$$[$DvtSvgImplFactory$$], $DvtDomXmlParser$$ = $DvtHtmlRichTooltipManager$$ ? $DvtHtmlRichTooltipManager$$.$getTriggerType$() : null;
        $DvtDomXmlParser$$ == $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_HOVER$ && ($DvtDomXmlParser$$ = $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$);
        if ($DvtSvgFilterContext$$ == $DvtDomXmlParser$$) {
          return this.$HidePopup$($DvtSvgFilterUtils$$), this.$_mouseTarget$ = $DvtSvgShadowUtils$$, this.$_behavior$ = $DvtHtmlRichTooltipManager$$, this.$_hoverDisplayable$ = $DvtSvgGradientUtils$$, this.$_popupPosition$ = $DvtSvgImageFillUtils$$, $DvtSvgFilterContext$$ == $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_HOVER$ || $DvtSvgFilterContext$$ == $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$ ? $DvtHtmlRichTooltipManager$$.$getTriggerType$() == $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_HOVER$ ? 
          this.$_hoverTimer$.start() : this.$_overTimer$.start() : this.$_onOverDelay$(), !0;
        }
      }
    }
    return !1;
  };
  $DvtPopupBehaviorHandler$$.prototype.$processMouseOut$ = function $$DvtPopupBehaviorHandler$$$$$processMouseOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = !1;
    $DvtSvgPatternFillUtils$$ && ($DvtSvgGradientUtils$$ = 1 > $DvtSvgPatternFillUtils$$.length);
    !this.$_mouseTarget$ || !this.$_behavior$ || $DvtSvgShadowUtils$$ !== this.$_mouseTarget$ && !$DvtSvgGradientUtils$$ || $DvtSvgPatternFillUtils$$ && this.$_hoverDisplayable$ && -1 < $dvt$$17$$.$ArrayUtils$.$getIndex$($DvtSvgPatternFillUtils$$, this.$_hoverDisplayable$) || this.$HidePopup$($DvtSvgImageFillUtils$$);
  };
  $DvtPopupBehaviorHandler$$.prototype.$HidePopup$ = function $$DvtPopupBehaviorHandler$$$$$HidePopup$$($DvtSvgShadowUtils$$) {
    this.$_hoverPopupShown$ ? ($DvtSvgShadowUtils$$ = $dvt$$17$$.$EventFactory$.$newAdfHidePopupEvent$(this.$_behavior$.$getPopupId$(), $DvtSvgShadowUtils$$.$getNativeEvent$().relatedTarget), $dvt$$17$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, this, $DvtSvgShadowUtils$$)) : this.$_hoverTimer$.stop();
    this.$_behavior$ = this.$_mouseTarget$ = null;
    this.$_hoverPopupShown$ = !1;
    this.$_hoverDisplayable$ = null;
  };
  $DvtPopupBehaviorHandler$$.prototype.$processMouseMove$ = function $$DvtPopupBehaviorHandler$$$$$processMouseMove$$($DvtSvgShadowUtils$$) {
    this.$_popupPosition$ = $DvtSvgShadowUtils$$;
  };
  $DvtPopupBehaviorHandler$$.prototype.$_createShowPopupEvent$ = function $$DvtPopupBehaviorHandler$$$$$_createShowPopupEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$;
    ($DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$.$getAlign$() && !$DvtSvgGradientUtils$$.$getAlignId$()) && ($DvtSvgFilterUtils$$ = new $dvt$$17$$.$ShowPopupBehavior$($DvtSvgGradientUtils$$.$getPopupId$(), $DvtSvgGradientUtils$$.$getTriggerType$(), null, null));
    $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getPopupBounds$ ? $DvtSvgShadowUtils$$.$getPopupBounds$($DvtSvgFilterUtils$$) : null;
    $DvtSvgPatternFillUtils$$ && !$DvtSvgFilterUtils$$ ? ($DvtSvgImageFillUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y), $DvtSvgFilterUtils$$ = new $dvt$$17$$.$Rectangle$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y - 5, 1, 5)) : $DvtSvgFilterUtils$$ && ($DvtSvgGradientUtils$$ = new $dvt$$17$$.$ShowPopupBehavior$($DvtSvgGradientUtils$$.$getPopupId$(), $DvtSvgGradientUtils$$.$getTriggerType$(), null, $DvtSvgGradientUtils$$.$getAlign$()));
    $DvtSvgGradientUtils$$ = $dvt$$17$$.$EventFactory$.$newAdfShowPopupEvent$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, null, $DvtSvgGradientUtils$$.$getTriggerType$());
    $dvt$$17$$.$EventManager$.$_addContextInfo$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$);
    return $DvtSvgGradientUtils$$;
  };
  $DvtPopupBehaviorHandler$$.prototype.$_onHoverDelay$ = function $$DvtPopupBehaviorHandler$$$$$_onHoverDelay$$() {
    if (this.$_mouseTarget$ && this.$_behavior$) {
      this.$_hoverPopupShown$ = !0;
      var $DvtSvgShadowUtils$$ = this.$_createShowPopupEvent$(this.$_mouseTarget$, this.$_behavior$, this.$_popupPosition$);
      $dvt$$17$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, this, $DvtSvgShadowUtils$$);
    }
  };
  $DvtPopupBehaviorHandler$$.prototype.$_onOverDelay$ = function $$DvtPopupBehaviorHandler$$$$$_onOverDelay$$() {
    if (this.$_mouseTarget$ && this.$_behavior$) {
      var $DvtSvgShadowUtils$$ = this.$_createShowPopupEvent$(this.$_mouseTarget$, this.$_behavior$, this.$_popupPosition$);
      $dvt$$17$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, this, $DvtSvgShadowUtils$$);
    }
  };
  $DvtPopupBehaviorHandler$$.prototype.$hasPopup$ = function $$DvtPopupBehaviorHandler$$$$$hasPopup$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!$DvtSvgShadowUtils$$ || !$DvtSvgShadowUtils$$.$getShowPopupBehaviors$) {
      return !1;
    }
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getShowPopupBehaviors$();
    if ($DvtSvgImageFillUtils$$) {
      for (var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$[$DvtSvgGradientUtils$$];
        if ($DvtSvgFilterUtils$$ && -1 != $dvt$$17$$.$ArrayUtils$.$getIndex$($DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$.$getTriggerType$())) {
          return !0;
        }
      }
    }
    return !1;
  };
  $dvt$$17$$.$ClientBehaviorHandler$ = function $$dvt$$17$$$$ClientBehaviorHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ClientBehaviorHandler$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ClientBehaviorHandler$.prototype.Init = function $$dvt$$17$$$$ClientBehaviorHandler$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$ClientBehaviorHandler$.prototype.$processClick$ = function $$dvt$$17$$$$ClientBehaviorHandler$$$$processClick$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = !1;
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && 0 < $DvtSvgPatternFillUtils$$.length) {
      for (var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgGradientUtils$$++) {
        var $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgGradientUtils$$];
        !$DvtSvgFilterUtils$$ || $DvtSvgFilterUtils$$.$getTriggerType$() != $dvt$$17$$.$ClientBehavior$.$TRIGGER_TYPE_ACTION$ && $DvtSvgFilterUtils$$.$getTriggerType$() != $dvt$$17$$.$ClientBehavior$.$TRIGGER_TYPE_CLICK$ || ($DvtSvgImageFillUtils$$ = this.$CreateClientBehaviorEvent$($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$), $dvt$$17$$.$EventDispatcher$.dispatchEvent(this.$_callback$, this.$_callbackObj$, null, $DvtSvgImageFillUtils$$), $DvtSvgImageFillUtils$$ = !0);
      }
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$ClientBehaviorHandler$.prototype.$CreateClientBehaviorEvent$ = function $$dvt$$17$$$$ClientBehaviorHandler$$$$CreateClientBehaviorEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$ClientBehaviorEvent$($DvtSvgPatternFillUtils$$);
    $dvt$$17$$.$EventManager$.$_addContextInfo$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$SelectionHandler$ = function $$dvt$$17$$$$SelectionHandler$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SelectionHandler$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$SelectionHandler$.$TYPE_SINGLE$ = "s";
  $dvt$$17$$.$SelectionHandler$.$TYPE_MULTIPLE$ = "m";
  $dvt$$17$$.$SelectionHandler$.prototype.Init = function $$dvt$$17$$$$SelectionHandler$$$Init$($DvtSvgShadowUtils$$) {
    this.$_selection$ = [];
    this.$_type$ = $DvtSvgShadowUtils$$ ? $DvtSvgShadowUtils$$ : $dvt$$17$$.$SelectionHandler$.$TYPE_SINGLE$;
    this.$_hiddenSelectedIds$ = [];
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$getType$ = function $$dvt$$17$$$$SelectionHandler$$$$getType$$() {
    return this.$_type$;
  };
  $dvt$$17$$.$SelectionHandler$.prototype.getSelection = function $$dvt$$17$$$$SelectionHandler$$$getSelection$() {
    return this.$_selection$.slice(0);
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$getSelectedIds$ = function $$dvt$$17$$$$SelectionHandler$$$$getSelectedIds$$() {
    for (var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_selection$.length;$DvtSvgPatternFillUtils$$++) {
      $DvtSvgShadowUtils$$.push(this.$_selection$[$DvtSvgPatternFillUtils$$].getId());
    }
    return $DvtSvgShadowUtils$$.concat(this.$_hiddenSelectedIds$);
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$processInitialSelections$ = function $$dvt$$17$$$$SelectionHandler$$$$processInitialSelections$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$clearSelection$(!0);
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$) {
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        for (var $DvtSvgGradientUtils$$ = !0, $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++) {
          var $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$].getId();
          if (null != $DvtSvgFilterContext$$ && $dvt$$17$$.$SelectionHandler$.$_isEquals$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$], $DvtSvgFilterContext$$) && $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$].$isSelectable$ && $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$].$isSelectable$()) {
            this.$_addToSelection$($DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$], !0, !0);
            $DvtSvgGradientUtils$$ = !1;
            break;
          }
        }
        $DvtSvgGradientUtils$$ && this.$_hiddenSelectedIds$.push($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]);
      }
    }
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$processClick$ = function $$dvt$$17$$$$SelectionHandler$$$$processClick$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isUnrelatedToSelection$) {
      return !1;
    }
    var $DvtSvgImageFillUtils$$ = !1;
    $DvtSvgPatternFillUtils$$ && this.$_type$ == $dvt$$17$$.$SelectionHandler$.$TYPE_MULTIPLE$ ? $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() && ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$isSelected$() ? this.$removeFromSelection$($DvtSvgShadowUtils$$) : this.$_addToSelection$($DvtSvgShadowUtils$$, !0)) : $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() ? this.$_addToSelection$($DvtSvgShadowUtils$$, 
    !1) : this.$clearSelection$();
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$processGroupSelection$ = function $$dvt$$17$$$$SelectionHandler$$$$processGroupSelection$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
      ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]) && $DvtSvgPatternFillUtils$$.$isUnrelatedToSelection$ || this.$_addToSelection$($DvtSvgPatternFillUtils$$, !0);
    }
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$processMouseOver$ = function $$dvt$$17$$$$SelectionHandler$$$$processMouseOver$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() && $DvtSvgShadowUtils$$.$showHoverEffect$ && $DvtSvgShadowUtils$$.$showHoverEffect$();
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$processMouseOut$ = function $$dvt$$17$$$$SelectionHandler$$$$processMouseOut$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() && $DvtSvgShadowUtils$$.$hideHoverEffect$ && $DvtSvgShadowUtils$$.$hideHoverEffect$();
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$_addToSelection$ = function $$dvt$$17$$$$SelectionHandler$$$$_addToSelection$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgShadowUtils$$.$isSelected$() || $DvtSvgShadowUtils$$.$isSelectable$ && !$DvtSvgShadowUtils$$.$isSelectable$()) {
      return !1;
    }
    $DvtSvgPatternFillUtils$$ || this.$clearSelection$($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$.$setSelected$(!0, $DvtSvgImageFillUtils$$);
    this.$_selection$.push($DvtSvgShadowUtils$$);
    return !0;
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$removeFromSelection$ = function $$dvt$$17$$$$SelectionHandler$$$$removeFromSelection$$($DvtSvgShadowUtils$$) {
    if (!$DvtSvgShadowUtils$$.$isSelected$()) {
      return !1;
    }
    $DvtSvgShadowUtils$$.$setSelected$(!1);
    for (var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_selection$.length;$DvtSvgPatternFillUtils$$++) {
      if (this.$_selection$[$DvtSvgPatternFillUtils$$] == $DvtSvgShadowUtils$$) {
        this.$_selection$.splice($DvtSvgPatternFillUtils$$, 1);
        break;
      }
    }
    return !0;
  };
  $dvt$$17$$.$SelectionHandler$.prototype.$clearSelection$ = function $$dvt$$17$$$$SelectionHandler$$$$clearSelection$$($DvtSvgShadowUtils$$) {
    if (0 >= this.$_selection$.length && 0 >= this.$_hiddenSelectedIds$.length) {
      return !1;
    }
    for (;0 < this.$_selection$.length;) {
      this.$_selection$.pop().$setSelected$(!1, $DvtSvgShadowUtils$$);
    }
    this.$_hiddenSelectedIds$.length = 0;
    return !0;
  };
  $dvt$$17$$.$SelectionHandler$.$_isEquals$ = function $$dvt$$17$$$$SelectionHandler$$$_isEquals$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$ == $DvtSvgPatternFillUtils$$ ? !0 : $DvtSvgShadowUtils$$ instanceof String ? !1 : $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$equals$ ? $DvtSvgShadowUtils$$.$equals$($DvtSvgPatternFillUtils$$) : !1;
  };
  $dvt$$17$$.$KeyboardHandler$ = function $$dvt$$17$$$$KeyboardHandler$$($DvtSvgShadowUtils$$) {
    this.Init($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$KeyboardHandler$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$KeyboardHandler$.$_OPTIMAL_ANGLE1$ = 15 / 180 * Math.PI;
  $dvt$$17$$.$KeyboardHandler$.$_OPTIMAL_ANGLE2$ = 40 / 180 * Math.PI;
  $dvt$$17$$.$KeyboardHandler$.$_SUBOPTIMAL_ANGLE_PENALTY1$ = 2;
  $dvt$$17$$.$KeyboardHandler$.$_SUBOPTIMAL_ANGLE_PENALTY2$ = 6;
  $dvt$$17$$.$KeyboardHandler$.prototype.Init = function $$dvt$$17$$$$KeyboardHandler$$$Init$($DvtSvgShadowUtils$$) {
    this.$_eventManager$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$KeyboardHandler$.prototype.$processKeyDown$ = function $$dvt$$17$$$$KeyboardHandler$$$$processKeyDown$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_eventManager$.$getFocus$();
    if ($DvtSvgPatternFillUtils$$ && (this.$isNavigationEvent$($DvtSvgShadowUtils$$) || this.$isMultiSelectEvent$($DvtSvgShadowUtils$$))) {
      $dvt$$17$$.$EventManager$.$consumeEvent$($DvtSvgShadowUtils$$);
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getNextNavigable$($DvtSvgShadowUtils$$);
      $DvtSvgImageFillUtils$$ != $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ && this.$_showPopupHelper$($DvtSvgImageFillUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_FOCUS$], $DvtSvgShadowUtils$$), this.$_showPopupHelper$($DvtSvgPatternFillUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_BLUR$], $DvtSvgShadowUtils$$));
      return $DvtSvgImageFillUtils$$;
    }
    $DvtSvgShadowUtils$$.keyCode != $dvt$$17$$.KeyboardEvent.$TAB$ && $DvtSvgPatternFillUtils$$ && this.$_showPopupHelper$($DvtSvgPatternFillUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_DOWN$], $DvtSvgShadowUtils$$);
    return null;
  };
  $dvt$$17$$.$KeyboardHandler$.prototype.$processKeyUp$ = function $$dvt$$17$$$$KeyboardHandler$$$$processKeyUp$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_eventManager$.$getFocus$();
    $DvtSvgImageFillUtils$$ && $DvtSvgShadowUtils$$.keyCode == $dvt$$17$$.KeyboardEvent.$TAB$ ? this.$_showPopupHelper$($DvtSvgImageFillUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_FOCUS$], $DvtSvgShadowUtils$$) : !$DvtSvgImageFillUtils$$ || this.$isNavigationEvent$($DvtSvgShadowUtils$$) || this.$isMultiSelectEvent$($DvtSvgShadowUtils$$) || this.$_showPopupHelper$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$KeyboardHandler$.$getNextNavigable$ = function $$dvt$$17$$$$KeyboardHandler$$$getNextNavigable$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = null, $DvtSvgFilterContext$$ = 0, $DvtSvgImplFactory$$ = 0;
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.keyCode;
    if (!$DvtSvgShadowUtils$$) {
      return !$DvtSvgImageFillUtils$$ || 1 > $DvtSvgImageFillUtils$$.length ? null : $DvtSvgImageFillUtils$$[0];
    }
    for (var $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$(), $DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtSvgImageFillUtils$$.length;$DvtDomXmlParser$$++) {
      var $DvtCustomTooltipItem$$ = $DvtSvgImageFillUtils$$[$DvtDomXmlParser$$];
      $DvtSvgShadowUtils$$ !== $DvtCustomTooltipItem$$ && ($DvtSvgImplFactory$$ = $DvtCustomTooltipItem$$.$getKeyboardBoundingBox$(), $DvtSvgGradientUtils$$ || $dvt$$17$$.$KeyboardHandler$.$_isInBounds$($DvtHtmlRichTooltipManager$$, $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$)) && ($DvtSvgImplFactory$$ = $dvt$$17$$.$KeyboardHandler$.$_computeDelta$($DvtHtmlRichTooltipManager$$, $DvtSvgImplFactory$$, $DvtSvgPatternFillUtils$$), ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$UP_ARROW$ || 
      $DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$) && 0 > $DvtSvgImplFactory$$ && (!$DvtSvgFilterUtils$$ || $DvtSvgImplFactory$$ > $DvtSvgFilterContext$$) || ($DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$ || $DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$) && 0 < $DvtSvgImplFactory$$ && (!$DvtSvgFilterUtils$$ || $DvtSvgImplFactory$$ < $DvtSvgFilterContext$$)) && ($DvtSvgFilterUtils$$ = $DvtCustomTooltipItem$$, $DvtSvgFilterContext$$ = 
      $DvtSvgImplFactory$$);
    }
    return $DvtSvgFilterUtils$$ ? $DvtSvgFilterUtils$$ : $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$KeyboardHandler$.prototype.$_showPopupHelper$ = function $$dvt$$17$$$$KeyboardHandler$$$$_showPopupHelper$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$_eventManager$.$getCtx$(), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$($DvtSvgGradientUtils$$.$_stage$).$getCenter$(), $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.$stageToPageCoords$($DvtSvgFilterUtils$$.x, $DvtSvgFilterUtils$$.y), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getShowPopupBehaviors$ ? $DvtSvgShadowUtils$$.$getShowPopupBehaviors$() : null;
    this.$_eventManager$.$PopupHandler$.$processPopupHelper$($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$KeyboardHandler$.prototype.$getDefaultNavigable$ = function $$dvt$$17$$$$KeyboardHandler$$$$getDefaultNavigable$$($DvtSvgShadowUtils$$) {
    if (!$DvtSvgShadowUtils$$ || 0 >= $DvtSvgShadowUtils$$.length) {
      return null;
    }
    for (var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$[0], $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$(), $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = 1;$DvtSvgFilterContext$$ < $DvtSvgShadowUtils$$.length;$DvtSvgFilterContext$$++) {
      if ($DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgFilterContext$$], $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$getKeyboardBoundingBox$(), ($DvtSvgFilterUtils$$.x == $DvtSvgImageFillUtils$$.x && $DvtSvgFilterUtils$$.y < $DvtSvgImageFillUtils$$.y || $DvtSvgFilterUtils$$.x < $DvtSvgImageFillUtils$$.x) && !$dvt$$17$$.$Agent$.$isRightToLeft$(this.$_eventManager$.$getCtx$()) || ($DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ == $DvtSvgImageFillUtils$$.x + $DvtSvgImageFillUtils$$.$w$ && 
      $DvtSvgFilterUtils$$.y < $DvtSvgImageFillUtils$$.y || $DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ > $DvtSvgImageFillUtils$$.x + $DvtSvgImageFillUtils$$.$w$) && $dvt$$17$$.$Agent$.$isRightToLeft$(this.$_eventManager$.$getCtx$())) {
        $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$();
      }
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$KeyboardHandler$.prototype.$isNavigationEvent$ = function $$dvt$$17$$$$KeyboardHandler$$$$isNavigationEvent$$($DvtSvgShadowUtils$$) {
    switch($DvtSvgShadowUtils$$.keyCode) {
      case $dvt$$17$$.KeyboardEvent.$UP_ARROW$:
      ;
      case $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$:
      ;
      case $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$:
      ;
      case $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$:
        return !0;
    }
    return !1;
  };
  $dvt$$17$$.$KeyboardHandler$.prototype.$isSelectionEvent$ = function $$dvt$$17$$$$KeyboardHandler$$$$isSelectionEvent$$() {
    return !1;
  };
  $dvt$$17$$.$KeyboardHandler$.prototype.$isMultiSelectEvent$ = function $$dvt$$17$$$$KeyboardHandler$$$$isMultiSelectEvent$$() {
    return !1;
  };
  $dvt$$17$$.$KeyboardHandler$.prototype.$isContextMenuEvent$ = function $$dvt$$17$$$$KeyboardHandler$$$$isContextMenuEvent$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.keyCode == $dvt$$17$$.KeyboardEvent.$M$ && $DvtSvgShadowUtils$$.altKey && $DvtSvgShadowUtils$$.ctrlKey;
  };
  $dvt$$17$$.$KeyboardHandler$.$_isInBounds$ = function $$dvt$$17$$$$KeyboardHandler$$$_isInBounds$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$UP_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$) {
      $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.x;
      $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$ + $DvtSvgShadowUtils$$.$w$;
      var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.x;
      return !($DvtSvgImageFillUtils$$ >= $DvtSvgGradientUtils$$ + $DvtSvgPatternFillUtils$$.$w$ || $DvtSvgShadowUtils$$ <= $DvtSvgGradientUtils$$);
    }
    if ($DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$) {
      return $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.y, $DvtSvgShadowUtils$$ = $DvtSvgImageFillUtils$$ + $DvtSvgShadowUtils$$.$h$, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.y, !($DvtSvgImageFillUtils$$ >= $DvtSvgGradientUtils$$ + $DvtSvgPatternFillUtils$$.$h$ || $DvtSvgShadowUtils$$ <= $DvtSvgGradientUtils$$);
    }
  };
  $dvt$$17$$.$KeyboardHandler$.$_computeDelta$ = function $$dvt$$17$$$$KeyboardHandler$$$_computeDelta$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = 0, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getCenter$().x;
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getCenter$().y;
    var $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$getCenter$().x;
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$getCenter$().y;
    if ($DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$UP_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$) {
      $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ - $DvtSvgShadowUtils$$;
    } else {
      if ($DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$) {
        $DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$ - $DvtSvgFilterUtils$$;
      }
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$KeyboardHandler$.$getNextAdjacentNavigable$ = function $$dvt$$17$$$$KeyboardHandler$$$getNextAdjacentNavigable$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.keyCode;
    if (!$DvtSvgImageFillUtils$$) {
      return null;
    }
    if (!$DvtSvgShadowUtils$$) {
      return $DvtSvgImageFillUtils$$[0];
    }
    for (var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$ = Number.MAX_VALUE, $DvtSvgFilterContext$$ = !1, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgImageFillUtils$$.length;$DvtSvgImplFactory$$++) {
      var $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$[$DvtSvgImplFactory$$];
      if ($DvtHtmlRichTooltipManager$$ !== $DvtSvgShadowUtils$$ && $dvt$$17$$.$KeyboardHandler$.$_isValidDestination$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)) {
        var $DvtDomXmlParser$$ = $dvt$$17$$.$KeyboardHandler$.$_calcInContact$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
        if (!$DvtSvgFilterContext$$ || $DvtDomXmlParser$$) {
          var $DvtCustomTooltipItem$$ = $dvt$$17$$.$KeyboardHandler$.$_calcDistanceAngleWeighted$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
          if (!$DvtSvgFilterContext$$ && $DvtDomXmlParser$$ || $DvtCustomTooltipItem$$ < $DvtSvgFilterUtils$$ && ($DvtSvgFilterContext$$ && $DvtDomXmlParser$$ || !$DvtSvgFilterContext$$)) {
            $DvtSvgFilterUtils$$ = $DvtCustomTooltipItem$$, $DvtSvgGradientUtils$$ = $DvtHtmlRichTooltipManager$$, $DvtSvgFilterContext$$ = $DvtDomXmlParser$$;
          }
        }
      }
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$KeyboardHandler$.$_calcInContact$ = function $$dvt$$17$$$$KeyboardHandler$$$_calcInContact$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$();
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$();
    switch($DvtSvgImageFillUtils$$) {
      case $dvt$$17$$.KeyboardEvent.$UP_ARROW$:
        return $dvt$$17$$.$KeyboardHandler$.$_isVerticallyAligned$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && ($DvtSvgPatternFillUtils$$.y <= $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$ || $dvt$$17$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgPatternFillUtils$$.y, $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$));
      case $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$:
        return $dvt$$17$$.$KeyboardHandler$.$_isVerticallyAligned$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && ($DvtSvgShadowUtils$$.y <= $DvtSvgPatternFillUtils$$.y + $DvtSvgPatternFillUtils$$.$h$ || $dvt$$17$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.y, $DvtSvgPatternFillUtils$$.y + $DvtSvgPatternFillUtils$$.$h$));
      case $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$:
        return $dvt$$17$$.$KeyboardHandler$.$_isHorizontallyAligned$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && ($DvtSvgShadowUtils$$.x <= $DvtSvgPatternFillUtils$$.x + $DvtSvgPatternFillUtils$$.$w$ || $dvt$$17$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.x, $DvtSvgPatternFillUtils$$.x + $DvtSvgPatternFillUtils$$.$w$));
      case $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$:
        return $dvt$$17$$.$KeyboardHandler$.$_isHorizontallyAligned$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && ($DvtSvgPatternFillUtils$$.x <= $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$ || $dvt$$17$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgPatternFillUtils$$.x, $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$));
    }
    return !1;
  };
  $dvt$$17$$.$KeyboardHandler$.$_isVerticallyAligned$ = function $$dvt$$17$$$$KeyboardHandler$$$_isVerticallyAligned$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.x >= $DvtSvgPatternFillUtils$$.x && $DvtSvgShadowUtils$$.x <= $DvtSvgPatternFillUtils$$.x + $DvtSvgPatternFillUtils$$.$w$ || $DvtSvgPatternFillUtils$$.x >= $DvtSvgShadowUtils$$.x && $DvtSvgPatternFillUtils$$.x <= $DvtSvgShadowUtils$$.x + $DvtSvgShadowUtils$$.$w$;
  };
  $dvt$$17$$.$KeyboardHandler$.$_isHorizontallyAligned$ = function $$dvt$$17$$$$KeyboardHandler$$$_isHorizontallyAligned$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.y >= $DvtSvgPatternFillUtils$$.y && $DvtSvgShadowUtils$$.y <= $DvtSvgPatternFillUtils$$.y + $DvtSvgPatternFillUtils$$.$h$ || $DvtSvgPatternFillUtils$$.y >= $DvtSvgShadowUtils$$.y && $DvtSvgPatternFillUtils$$.y <= $DvtSvgShadowUtils$$.y + $DvtSvgShadowUtils$$.$h$;
  };
  $dvt$$17$$.$KeyboardHandler$.$_calcDistanceAngleWeighted$ = function $$dvt$$17$$$$KeyboardHandler$$$_calcDistanceAngleWeighted$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$();
    $DvtSvgShadowUtils$$ = $DvtSvgGradientUtils$$.x + $DvtSvgGradientUtils$$.$w$ / 2;
    var $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.y + $DvtSvgGradientUtils$$.$h$ / 2, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$();
    $DvtSvgPatternFillUtils$$ = Math.abs($DvtSvgShadowUtils$$ - ($DvtSvgFilterUtils$$.x + $DvtSvgFilterUtils$$.$w$ / 2));
    $DvtSvgGradientUtils$$ = Math.abs($DvtSvgGradientUtils$$ - ($DvtSvgFilterUtils$$.y + $DvtSvgFilterUtils$$.$h$ / 2));
    $DvtSvgShadowUtils$$ = Math.atan2($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgPatternFillUtils$$ = Math.sqrt($DvtSvgPatternFillUtils$$ * $DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$ * $DvtSvgGradientUtils$$);
    if ($DvtSvgShadowUtils$$ > $dvt$$17$$.$KeyboardHandler$.$_OPTIMAL_ANGLE1$ && ($DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$) || $DvtSvgShadowUtils$$ < $dvt$$17$$.Math.$HALF_PI$ - $dvt$$17$$.$KeyboardHandler$.$_OPTIMAL_ANGLE1$ && ($DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$UP_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$)) {
      $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ > $dvt$$17$$.$KeyboardHandler$.$_OPTIMAL_ANGLE2$ && ($DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$) || $DvtSvgShadowUtils$$ < $dvt$$17$$.Math.$HALF_PI$ - $dvt$$17$$.$KeyboardHandler$.$_OPTIMAL_ANGLE2$ && ($DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$UP_ARROW$ || $DvtSvgImageFillUtils$$ == $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$) ? $DvtSvgPatternFillUtils$$ * 
      $dvt$$17$$.$KeyboardHandler$.$_SUBOPTIMAL_ANGLE_PENALTY2$ : $DvtSvgPatternFillUtils$$ * $dvt$$17$$.$KeyboardHandler$.$_SUBOPTIMAL_ANGLE_PENALTY1$;
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$KeyboardHandler$.$_isValidDestination$ = function $$dvt$$17$$$$KeyboardHandler$$$_isValidDestination$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getKeyboardBoundingBox$();
    $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$();
    switch($DvtSvgImageFillUtils$$) {
      case $dvt$$17$$.KeyboardEvent.$UP_ARROW$:
        return $DvtSvgShadowUtils$$.y < $DvtSvgPatternFillUtils$$.y || $dvt$$17$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.y, $DvtSvgPatternFillUtils$$.y);
      case $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$:
        return $DvtSvgShadowUtils$$.y > $DvtSvgPatternFillUtils$$.y || $dvt$$17$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.y, $DvtSvgPatternFillUtils$$.y);
      case $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$:
        return $DvtSvgShadowUtils$$.x > $DvtSvgPatternFillUtils$$.x || $dvt$$17$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.x, $DvtSvgPatternFillUtils$$.x);
      case $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$:
        return $DvtSvgShadowUtils$$.x < $DvtSvgPatternFillUtils$$.x || $dvt$$17$$.$KeyboardHandler$.$_areEqualWithinTolerance$($DvtSvgShadowUtils$$.x, $DvtSvgPatternFillUtils$$.x);
    }
    return !0;
  };
  $dvt$$17$$.$KeyboardHandler$.$_areEqualWithinTolerance$ = function $$dvt$$17$$$$KeyboardHandler$$$_areEqualWithinTolerance$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return 1E-7 >= Math.abs($DvtSvgShadowUtils$$ - $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$MarqueeHandler$ = function $$dvt$$17$$$$MarqueeHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $dvt$$17$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$MarqueeHandler$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$MarqueeHandler$.prototype.Init = function $$dvt$$17$$$$MarqueeHandler$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$) {
    this.$_context$ = $DvtSvgShadowUtils$$.$getCtx$();
    this.$_container$ = $DvtSvgShadowUtils$$;
    this.$_bounds$ = $DvtSvgPatternFillUtils$$;
    this.$_fill$ = $DvtSvgGradientUtils$$;
    this.$_stroke$ = $DvtSvgFilterUtils$$;
    this.$_allowHoriz$ = null == $DvtSvgFilterContext$$ ? !0 : $DvtSvgFilterContext$$;
    this.$_allowVert$ = null == $DvtSvgImplFactory$$ ? !0 : $DvtSvgImplFactory$$;
    this.$_horizBounds$ = $DvtHtmlRichTooltipManager$$;
    this.$_vertBounds$ = $DvtDomXmlParser$$;
    this.$_glassPane$ = new $dvt$$17$$.Rect(this.$_context$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$.$h$);
    this.$_glassPane$.$setInvisibleFill$();
    this.$_resizeVert$ = this.$_resizeHoriz$ = this.$_marqueeDrawn$ = this.$_marqueeOn$ = !1;
  };
  $dvt$$17$$.$MarqueeHandler$.prototype.$processDragStart$ = function $$dvt$$17$$$$MarqueeHandler$$$$processDragStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!this.$_marqueeOn$) {
      this.$_origPt$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
      this.$_resizeHoriz$ = this.$_allowHoriz$;
      this.$_resizeVert$ = this.$_allowVert$;
      if (!this.$_bounds$.$containsPoint$(this.$_origPt$.x, this.$_origPt$.y)) {
        if (this.$_vertBounds$ && this.$_vertBounds$.$containsPoint$(this.$_origPt$.x, this.$_origPt$.y)) {
          this.$_resizeHoriz$ = !1;
        } else {
          if (this.$_horizBounds$ && this.$_horizBounds$.$containsPoint$(this.$_origPt$.x, this.$_origPt$.y)) {
            this.$_resizeVert$ = !1;
          } else {
            return null;
          }
        }
      }
      this.$_marqueeOn$ = !0;
      this.$_marquee$ = null;
      return this.$_createMarqueeEvent$($dvt$$17$$.$MarqueeEvent$.$SUBTYPE_START$, $DvtSvgPatternFillUtils$$);
    }
    return null;
  };
  $dvt$$17$$.$MarqueeHandler$.prototype.$processDragMove$ = function $$dvt$$17$$$$MarqueeHandler$$$$processDragMove$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!this.$_marqueeOn$) {
      return null;
    }
    this.$_marqueeDrawn$ || (this.$_container$.$addChild$(this.$_glassPane$), this.$_marquee$ = new $dvt$$17$$.Rect(this.$_context$, this.$_bounds$.x, this.$_bounds$.y, this.$_bounds$.$w$, this.$_bounds$.$h$), this.$_resizeHoriz$ && (this.$_marquee$.$setX$(this.$_origPt$.x), this.$_marquee$.$setWidth$(0)), this.$_resizeVert$ && (this.$_marquee$.$setY$(this.$_origPt$.y), this.$_marquee$.$setHeight$(0)), this.$_marquee$.$setStroke$(this.$_stroke$), this.$_marquee$.$setFill$(this.$_fill$), this.$_marquee$.$setPixelHinting$(), 
    this.$_glassPane$.$addChild$(this.$_marquee$), this.$_marqueeDrawn$ = !0);
    var $DvtSvgImageFillUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    $DvtSvgImageFillUtils$$.x = Math.max($DvtSvgImageFillUtils$$.x, this.$_bounds$.x);
    $DvtSvgImageFillUtils$$.x = Math.min($DvtSvgImageFillUtils$$.x, this.$_bounds$.x + this.$_bounds$.$w$);
    $DvtSvgImageFillUtils$$.y = Math.max($DvtSvgImageFillUtils$$.y, this.$_bounds$.y);
    $DvtSvgImageFillUtils$$.y = Math.min($DvtSvgImageFillUtils$$.y, this.$_bounds$.y + this.$_bounds$.$h$);
    this.$_resizeHoriz$ && (this.$_marquee$.$setWidth$(Math.abs($DvtSvgImageFillUtils$$.x - this.$_origPt$.x)), $DvtSvgImageFillUtils$$.x < this.$_origPt$.x ? this.$_marquee$.$setX$($DvtSvgImageFillUtils$$.x) : this.$_marquee$.$setX$(this.$_origPt$.x));
    this.$_resizeVert$ && (this.$_marquee$.$setHeight$(Math.abs($DvtSvgImageFillUtils$$.y - this.$_origPt$.y)), $DvtSvgImageFillUtils$$.y < this.$_origPt$.y ? this.$_marquee$.$setY$($DvtSvgImageFillUtils$$.y) : this.$_marquee$.$setY$(this.$_origPt$.y));
    return this.$_createMarqueeEvent$($dvt$$17$$.$MarqueeEvent$.$SUBTYPE_MOVE$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$MarqueeHandler$.prototype.$processDragEnd$ = function $$dvt$$17$$$$MarqueeHandler$$$$processDragEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$_marqueeOn$ && (this.$_marqueeOn$ = !1, this.$_marqueeDrawn$) ? (this.$_glassPane$.removeChild(this.$_marquee$), this.$_container$.removeChild(this.$_glassPane$), this.$_marqueeDrawn$ = !1, this.$_createMarqueeEvent$($dvt$$17$$.$MarqueeEvent$.$SUBTYPE_END$, $DvtSvgPatternFillUtils$$)) : null;
  };
  $dvt$$17$$.$MarqueeHandler$.prototype.$cancelMarquee$ = function $$dvt$$17$$$$MarqueeHandler$$$$cancelMarquee$$() {
    return this.$_marqueeOn$ && (this.$_marqueeOn$ = !1, this.$_marqueeDrawn$) ? (this.$_glassPane$.removeChild(this.$_marquee$), this.$_container$.removeChild(this.$_glassPane$), this.$_marqueeDrawn$ = !1, !0) : !1;
  };
  $dvt$$17$$.$MarqueeHandler$.prototype.$_createMarqueeEvent$ = function $$dvt$$17$$$$MarqueeHandler$$$$_createMarqueeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = null, $DvtSvgGradientUtils$$ = null, $DvtSvgFilterUtils$$ = null, $DvtSvgFilterContext$$ = null;
    this.$_resizeHoriz$ && ($DvtSvgImageFillUtils$$ = this.$_marquee$ ? this.$_marquee$.$getX$() : this.$_origPt$.x, $DvtSvgFilterUtils$$ = this.$_marquee$ ? this.$_marquee$.getWidth() : 0);
    this.$_resizeVert$ && ($DvtSvgGradientUtils$$ = this.$_marquee$ ? this.$_marquee$.$getY$() : this.$_origPt$.y, $DvtSvgFilterContext$$ = this.$_marquee$ ? this.$_marquee$.getHeight() : 0);
    return new $dvt$$17$$.$MarqueeEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$MarqueeHandler$.prototype.getCursor = function $$dvt$$17$$$$MarqueeHandler$$$getCursor$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = this.$_vertBounds$ && this.$_vertBounds$.$containsPoint$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y), $DvtSvgImageFillUtils$$ = this.$_horizBounds$ && this.$_horizBounds$.$containsPoint$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y);
    return this.$_bounds$.$containsPoint$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y) || $DvtSvgPatternFillUtils$$ || $DvtSvgImageFillUtils$$ ? "crosshair" : "inherit";
  };
  $dvt$$17$$.$PanZoomHandler$ = function $$dvt$$17$$$$PanZoomHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$PanZoomHandler$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$PanZoomHandler$.prototype.Init = function $$dvt$$17$$$$PanZoomHandler$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$.$getCtx$();
    this.$_container$ = $DvtSvgShadowUtils$$;
    this.$_bounds$ = $DvtSvgPatternFillUtils$$;
    this.$_zoomRate$ = $DvtSvgGradientUtils$$;
    this.$_glassPane$ = new $dvt$$17$$.Rect(this.$_context$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$.$h$);
    this.$_glassPane$.$setInvisibleFill$();
    this.$_pinchOn$ = this.$_glassPaneDrawn$ = this.$_panOn$ = !1;
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$processDragStart$ = function $$dvt$$17$$$$PanZoomHandler$$$$processDragStart$$($DvtSvgShadowUtils$$) {
    if (!this.$_panOn$) {
      this.$_lastPt$ = this.$_origPt$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
      if (!this.$_bounds$.$containsPoint$(this.$_origPt$.x, this.$_origPt$.y)) {
        return null;
      }
      this.$_panOn$ = !0;
      return new $dvt$$17$$.$PanZoomEvent$($dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PAN_START$, 0, 0, 0, 0, 0, 0, 0, 0);
    }
    return null;
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$processDragMove$ = function $$dvt$$17$$$$PanZoomHandler$$$$processDragMove$$($DvtSvgShadowUtils$$) {
    if (!this.$_panOn$) {
      return null;
    }
    this.$_glassPaneDrawn$ || (this.$_container$.$addChild$(this.$_glassPane$), this.$_glassPaneDrawn$ = !0);
    $DvtSvgShadowUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.x - this.$_lastPt$.x, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.y - this.$_lastPt$.y, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.x - this.$_origPt$.x, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.y - this.$_origPt$.y;
    this.$_lastPt$ = $DvtSvgShadowUtils$$;
    return new $dvt$$17$$.$PanZoomEvent$($dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PAN_MOVE$, -$DvtSvgPatternFillUtils$$, -$DvtSvgPatternFillUtils$$, -$DvtSvgImageFillUtils$$, -$DvtSvgImageFillUtils$$, -$DvtSvgGradientUtils$$, -$DvtSvgGradientUtils$$, -$DvtSvgFilterUtils$$, -$DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$processDragEnd$ = function $$dvt$$17$$$$PanZoomHandler$$$$processDragEnd$$($DvtSvgShadowUtils$$) {
    if (this.$_panOn$ && (this.$_panOn$ = !1, this.$_glassPaneDrawn$)) {
      this.$_container$.removeChild(this.$_glassPane$);
      this.$_glassPaneDrawn$ = !1;
      var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ ? this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$) : this.$_lastPt$;
      $DvtSvgShadowUtils$$ = $DvtSvgPatternFillUtils$$.x - this.$_lastPt$.x;
      var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.y - this.$_lastPt$.y, $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.x - this.$_origPt$.x, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.y - this.$_origPt$.y;
      this.$_lastPt$ = null;
      return new $dvt$$17$$.$PanZoomEvent$($dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PAN_END$, -$DvtSvgShadowUtils$$, -$DvtSvgShadowUtils$$, -$DvtSvgImageFillUtils$$, -$DvtSvgImageFillUtils$$, -$DvtSvgGradientUtils$$, -$DvtSvgGradientUtils$$, -$DvtSvgPatternFillUtils$$, -$DvtSvgPatternFillUtils$$);
    }
    return null;
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$processMouseWheel$ = function $$dvt$$17$$$$PanZoomHandler$$$$processMouseWheel$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    if (!this.$_bounds$.$containsPoint$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y)) {
      return null;
    }
    $DvtSvgPatternFillUtils$$ *= this.$_zoomRate$;
    var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ * ($DvtSvgImageFillUtils$$.x - this.$_bounds$.x), $DvtSvgFilterUtils$$ = -$DvtSvgPatternFillUtils$$ * (this.$_bounds$.x + this.$_bounds$.$w$ - $DvtSvgImageFillUtils$$.x), $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$ * ($DvtSvgImageFillUtils$$.y - this.$_bounds$.y), $DvtSvgImageFillUtils$$ = -$DvtSvgPatternFillUtils$$ * (this.$_bounds$.y + this.$_bounds$.$h$ - $DvtSvgImageFillUtils$$.y);
    return new $dvt$$17$$.$PanZoomEvent$($dvt$$17$$.$PanZoomEvent$.$SUBTYPE_ZOOM$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$processPinchStart$ = function $$dvt$$17$$$$PanZoomHandler$$$$processPinchStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!this.$_pinchOn$) {
      this.$_origPt1$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
      this.$_origPt2$ = this.$_container$.$stageToLocal$($DvtSvgPatternFillUtils$$);
      this.$_lastPt1$ = this.$_origPt1$;
      this.$_lastPt2$ = this.$_origPt2$;
      if (!this.$_bounds$.$containsPoint$(this.$_origPt1$.x, this.$_origPt1$.y) || !this.$_bounds$.$containsPoint$(this.$_origPt2$.x, this.$_origPt2$.y)) {
        return null;
      }
      this.$_pinchOn$ = !0;
      return new $dvt$$17$$.$PanZoomEvent$($dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PINCH_START$, 0, 0, 0, 0, 0, 0, 0, 0);
    }
    return null;
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$processPinchMove$ = function $$dvt$$17$$$$PanZoomHandler$$$$processPinchMove$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!this.$_pinchOn$) {
      return null;
    }
    var $DvtSvgImageFillUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$_container$.$stageToLocal$($DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$ = this.$_computePinchDeltas$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, this.$_lastPt1$, this.$_lastPt2$), $DvtSvgFilterContext$$ = this.$_computePinchDeltas$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, this.$_origPt1$, this.$_origPt2$);
    this.$_lastPt1$ = $DvtSvgImageFillUtils$$;
    this.$_lastPt2$ = $DvtSvgGradientUtils$$;
    return new $dvt$$17$$.$PanZoomEvent$($dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PINCH_MOVE$, $DvtSvgFilterUtils$$.$dxMin$, $DvtSvgFilterUtils$$.$dxMax$, $DvtSvgFilterUtils$$.$dyMin$, $DvtSvgFilterUtils$$.$dyMax$, $DvtSvgFilterContext$$.$dxMin$, $DvtSvgFilterContext$$.$dxMax$, $DvtSvgFilterContext$$.$dyMin$, $DvtSvgFilterContext$$.$dyMax$);
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$processPinchEnd$ = function $$dvt$$17$$$$PanZoomHandler$$$$processPinchEnd$$() {
    if (this.$_pinchOn$) {
      this.$_pinchOn$ = !1;
      var $DvtSvgShadowUtils$$ = this.$_computePinchDeltas$(this.$_lastPt1$, this.$_lastPt2$, this.$_origPt1$, this.$_origPt2$);
      this.$_lastPt2$ = this.$_lastPt1$ = null;
      return new $dvt$$17$$.$PanZoomEvent$($dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PINCH_END$, 0, 0, 0, 0, $DvtSvgShadowUtils$$.$dxMin$, $DvtSvgShadowUtils$$.$dxMax$, $DvtSvgShadowUtils$$.$dyMin$, $DvtSvgShadowUtils$$.$dyMax$);
    }
    return null;
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$_computePinchDeltas$ = function $$dvt$$17$$$$PanZoomHandler$$$$_computePinchDeltas$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = Math.abs($DvtSvgShadowUtils$$.x - $DvtSvgPatternFillUtils$$.x), $DvtSvgFilterContext$$ = Math.abs($DvtSvgShadowUtils$$.y - $DvtSvgPatternFillUtils$$.y), $dvt$$17$$ = Math.abs($DvtSvgImageFillUtils$$.x - $DvtSvgGradientUtils$$.x), $DvtSvgImplFactory$$ = Math.abs($DvtSvgImageFillUtils$$.y - $DvtSvgGradientUtils$$.y), $dvt$$17$$ = $DvtSvgFilterUtils$$ > $DvtSvgFilterContext$$ / 2 ? $dvt$$17$$ / $DvtSvgFilterUtils$$ : 1, $DvtSvgFilterUtils$$ = $DvtSvgFilterContext$$ > $DvtSvgFilterUtils$$ / 
    2 ? $DvtSvgImplFactory$$ / $DvtSvgFilterContext$$ : 1, $DvtSvgFilterContext$$ = ($DvtSvgShadowUtils$$.x + $DvtSvgPatternFillUtils$$.x) / 2;
    $DvtSvgShadowUtils$$ = ($DvtSvgShadowUtils$$.y + $DvtSvgPatternFillUtils$$.y) / 2;
    $DvtSvgPatternFillUtils$$ = $DvtSvgFilterContext$$ - ($DvtSvgImageFillUtils$$.x + $DvtSvgGradientUtils$$.x) / 2;
    $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$ - ($DvtSvgImageFillUtils$$.y + $DvtSvgGradientUtils$$.y) / 2;
    return {$dxMin$:(1 - $dvt$$17$$) * ($DvtSvgFilterContext$$ - this.$_bounds$.x) - $DvtSvgPatternFillUtils$$, $dxMax$:($dvt$$17$$ - 1) * (this.$_bounds$.x + this.$_bounds$.$w$ - $DvtSvgFilterContext$$) - $DvtSvgPatternFillUtils$$, $dyMin$:(1 - $DvtSvgFilterUtils$$) * ($DvtSvgShadowUtils$$ - this.$_bounds$.y) - $DvtSvgImageFillUtils$$, $dyMax$:($DvtSvgFilterUtils$$ - 1) * (this.$_bounds$.y + this.$_bounds$.$h$ - $DvtSvgShadowUtils$$) - $DvtSvgImageFillUtils$$};
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$zoomBy$ = function $$dvt$$17$$$$PanZoomHandler$$$$zoomBy$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = (1 / $DvtSvgShadowUtils$$ - 1) / 2;
    $DvtSvgShadowUtils$$ = -$DvtSvgPatternFillUtils$$ * this.$_bounds$.$w$;
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ * this.$_bounds$.$w$, $DvtSvgGradientUtils$$ = -$DvtSvgPatternFillUtils$$ * this.$_bounds$.$h$, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$ * this.$_bounds$.$h$;
    return new $dvt$$17$$.$PanZoomEvent$($dvt$$17$$.$PanZoomEvent$.$SUBTYPE_ZOOM$, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$panBy$ = function $$dvt$$17$$$$PanZoomHandler$$$$panBy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$ * this.$_bounds$.$w$ * ($dvt$$17$$.$Agent$.$isRightToLeft$(this.$_context$) ? -1 : 1), $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$ * this.$_bounds$.$h$;
    return new $dvt$$17$$.$PanZoomEvent$($dvt$$17$$.$PanZoomEvent$.$SUBTYPE_PAN_END$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$setPanCursor$ = function $$dvt$$17$$$$PanZoomHandler$$$$setPanCursor$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$17$$.$Agent$.$isPlatformIE$() || ($DvtSvgShadowUtils$$ && (this.$_panUpCursor$ = "url(" + $DvtSvgShadowUtils$$ + ") 8 8, auto"), $DvtSvgPatternFillUtils$$ && (this.$_panDownCursor$ = "url(" + $DvtSvgPatternFillUtils$$ + ") 8 8, auto"));
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.getCursor = function $$dvt$$17$$$$PanZoomHandler$$$getCursor$($DvtSvgShadowUtils$$) {
    return null == $DvtSvgShadowUtils$$ || this.$isWithinBounds$($DvtSvgShadowUtils$$) ? this.$_panOn$ ? this.$_panDownCursor$ ? this.$_panDownCursor$ : "move" : this.$_panUpCursor$ ? this.$_panUpCursor$ : "move" : "inherit";
  };
  $dvt$$17$$.$PanZoomHandler$.prototype.$isWithinBounds$ = function $$dvt$$17$$$$PanZoomHandler$$$$isWithinBounds$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_container$.$stageToLocal$($DvtSvgShadowUtils$$);
    return this.$_bounds$.$containsPoint$($DvtSvgShadowUtils$$.x, $DvtSvgShadowUtils$$.y);
  };
  $dvt$$17$$.$TooltipManager$ = function $$dvt$$17$$$$TooltipManager$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$TooltipManager$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$TooltipManager$.prototype.$showDatatip$ = function $$dvt$$17$$$$TooltipManager$$$$showDatatip$$() {
  };
  $dvt$$17$$.$TooltipManager$.prototype.$showTooltip$ = function $$dvt$$17$$$$TooltipManager$$$$showTooltip$$() {
  };
  $dvt$$17$$.$TooltipManager$.prototype.$hideTooltip$ = function $$dvt$$17$$$$TooltipManager$$$$hideTooltip$$() {
  };
  $dvt$$17$$.$CategoryRolloverHandler$ = function $$dvt$$17$$$$CategoryRolloverHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_callback$ = $DvtSvgShadowUtils$$;
    this.$_source$ = this.$_callbackObj$ = $DvtSvgPatternFillUtils$$;
    this.$_bHighlightMode$ = !1;
    this.$_highlightModeTimeout$ = this.$_hoverDelayCallback$ = null;
    this.$_hoverDelay$ = $dvt$$17$$.$CategoryRolloverHandler$.$_HOVER_DELAY$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$CategoryRolloverHandler$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$CategoryRolloverHandler$.$_HOVER_DELAY$ = 50;
  $dvt$$17$$.$CategoryRolloverHandler$.$_HOVER_TIMEOUT$ = 1E3;
  $dvt$$17$$.$CategoryRolloverHandler$.$_FADE_OUT_OPACITY$ = .35;
  $dvt$$17$$.$CategoryRolloverHandler$.prototype.$processEvent$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$$processEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgPatternFillUtils$$ && 0 != $DvtSvgPatternFillUtils$$.length) {
      this.$_hoverDelayCallback$ && (clearTimeout(this.$_hoverDelayCallback$), this.$_hoverDelayCallback$ = null);
      var $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$._highlightType;
      "over" == $DvtSvgFilterContext$$ ? (this.$_hoverDelayCallback$ = setTimeout(this.$GetRolloverCallback$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), this.$_bHighlightMode$ ? this.$_hoverDelay$ : $DvtSvgImageFillUtils$$), this.$_highlightModeTimeout$ && (clearInterval(this.$_highlightModeTimeout$), this.$_highlightModeTimeout$ = null)) : "out" == $DvtSvgFilterContext$$ && this.$_bHighlightMode$ && (this.$_hoverDelayCallback$ = setTimeout(this.$GetRolloutCallback$($DvtSvgShadowUtils$$, 
      $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), this.$_hoverDelay$));
    }
  };
  $dvt$$17$$.$CategoryRolloverHandler$.prototype.$GetRolloverCallback$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$$GetRolloverCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $dvt$$17$$.$Obj$.$createCallback$(this, function() {
      this.$_bHighlightMode$ = !0;
      $dvt$$17$$.$CategoryRolloverHandler$.$highlight$($DvtSvgShadowUtils$$.categories, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
      this.$_callback$ && this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this.$_source$);
    });
  };
  $dvt$$17$$.$CategoryRolloverHandler$.prototype.$GetRolloutCallback$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$$GetRolloutCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    return $dvt$$17$$.$Obj$.$createCallback$(this, function() {
      $dvt$$17$$.$CategoryRolloverHandler$.$highlight$($DvtSvgShadowUtils$$.categories, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
      this.$SetHighlightModeTimeout$();
      this.$_callback$ && this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, this.$_source$);
    });
  };
  $dvt$$17$$.$CategoryRolloverHandler$.$highlight$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$highlight$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if ($DvtSvgPatternFillUtils$$) {
      $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$ ? $DvtSvgGradientUtils$$ : $dvt$$17$$.$CategoryRolloverHandler$.$_FADE_OUT_OPACITY$;
      for (var $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgFilterUtils$$++) {
        var $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$[$DvtSvgFilterUtils$$];
        if ($DvtSvgFilterContext$$ && $DvtSvgFilterContext$$.$getCategories$) {
          var $DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$ ? $dvt$$17$$.$CategoryRolloverHandler$.$_hasAnyCategory$($DvtSvgFilterContext$$, $DvtSvgShadowUtils$$) : $dvt$$17$$.$CategoryRolloverHandler$.$_hasAllCategories$($DvtSvgFilterContext$$, $DvtSvgShadowUtils$$);
          $dvt$$17$$.$CategoryRolloverHandler$.$_highlightObj$($DvtSvgFilterContext$$, $DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length && !$DvtSvgImplFactory$$, $DvtSvgGradientUtils$$);
        }
      }
    }
  };
  $dvt$$17$$.$CategoryRolloverHandler$.$_highlightObj$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$_highlightObj$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgImageFillUtils$$ : 1;
    $DvtSvgShadowUtils$$.$highlight$ ? $DvtSvgShadowUtils$$.$highlight$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) : ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getDisplayables$(), $dvt$$17$$.$CategoryRolloverHandler$.$_updateAlpha$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$));
  };
  $dvt$$17$$.$CategoryRolloverHandler$.$_updateAlpha$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$_updateAlpha$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$].$setAlpha$($DvtSvgPatternFillUtils$$);
      }
    }
  };
  $dvt$$17$$.$CategoryRolloverHandler$.$_hasAnyCategory$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$_hasAnyCategory$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getCategories$ ? $dvt$$17$$.$ArrayUtils$.$hasAnyItem$($DvtSvgShadowUtils$$.$getCategories$(), $DvtSvgPatternFillUtils$$) : !1;
  };
  $dvt$$17$$.$CategoryRolloverHandler$.$_hasAllCategories$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$_hasAllCategories$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getCategories$ ? $dvt$$17$$.$ArrayUtils$.$hasAllItems$($DvtSvgShadowUtils$$.$getCategories$(), $DvtSvgPatternFillUtils$$) : !1;
  };
  $dvt$$17$$.$CategoryRolloverHandler$.prototype.$SetHighlightMode$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$$SetHighlightMode$$($DvtSvgShadowUtils$$) {
    this.$_bHighlightMode$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$CategoryRolloverHandler$.prototype.$SetHighlightModeTimeout$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$$SetHighlightModeTimeout$$() {
    this.$_highlightModeTimeout$ = setTimeout($dvt$$17$$.$Obj$.$createCallback$(this, function() {
      this.$SetHighlightMode$(!1);
    }), $dvt$$17$$.$CategoryRolloverHandler$.$_HOVER_TIMEOUT$);
  };
  $dvt$$17$$.$CategoryRolloverHandler$.prototype.$setHoverDelay$ = function $$dvt$$17$$$$CategoryRolloverHandler$$$$setHoverDelay$$() {
    this.$_hoverDelay$ = 100;
  };
  $dvt$$17$$.$EventManager$ = function $$dvt$$17$$$$EventManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$EventManager$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$EventManager$.$CLEAR_SELECTION_ACTION_TYPE$ = "clearSelectionActionType";
  $dvt$$17$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_START$ = "touchStart";
  $dvt$$17$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_HOLD$ = "touchHold";
  $dvt$$17$$.$EventManager$.$TOUCH_RESPONSE_AUTO$ = "auto";
  $dvt$$17$$.$EventManager$.$_TOUCH_RESPONSE_PADDING_CHECK$ = 10;
  $dvt$$17$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$ = "tooltipDisplayed";
  $dvt$$17$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$ = "currentTarget";
  $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$ = "popupDisplayed";
  $dvt$$17$$.$EventManager$.prototype.Init = function $$dvt$$17$$$$EventManager$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_callback$ = $DvtSvgPatternFillUtils$$;
    this.$_callbackObj$ = $DvtSvgImageFillUtils$$;
    this.$_touchMap$ = {};
    this.$_marqueeHandler$ = this.$_selectionHandler$ = null;
    this.$PopupHandler$ = new $DvtPopupBehaviorHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$ClientBehaviorHandler$ = this.$CreateClientBehaviorHandler$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$KeyboardHandler$ = null;
    this.$RolloverHandler$ = this.$CreateCategoryRolloverHandler$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$setTooltipsEnabled$(!0);
    $DvtSvgShadowUtils$$.$_stage$.getId();
    this.$CustomTooltipManager$ = this.$_context$.$getCustomTooltipManager$();
    this.$CustomTooltipManager$.$addTooltipEventListener$($DvtActionTooltipEvent$$.$TOOLTIP_CLOSED_TYPE$, this.$OnActionTooltipClosed$, this);
    this.$CustomTooltipManager$.$addTooltipEventListener$($DvtActionTooltipEvent$$.$TOOLTIP_STARTED_TYPE$, this.$OnActionTooltipStarted$, this);
    this.$TouchManager$ = null;
    $dvt$$17$$.$Agent$.$isTouchDevice$() && (this.$TouchManager$ = new $dvt$$17$$.$TouchManager$("touchmanager", this.$_context$));
    this.$_focusedObj$ = null;
    this.$_shouldDisplayKeyboardFocus$ = !1;
    this.$_rolloverTypes$ = [];
    this.$_keyboardHandlers$ = [this];
    this.$_currentKeyboardHandlerIdx$ = -1;
    this.$_dndListeners$ = {};
  };
  $dvt$$17$$.$EventManager$.prototype.$getCtx$ = function $$dvt$$17$$$$EventManager$$$$getCtx$$() {
    return this.$_context$;
  };
  $dvt$$17$$.$EventManager$.prototype.$associate$ = function $$dvt$$17$$$$EventManager$$$$associate$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if ($DvtSvgShadowUtils$$) {
      if (!$DvtSvgShadowUtils$$.$_logicalObjects$ || $DvtSvgImageFillUtils$$) {
        $DvtSvgShadowUtils$$.$_logicalObjects$ = [];
      }
      $DvtSvgShadowUtils$$.$_logicalObjects$.push({$logicalObject$:$DvtSvgPatternFillUtils$$, $eventManager$:this});
      !$dvt$$17$$.$Agent$.$isEnvironmentBrowser$() && $DvtSvgShadowUtils$$.$getImpl$().$setLogicalObj$ && $DvtSvgShadowUtils$$.$getImpl$().$setLogicalObj$($DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$addListeners$ = function $$dvt$$17$$$$EventManager$$$$addListeners$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ && ($dvt$$17$$.$Agent$.$isTouchDevice$() ? (this.$hideTooltip$(), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.TouchEvent.$TOUCHSTART$, this.$OnTouchStartBubble$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.TouchEvent.$TOUCHMOVE$, this.$OnTouchMoveBubble$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.TouchEvent.$TOUCHEND$, this.$OnTouchEndBubble$, !1, this), this.$TouchManager$.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$, 
    this.$_preOnComponentTouchHoverStart$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$, this.$_preOnComponentTouchHoverMove$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$, this.$_preOnComponentTouchHoverEnd$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, this.$_preOnComponentTouchHoverOut$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, 
    this.$_preOnComponentTouchHoverOver$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$, this.$_preOnComponentTouchClick$, this), this.$TouchManager$.$addTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$, this.$_preOnComponentTouchDblClick$, this)) : ($DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$CLICK$, this.$PreOnClick$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$DBLCLICK$, 
    this.$PreOnDblClick$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$("contextmenu", this.$PreOnContextMenu$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEMOVE$, this.$PreOnMouseMove$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOVER$, this.$PreOnMouseOver$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOUT$, this.$PreOnMouseOut$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEDOWN$, 
    this.$PreOnMouseDown$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEUP$, this.$PreOnMouseUp$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.KeyboardEvent.$KEYDOWN$, this.$OnKeyDown$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.KeyboardEvent.$KEYPRESS$, this.$OnKeyPress$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.KeyboardEvent.$KEYUP$, this.$OnKeyUp$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($DvtFocusEvent$$.$FOCUS$, 
    this.$OnFocus$, !1, this), $DvtSvgShadowUtils$$.$addEvtListener$($DvtFocusEvent$$.$BLUR$, this.$OnBlur$, !1, this)), this.$isDndSupported$())) {
      $DvtSvgShadowUtils$$ = this.$getCtx$();
      this.$setDragSource$(new $dvt$$17$$.$DragSource$($DvtSvgShadowUtils$$));
      this.$_addDndListener$("dragstart", this.$OnDndDragStart$);
      this.$_addDndListener$("drag", this.$OnDndDrag$);
      this.$_addDndListener$("dragend", this.$OnDndDragEnd$);
      this.$_addDndListener$("dragenter", this.$OnDndDragEnter$);
      this.$_addDndListener$("dragover", this.$OnDndDragOver$);
      this.$_addDndListener$("dragleave", this.$OnDndDragLeave$);
      this.$_addDndListener$("drop", this.$OnDndDrop$);
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$_parentDiv$;
      for (var $DvtSvgPatternFillUtils$$ in this.$_dndListeners$) {
        $dvt$$17$$.$ToolkitUtils$.$addDomEventListener$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, this.$_dndListeners$[$DvtSvgPatternFillUtils$$], !1);
      }
      this.$_context$.$addDndEventManager$(this);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$_addDndListener$ = function $$dvt$$17$$$$EventManager$$$$_addDndListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_dndListeners$[$DvtSvgShadowUtils$$] = $dvt$$17$$.$SvgDocumentUtils$.$createStaticCallback$(this.$getCtx$(), $DvtSvgPatternFillUtils$$, this);
  };
  $dvt$$17$$.$EventManager$.prototype.$removeListeners$ = function $$dvt$$17$$$$EventManager$$$$removeListeners$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ && (this.$hideTooltip$(), $dvt$$17$$.$Agent$.$isTouchDevice$() ? ($DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.TouchEvent.$TOUCHSTART$, this.$OnTouchStartBubble$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.TouchEvent.$TOUCHMOVE$, this.$OnTouchMoveBubble$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.TouchEvent.$TOUCHEND$, this.$OnTouchEndBubble$, !1, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$, 
    this.$_preOnComponentTouchHoverStart$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$, this.$_preOnComponentTouchHoverMove$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$, this.$_preOnComponentTouchHoverEnd$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, this.$_preOnComponentTouchHoverOut$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, 
    this.$_preOnComponentTouchHoverOver$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$, this.$_preOnComponentTouchClick$, this), this.$TouchManager$.$removeTouchEventListener$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$, this.$_preOnComponentTouchDblClick$, this)) : ($DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.MouseEvent.$CLICK$, this.$PreOnClick$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.MouseEvent.$DBLCLICK$, 
    this.$PreOnDblClick$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$("contextmenu", this.$PreOnContextMenu$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.MouseEvent.$MOUSEMOVE$, this.$PreOnMouseMove$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOVER$, this.$PreOnMouseOver$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.MouseEvent.$MOUSEOUT$, this.$PreOnMouseOut$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.MouseEvent.$MOUSEDOWN$, 
    this.$PreOnMouseDown$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.MouseEvent.$MOUSEUP$, this.$PreOnMouseUp$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.KeyboardEvent.$KEYDOWN$, this.$OnKeyDown$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.KeyboardEvent.$KEYUP$, this.$OnKeyUp$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($dvt$$17$$.KeyboardEvent.$KEYPRESS$, this.$OnKeyPress$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($DvtFocusEvent$$.$FOCUS$, 
    this.$OnFocus$, !1, this), $DvtSvgShadowUtils$$.$removeEvtListener$($DvtFocusEvent$$.$BLUR$, this.$OnBlur$, !1, this)), this.$isDndSupported$())) {
      $DvtSvgShadowUtils$$ = this.$getCtx$().$_parentDiv$;
      for (var $DvtSvgPatternFillUtils$$ in this.$_dndListeners$) {
        $dvt$$17$$.$ToolkitUtils$.$removeDomEventListener$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, this.$_dndListeners$[$DvtSvgPatternFillUtils$$], !1);
      }
      this.$_dndListeners$ = {};
      this.$_context$.$removeDndEventManager$(this);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$destroy$ = function $$dvt$$17$$$$EventManager$$$$destroy$$() {
    this.$CustomTooltipManager$ && (this.$CustomTooltipManager$.$removeTooltipEventListener$($DvtActionTooltipEvent$$.$TOOLTIP_CLOSED_TYPE$, this.$OnActionTooltipClosed$, this), this.$CustomTooltipManager$.$removeTooltipEventListener$($DvtActionTooltipEvent$$.$TOOLTIP_STARTED_TYPE$, this.$OnActionTooltipStarted$, this));
  };
  $dvt$$17$$.$EventManager$.prototype.$PreEventBubble$ = function $$dvt$$17$$$$EventManager$$$$PreEventBubble$$($DvtSvgShadowUtils$$) {
    this.$TouchManager$.$preEventBubble$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$setSelectionHandler$ = function $$dvt$$17$$$$EventManager$$$$setSelectionHandler$$($DvtSvgShadowUtils$$) {
    this.$_selectionHandler$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$EventManager$.prototype.$getSelectionHandler$ = function $$dvt$$17$$$$EventManager$$$$getSelectionHandler$$() {
    return this.$_selectionHandler$;
  };
  $dvt$$17$$.$EventManager$.prototype.$setDragSource$ = function $$dvt$$17$$$$EventManager$$$$setDragSource$$($DvtSvgShadowUtils$$) {
    this.$DragSource$ = $DvtSvgShadowUtils$$;
    $dvt$$17$$.$Agent$.$isTouchDevice$() && this.$DragSource$.$setTouchManager$(this.$TouchManager$);
  };
  $dvt$$17$$.$EventManager$.prototype.$setContextMenuHandler$ = function $$dvt$$17$$$$EventManager$$$$setContextMenuHandler$$($DvtSvgShadowUtils$$) {
    this.$ContextMenuHandler$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$EventManager$.prototype.$setKeyboardHandler$ = function $$dvt$$17$$$$EventManager$$$$setKeyboardHandler$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$Agent$.$isTouchDevice$() || (this.$KeyboardHandler$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$setFocusObj$ = function $$dvt$$17$$$$EventManager$$$$setFocusObj$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getFocus$();
    $DvtSvgShadowUtils$$ != $DvtSvgPatternFillUtils$$ && (this.$setFocus$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$hideKeyboardFocusEffect$(), this.$ShowKeyboardFocusByDefault$() && $DvtSvgShadowUtils$$.$showKeyboardFocusEffect$(), -1 < this.$_currentKeyboardHandlerIdx$ && this.$_currentKeyboardHandlerIdx$ < this.$_keyboardHandlers$.length && ($DvtSvgShadowUtils$$ = this.$_keyboardHandlers$[this.$_currentKeyboardHandlerIdx$], $DvtSvgShadowUtils$$ != this && $DvtSvgShadowUtils$$.$hideKeyboardFocusEffect$()));
    this.$setCurrentKeyboardHandler$(this);
  };
  $dvt$$17$$.$EventManager$.prototype.$setFocus$ = function $$dvt$$17$$$$EventManager$$$$setFocus$$($DvtSvgShadowUtils$$) {
    this.$KeyboardHandler$ && (this.$_focusedObj$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$getFocus$ = function $$dvt$$17$$$$EventManager$$$$getFocus$$() {
    return this.$KeyboardHandler$ ? this.$_focusedObj$ : null;
  };
  $dvt$$17$$.$EventManager$.prototype.$setFocused$ = function $$dvt$$17$$$$EventManager$$$$setFocused$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$getFocus$();
    $DvtSvgPatternFillUtils$$ && this.$KeyboardHandler$ && ($DvtSvgShadowUtils$$ ? this.$_shouldDisplayKeyboardFocus$ && 0 <= this.$_currentKeyboardHandlerIdx$ && this.$_currentKeyboardHandlerIdx$ < this.$_keyboardHandlers$.length && this.$_keyboardHandlers$[this.$_currentKeyboardHandlerIdx$] === this && $DvtSvgPatternFillUtils$$.$showKeyboardFocusEffect$() : $DvtSvgPatternFillUtils$$.$hideKeyboardFocusEffect$());
    $DvtSvgShadowUtils$$ || (this.$_shouldDisplayKeyboardFocus$ = !1);
  };
  $dvt$$17$$.$EventManager$.prototype.$ShowKeyboardFocusByDefault$ = function $$dvt$$17$$$$EventManager$$$$ShowKeyboardFocusByDefault$$() {
    return !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$setTooltipsEnabled$ = function $$dvt$$17$$$$EventManager$$$$setTooltipsEnabled$$($DvtSvgShadowUtils$$) {
    this.$_tooltipsEnabled$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$EventManager$.prototype.$getTooltipsEnabled$ = function $$dvt$$17$$$$EventManager$$$$getTooltipsEnabled$$() {
    return this.$_tooltipsEnabled$;
  };
  $dvt$$17$$.$EventManager$.prototype.$GetLogicalObject$ = function $$dvt$$17$$$$EventManager$$$$GetLogicalObject$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$.$logicalObject$ : null;
  };
  $dvt$$17$$.$EventManager$.prototype.$GetLogicalObjectAndDisplayable$ = function $$dvt$$17$$$$EventManager$$$$GetLogicalObjectAndDisplayable$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$;$DvtSvgImageFillUtils$$;) {
      if ($DvtSvgImageFillUtils$$.$_logicalObjects$) {
        for (var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$.$_logicalObjects$.length;$DvtSvgGradientUtils$$++) {
          var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.$_logicalObjects$[$DvtSvgGradientUtils$$];
          if ($DvtSvgFilterUtils$$.$eventManager$ == this) {
            return $DvtSvgGradientUtils$$ = {}, $DvtSvgGradientUtils$$.$logicalObject$ = $DvtSvgFilterUtils$$.$logicalObject$, $DvtSvgGradientUtils$$.$displayable$ = $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$;
          }
        }
      }
      $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$ ? null : $DvtSvgImageFillUtils$$.getParent();
    }
    return null;
  };
  $dvt$$17$$.$EventManager$.prototype.$_getShowPopupBehaviors$ = function $$dvt$$17$$$$EventManager$$$$_getShowPopupBehaviors$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getShowPopupBehaviors$) {
      return $DvtSvgShadowUtils$$.$getShowPopupBehaviors$();
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$_getClientBehaviors$ = function $$dvt$$17$$$$EventManager$$$$_getClientBehaviors$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getClientBehaviors$) {
      return $DvtSvgShadowUtils$$.$getClientBehaviors$();
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$GetContextMenuType$ = function $$dvt$$17$$$$EventManager$$$$GetContextMenuType$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = ($DvtSvgShadowUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$)) ? $DvtSvgShadowUtils$$.getSelection().length : 0;
    return 0 >= $DvtSvgShadowUtils$$ ? $dvt$$17$$.$ContextMenuHandler$.$TYPE_BODY_CONTEXT_MENU$ : 1 == $DvtSvgShadowUtils$$ ? $dvt$$17$$.$ContextMenuHandler$.$TYPE_CONTEXT_MENU$ : $dvt$$17$$.$ContextMenuHandler$.$TYPE_MULTI_SELECT_CONTEXT_MENU$;
  };
  $dvt$$17$$.$EventManager$.prototype.$GetTooltipColor$ = function $$dvt$$17$$$$EventManager$$$$GetTooltipColor$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$getDatatipColor$) {
      return $DvtSvgShadowUtils$$.$getDatatipColor$();
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$FireEvent$ = function $$dvt$$17$$$$EventManager$$$$FireEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_callback$ && this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$fireSelectionEvent$ = function $$dvt$$17$$$$EventManager$$$$fireSelectionEvent$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$)) {
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getSelectedIds$(), $DvtSvgShadowUtils$$ = $dvt$$17$$.$EventFactory$.$newSelectionEvent$($DvtSvgShadowUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$PreOnClick$ = function $$dvt$$17$$$$EventManager$$$$PreOnClick$$($DvtSvgShadowUtils$$) {
    if (this.$IsDoubleClickable$($DvtSvgShadowUtils$$)) {
      if (this.$_clickTimer$ && this.$_clickTimer$.$isRunning$()) {
        var $DvtSvgPatternFillUtils$$ = this.$_savedClickEvent$;
        if ($DvtSvgShadowUtils$$.pageX == $DvtSvgPatternFillUtils$$.pageX && $DvtSvgShadowUtils$$.pageY == $DvtSvgPatternFillUtils$$.pageY) {
          this.$_savedClickCount$++;
          return;
        }
        this.$_clickTimer$.stop();
        this.$_onClickTimerEnd$();
      }
      this.$_savedClickEvent$ = $DvtSvgShadowUtils$$;
      this.$_savedClickCount$ = 1;
      this.$_clickTimer$ || (this.$_clickTimer$ = new $dvt$$17$$.$Timer$(this.$_context$, 250, this.$_onClickTimerEnd$, this, 1));
      this.$_clickTimer$.reset();
      this.$_clickTimer$.start();
    } else {
      this.$_propagateEvent$($dvt$$17$$.MouseEvent.$CLICK$, $DvtSvgShadowUtils$$, this.$OnClick$);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$_onClickTimerEnd$ = function $$dvt$$17$$$$EventManager$$$$_onClickTimerEnd$$() {
    var $DvtSvgShadowUtils$$ = this.$_savedClickEvent$;
    this.$_savedClickEvent$ = null;
    this.$_savedClickCount$ = 0;
    $DvtSvgShadowUtils$$ && this.$_propagateEvent$($dvt$$17$$.MouseEvent.$CLICK$, $DvtSvgShadowUtils$$, this.$OnClick$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnClick$ = function $$dvt$$17$$$$EventManager$$$$OnClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$));
    this.$OnClickInternal$($DvtSvgShadowUtils$$);
    this.$ProcessSelectionEventHelper$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.ctrlKey);
    this.$_shouldDisplayKeyboardFocus$ = !1;
    if ($DvtSvgPatternFillUtils$$) {
      if (this.$KeyboardHandler$ && $DvtSvgPatternFillUtils$$.$getNextNavigable$) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getNextNavigable$($DvtSvgShadowUtils$$);
        this.$setFocusObj$($DvtSvgImageFillUtils$$);
      }
      $DvtSvgImageFillUtils$$ = !1;
      this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgImageFillUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
      $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY), ($DvtSvgImageFillUtils$$ = this.$PopupHandler$.$processPopupHelper$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_ACTION$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CLICK$], $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$)) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, 
      !0));
      $DvtSvgImageFillUtils$$ || ($DvtSvgShadowUtils$$ = this.$_getClientBehaviors$($DvtSvgPatternFillUtils$$)) && ($DvtSvgImageFillUtils$$ = this.$ClientBehaviorHandler$.$processClick$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$));
      !$DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$.$isCommandComponent$ && $DvtSvgPatternFillUtils$$.$isCommandComponent$() && ($DvtSvgShadowUtils$$ = $dvt$$17$$.$EventFactory$.$newActionEvent$("action", $DvtSvgPatternFillUtils$$.getId()), $dvt$$17$$.$EventManager$.$_addContextInfo$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$));
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$IsDoubleClickable$ = function $$dvt$$17$$$$EventManager$$$$IsDoubleClickable$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.target;
    for ($DvtSvgShadowUtils$$ = this.$GetLogicalObject$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$));$DvtSvgPatternFillUtils$$;) {
      var $DvtSvgImageFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$, !0);
      if ($DvtSvgImageFillUtils$$) {
        if ($DvtSvgImageFillUtils$$.$isDoubleClickable$ && $DvtSvgImageFillUtils$$.$isDoubleClickable$() || this.$PopupHandler$.$hasPopup$($DvtSvgShadowUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$])) {
          return !0;
        }
        if (!this.$IsPropagationEnabled$($dvt$$17$$.MouseEvent.$DBLCLICK$, null, $DvtSvgPatternFillUtils$$)) {
          break;
        }
      }
      $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.getParent();
    }
    return !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$ProcessSelectionEventHelper$ = function $$dvt$$17$$$$EventManager$$$$ProcessSelectionEventHelper$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$);
    $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.$processClick$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) && this.$fireSelectionEvent$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$PreOnDblClick$ = function $$dvt$$17$$$$EventManager$$$$PreOnDblClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$IsDoubleClickable$($DvtSvgShadowUtils$$);
    ($DvtSvgPatternFillUtils$$ && 2 === this.$_savedClickCount$ || !$DvtSvgPatternFillUtils$$) && this.$_propagateEvent$($dvt$$17$$.MouseEvent.$DBLCLICK$, $DvtSvgShadowUtils$$, this.$OnDblClick$);
    this.$_savedClickCount$ = 0;
  };
  $dvt$$17$$.$EventManager$.prototype.$OnDblClick$ = function $$dvt$$17$$$$EventManager$$$$OnDblClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$));
    if (this.$_clickTimer$ && this.$_clickTimer$.$isRunning$()) {
      this.$_clickTimer$.stop(), this.$_savedClickEvent$ = null;
    } else {
      if ($dvt$$17$$.$Agent$.$isPlatformIE$() && 11 > $dvt$$17$$.$Agent$.$getVersion$()) {
        if (!$DvtSvgPatternFillUtils$$) {
          return;
        }
        if (!($DvtSvgPatternFillUtils$$.$isDoubleClickable$ && $DvtSvgPatternFillUtils$$.$isDoubleClickable$() || this.$PopupHandler$.$hasPopup$($DvtSvgPatternFillUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$]))) {
          this.$OnClick$($DvtSvgShadowUtils$$);
          return;
        }
      }
    }
    this.$OnDblClickInternal$($DvtSvgShadowUtils$$);
    if ($DvtSvgPatternFillUtils$$) {
      var $DvtSvgImageFillUtils$$ = !1;
      this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgImageFillUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
      $DvtSvgImageFillUtils$$ || ($DvtSvgImageFillUtils$$ = new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY), ($DvtSvgImageFillUtils$$ = this.$PopupHandler$.$processPopupHelper$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$], $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$)) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, 
      !0));
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$PreOnContextMenu$ = function $$dvt$$17$$$$EventManager$$$$PreOnContextMenu$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$("contextmenu", $DvtSvgShadowUtils$$, this.$OnContextMenu$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnContextMenu$ = function $$dvt$$17$$$$EventManager$$$$OnContextMenu$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$));
    $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$getNextNavigable$ && this.$setFocus$($DvtSvgPatternFillUtils$$);
    this.$_onContextMenuHelper$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_onContextMenuHelper$ = function $$dvt$$17$$$$EventManager$$$$_onContextMenuHelper$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_processActionPopup$(this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY)) && $DvtSvgShadowUtils$$.preventDefault();
    $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$isSelectable$ && $DvtSvgPatternFillUtils$$.$isSelectable$() && this.$ProcessSelectionEventHelper$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.ctrlKey);
    if (this.$ContextMenuHandler$) {
      var $DvtSvgImageFillUtils$$ = this.$GetContextMenuType$($DvtSvgPatternFillUtils$$);
      this.$ProcessContextMenuHandler$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
    } else {
      this.$ProcessContextMenuPopup$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$ProcessContextMenuHandler$ = function $$dvt$$17$$$$EventManager$$$$ProcessContextMenuHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$ContextMenuHandler$.show($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$ && (this.$_context$.$getTooltipManager$().$hideTooltip$(), this.$PopupHandler$.$HidePopup$($DvtSvgShadowUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgImageFillUtils$$));
  };
  $dvt$$17$$.$EventManager$.prototype.$ProcessContextMenuPopup$ = function $$dvt$$17$$$$EventManager$$$$ProcessContextMenuPopup$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = !1;
    this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgImageFillUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
    if (!$DvtSvgImageFillUtils$$) {
      var $DvtSvgGradientUtils$$ = this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$);
      if ($DvtSvgGradientUtils$$) {
        var $DvtSvgFilterUtils$$;
        $dvt$$17$$.$Agent$.$isTouchDevice$() ? ($DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$touch$, $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$.pageX, $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.pageY) : ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.pageX, $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.pageY);
        $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$Point$($DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
        $DvtSvgImageFillUtils$$ = this.$PopupHandler$.$processPopupHelper$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CONTEXT_MENU$], $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$);
      }
      $DvtSvgImageFillUtils$$ && (this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0), $DvtSvgShadowUtils$$.preventDefault());
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$OnKeyDown$ = function $$dvt$$17$$$$EventManager$$$$OnKeyDown$$($DvtSvgShadowUtils$$) {
    this.$_bKeyDown$ = !0;
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.keyCode, $DvtSvgImageFillUtils$$ = !1, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$;
    $DvtSvgGradientUtils$$ = 0 > this.$_currentKeyboardHandlerIdx$ || this.$_currentKeyboardHandlerIdx$ > this.$_keyboardHandlers$.length ? $DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$TAB$ && $DvtSvgShadowUtils$$.shiftKey ? this.$_keyboardHandlers$.length - 1 : 0 : this.$_currentKeyboardHandlerIdx$;
    $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$ == $dvt$$17$$.KeyboardEvent.$TAB$ && $DvtSvgShadowUtils$$.shiftKey ? -1 : 1;
    for ($DvtSvgGradientUtils$$;0 <= $DvtSvgGradientUtils$$ && $DvtSvgGradientUtils$$ < this.$_keyboardHandlers$.length && !$DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$ += $DvtSvgFilterUtils$$) {
      if ($DvtSvgImageFillUtils$$ = this.$_keyboardHandlers$[$DvtSvgGradientUtils$$], $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$ === this ? this.$ProcessKeyboardEvent$($DvtSvgShadowUtils$$) : $DvtSvgImageFillUtils$$.$handleKeyboardEvent$($DvtSvgShadowUtils$$)) {
        this.$_currentKeyboardHandlerIdx$ = $DvtSvgGradientUtils$$;
      }
    }
    $DvtSvgImageFillUtils$$ || $DvtSvgShadowUtils$$.keyCode != $dvt$$17$$.KeyboardEvent.$UP_ARROW$ && $DvtSvgShadowUtils$$.keyCode != $dvt$$17$$.KeyboardEvent.$DOWN_ARROW$ && $DvtSvgShadowUtils$$.keyCode != $dvt$$17$$.KeyboardEvent.$LEFT_ARROW$ && $DvtSvgShadowUtils$$.keyCode != $dvt$$17$$.KeyboardEvent.$RIGHT_ARROW$ || $dvt$$17$$.$EventManager$.$consumeEvent$($DvtSvgShadowUtils$$);
    $DvtSvgImageFillUtils$$ || $DvtSvgPatternFillUtils$$ != $dvt$$17$$.KeyboardEvent.$TAB$ || (this.$_currentKeyboardHandlerIdx$ = -1);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventManager$.prototype.$handleKeyboardEvent$ = function $$dvt$$17$$$$EventManager$$$$handleKeyboardEvent$$($DvtSvgShadowUtils$$) {
    return this.$OnKeyDown$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$hideKeyboardFocusEffect$ = function $$dvt$$17$$$$EventManager$$$$hideKeyboardFocusEffect$$() {
    var $DvtSvgShadowUtils$$ = this.$getFocus$();
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isShowingKeyboardFocusEffect$() && $DvtSvgShadowUtils$$.$hideKeyboardFocusEffect$();
  };
  $dvt$$17$$.$EventManager$.prototype.$ProcessKeyboardEvent$ = function $$dvt$$17$$$$EventManager$$$$ProcessKeyboardEvent$$($DvtSvgShadowUtils$$) {
    if (!this.$KeyboardHandler$) {
      return !1;
    }
    this.$hideTooltip$();
    var $DvtSvgPatternFillUtils$$ = this.$getFocus$(), $DvtSvgImageFillUtils$$ = null;
    if ($DvtSvgShadowUtils$$.keyCode == $dvt$$17$$.KeyboardEvent.$TAB$ && $DvtSvgPatternFillUtils$$) {
      if ($DvtSvgPatternFillUtils$$.$isShowingKeyboardFocusEffect$()) {
        return this.$_bKeyDown$ = !1, $DvtSvgPatternFillUtils$$.$hideKeyboardFocusEffect$(), this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, !1), ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.shiftKey ? this.$_context$.$previousKeyboardFocus$() : this.$_context$.$nextKeyboardFocus$()) ? ($DvtSvgPatternFillUtils$$.$FireListener$($DvtSvgShadowUtils$$, !1), $dvt$$17$$.$EventManager$.$consumeEvent$($DvtSvgShadowUtils$$), !0) : !1;
      }
      this.$ShowFocusEffect$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
      this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, !0);
      $dvt$$17$$.$EventManager$.$consumeEvent$($DvtSvgShadowUtils$$);
      return !0;
    }
    return $DvtSvgPatternFillUtils$$ && this.$KeyboardHandler$.$isContextMenuEvent$($DvtSvgShadowUtils$$) ? ($DvtSvgPatternFillUtils$$.$getContextMenuLocation$ ? $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getContextMenuLocation$() : ($DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$(), $DvtSvgImageFillUtils$$ = $dvt$$17$$.$Agent$.$isRightToLeft$(this.$_context$) ? new $dvt$$17$$.$Point$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y) : new $dvt$$17$$.$Point$($DvtSvgImageFillUtils$$.x + 
    $DvtSvgImageFillUtils$$.$w$, $DvtSvgImageFillUtils$$.y)), $DvtSvgShadowUtils$$ = $dvt$$17$$.$DomEventFactory$.$generateMouseEventFromKeyboardEvent$($DvtSvgShadowUtils$$, this.$_context$, $dvt$$17$$.MouseEvent.$CLICK$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y), $DvtSvgShadowUtils$$.ctrlKey = !1, this.$_onContextMenuHelper$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), !0) : ($DvtSvgImageFillUtils$$ = this.$KeyboardHandler$.$processKeyDown$($DvtSvgShadowUtils$$)) ? (this.$setFocus$($DvtSvgImageFillUtils$$), 
    this.$_shouldDisplayKeyboardFocus$ = !0, $DvtSvgPatternFillUtils$$ && ($DvtSvgPatternFillUtils$$.$hideKeyboardFocusEffect$(), this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, !1)), this.$KeyboardHandler$.$isSelectionEvent$($DvtSvgShadowUtils$$) ? this.$ProcessSelectionEventHelper$($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$.shiftKey) : this.$KeyboardHandler$.$isMultiSelectEvent$($DvtSvgShadowUtils$$) && this.$ProcessSelectionEventHelper$($DvtSvgImageFillUtils$$, 
    $DvtSvgShadowUtils$$.ctrlKey), this.$ShowFocusEffect$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$), this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, !0), !0) : !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$ShowFocusEffect$ = function $$dvt$$17$$$$EventManager$$$$ShowFocusEffect$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$.$showKeyboardFocusEffect$();
    var $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.$getKeyboardTooltipLocation$ ? $DvtSvgPatternFillUtils$$.$getKeyboardTooltipLocation$() : $DvtSvgPatternFillUtils$$.$getKeyboardBoundingBox$(this.$getCtx$().$_stage$).$getCenter$(), $DvtSvgImageFillUtils$$ = this.$getCtx$().$stageToPageCoords$($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y);
    this.$ProcessObjectTooltip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgPatternFillUtils$$, $DvtSvgPatternFillUtils$$.$getTargetElem$());
    this.$UpdateActiveElement$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnKeyUp$ = function $$dvt$$17$$$$EventManager$$$$OnKeyUp$$($DvtSvgShadowUtils$$) {
    this.$_bKeyDown$ = !1;
    !0 === this.$_handleExternalKeyboardFocus$ && $DvtSvgShadowUtils$$.keyCode == $dvt$$17$$.KeyboardEvent.$TAB$ && (this.$_handleExternalKeyboardFocus$ = !1, this.$_callbackObj$.$dispatchDisplayableEvent$($dvt$$17$$.KeyboardEvent.$KEYDOWN$, $DvtSvgShadowUtils$$));
    this.$KeyboardHandler$.$processKeyUp$($DvtSvgShadowUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_UP$]);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnKeyPress$ = function $$dvt$$17$$$$EventManager$$$$OnKeyPress$$($DvtSvgShadowUtils$$) {
    this.$KeyboardHandler$.$processKeyUp$($DvtSvgShadowUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_KEY_PRESS$]);
  };
  $dvt$$17$$.$EventManager$.prototype.$PreOnMouseMove$ = function $$dvt$$17$$$$EventManager$$$$PreOnMouseMove$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.MouseEvent.$MOUSEMOVE$, $DvtSvgShadowUtils$$, this.$OnMouseMove$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnMouseMove$ = function $$dvt$$17$$$$EventManager$$$$OnMouseMove$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.pageX, $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.pageY, $DvtSvgGradientUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    this.$_marqueeHandler$ && ($DvtSvgGradientUtils$$ = this.$_marqueeHandler$.$processDragMove$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$.ctrlKey)) && this.$_callback$.call(this.$_callbackObj$, $DvtSvgGradientUtils$$);
    var $DvtSvgFilterUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$);
    if ($DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgFilterUtils$$)) {
      this.$ProcessObjectTooltip$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$), $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), this.$PopupHandler$.$processMouseMove$($DvtSvgPatternFillUtils$$), this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgFilterUtils$$)) && 
      this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_MOVE$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0), this.$DragSource$ && !$DvtSvgShadowUtils$$.$dragSourceSet$ && this.$IsDragCandidate$($DvtSvgGradientUtils$$) && (this.$DragSource$.$setDragCandidate$($DvtSvgGradientUtils$$), 
      $DvtSvgShadowUtils$$.$dragSourceSet$ = !0);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$PreOnMouseOver$ = function $$dvt$$17$$$$EventManager$$$$PreOnMouseOver$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.MouseEvent.$MOUSEOVER$, $DvtSvgShadowUtils$$, this.$OnMouseOver$);
    this.$_handlePreOverEvent$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_getDisplayableHierarchy$ = function $$dvt$$17$$$$EventManager$$$$_getDisplayableHierarchy$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    for (var $DvtSvgGradientUtils$$ = [];$DvtSvgShadowUtils$$;) {
      var $DvtSvgFilterUtils$$ = !0;
      $DvtSvgPatternFillUtils$$ && ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$));
      $DvtSvgFilterUtils$$ && $DvtSvgGradientUtils$$.unshift($DvtSvgShadowUtils$$);
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.getParent();
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$EventManager$.prototype.$_getRolloverHierarchy$ = function $$dvt$$17$$$$EventManager$$$$_getRolloverHierarchy$$($DvtSvgShadowUtils$$) {
    return this.$_getDisplayableHierarchy$($DvtSvgShadowUtils$$, this.$_isRolloverType$, this);
  };
  $dvt$$17$$.$EventManager$.prototype.$_isRolloverType$ = function $$dvt$$17$$$$EventManager$$$$_isRolloverType$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$, !0)) {
      for (var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < this.$_rolloverTypes$.length;$DvtSvgPatternFillUtils$$++) {
        if ($DvtSvgShadowUtils$$ instanceof this.$_rolloverTypes$[$DvtSvgPatternFillUtils$$]) {
          return !0;
        }
      }
    }
    return !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$addRolloverType$ = function $$dvt$$17$$$$EventManager$$$$addRolloverType$$($DvtSvgShadowUtils$$) {
    this.$_rolloverTypes$.push($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnRollOver$ = function $$dvt$$17$$$$EventManager$$$$OnRollOver$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$OnMouseOver$ = function $$dvt$$17$$$$EventManager$$$$OnMouseOver$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = null;
    $DvtSvgImageFillUtils$$ && ($DvtSvgGradientUtils$$ = $DvtSvgImageFillUtils$$.$logicalObject$);
    var $DvtSvgFilterUtils$$ = new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
    if ($DvtSvgGradientUtils$$) {
      var $DvtSvgFilterContext$$ = this.$getSelectionHandler$($DvtSvgGradientUtils$$);
      $DvtSvgFilterContext$$ && $DvtSvgFilterContext$$.$processMouseOver$($DvtSvgGradientUtils$$);
      this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, !0);
      this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || $DvtSvgImageFillUtils$$ && this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, 
      !0);
      this.$UpdateActiveElement$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$PreOnMouseOut$ = function $$dvt$$17$$$$EventManager$$$$PreOnMouseOut$$($DvtSvgShadowUtils$$) {
    this.$_handlePreOutEvent$($dvt$$17$$.MouseEvent.$MOUSEOUT$, $DvtSvgShadowUtils$$, this.$OnMouseOut$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnRollOut$ = function $$dvt$$17$$$$EventManager$$$$OnRollOut$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$OnMouseOut$ = function $$dvt$$17$$$$EventManager$$$$OnMouseOut$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$);
    if ($DvtSvgImageFillUtils$$) {
      var $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$.relatedTarget);
      $DvtSvgImageFillUtils$$ != $DvtSvgGradientUtils$$ && (($DvtSvgGradientUtils$$ = this.$getSelectionHandler$($DvtSvgImageFillUtils$$)) && $DvtSvgGradientUtils$$.$processMouseOut$($DvtSvgImageFillUtils$$), this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, !1), this.$hideTooltip$(), this.$DragSource$ && !$DvtSvgShadowUtils$$.$dragSourceSet$ && (this.$DragSource$.$setDragCandidate$(null), $DvtSvgShadowUtils$$.$dragSourceSet$ = !0), this.$GetEventInfo$($DvtSvgShadowUtils$$, 
      $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgGradientUtils$$ = new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY), ($DvtSvgPatternFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgPatternFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgImageFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OUT$) && 
      this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0)));
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$PreOnMouseDown$ = function $$dvt$$17$$$$EventManager$$$$PreOnMouseDown$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.MouseEvent.$MOUSEDOWN$, $DvtSvgShadowUtils$$, this.$OnMouseDown$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnMouseDown$ = function $$dvt$$17$$$$EventManager$$$$OnMouseDown$$($DvtSvgShadowUtils$$) {
    this.$_isInActionPopup$ && this.$CustomTooltipManager$.$closeActionTooltip$();
    if (this.$_marqueeHandler$) {
      var $DvtSvgPatternFillUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
      ($DvtSvgPatternFillUtils$$ = this.$_marqueeHandler$.$processDragStart$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.ctrlKey)) && this.$_callback$.call(this.$_callbackObj$, $DvtSvgPatternFillUtils$$);
    }
    var $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
    this.$DragSource$ && !$DvtSvgShadowUtils$$.$dragSourceSet$ && this.$IsDragCandidate$($DvtSvgPatternFillUtils$$) && (this.$DragSource$.$setDragCandidate$($DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$.$dragSourceSet$ = !0);
    if (!this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$)) {
      var $DvtSvgGradientUtils$$ = new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
      ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_DOWN$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$PreOnMouseUp$ = function $$dvt$$17$$$$EventManager$$$$PreOnMouseUp$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.MouseEvent.$MOUSEUP$, $DvtSvgShadowUtils$$, this.$OnMouseUp$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnMouseUp$ = function $$dvt$$17$$$$EventManager$$$$OnMouseUp$$($DvtSvgShadowUtils$$) {
    if (this.$_marqueeHandler$) {
      var $DvtSvgPatternFillUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
      ($DvtSvgPatternFillUtils$$ = this.$_marqueeHandler$.$processDragEnd$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$.ctrlKey)) && this.$_callback$.call(this.$_callbackObj$, $DvtSvgPatternFillUtils$$);
    }
    var $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
    if (!this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$)) {
      var $DvtSvgGradientUtils$$ = new $dvt$$17$$.$Point$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY);
      ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_UP$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$_processTouchTooltip$ = function $$dvt$$17$$$$EventManager$$$$_processTouchTooltip$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$TouchManager$.$getTooltipInfo$(), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.touchIds, $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.tooltipTarget;
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$) || 0 != $DvtSvgImageFillUtils$$.length && $DvtSvgPatternFillUtils$$ ? ($DvtSvgImageFillUtils$$ = this.$TouchManager$.$calcAveragePosition$($DvtSvgImageFillUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), this.$ProcessObjectTooltip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y, $DvtSvgPatternFillUtils$$, null)) : this.$hideTooltip$();
  };
  $dvt$$17$$.$EventManager$.prototype.$OnTouchStartBubble$ = function $$dvt$$17$$$$EventManager$$$$OnTouchStartBubble$$($DvtSvgShadowUtils$$) {
    this.$PreEventBubble$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.$isInitialTouch$() && (this.$_popupJustClosed$ = !1);
    if (this.$DragSource$) {
      var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$.target);
      !$DvtSvgShadowUtils$$.$dragSourceSet$ && this.$IsDragCandidate$($DvtSvgPatternFillUtils$$) && (this.$DragSource$.$setDragCandidate$($DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$.$dragSourceSet$ = !0);
    }
    this.$_isInActionPopup$ && (this.$CustomTooltipManager$.$closeActionTooltip$(), this.$TouchManager$.$resetTouchHold$());
    this.$HandleImmediateTouchStartInternal$($DvtSvgShadowUtils$$);
    this.$TouchManager$.$fireLogicalEvents$($DvtSvgShadowUtils$$);
    this.$TouchManager$.$postEventBubble$($DvtSvgShadowUtils$$);
    this.$_isTouchResponseTouchStart$() ? (this.$_touchResponseHandled$ = !0, this.$TouchManager$.$processAssociatedTouchAttempt$($DvtSvgShadowUtils$$, this.$_saveTouchStart$, this)) : (this.$_touchResponseHandled$ = !1, this.$_processTouchTooltip$($DvtSvgShadowUtils$$));
  };
  $dvt$$17$$.$EventManager$.prototype.$OnTouchMoveBubble$ = function $$dvt$$17$$$$EventManager$$$$OnTouchMoveBubble$$($DvtSvgShadowUtils$$) {
    this.$PreEventBubble$($DvtSvgShadowUtils$$);
    this.$TouchManager$ && (this.$_prevActionClear$ = !1, this.$HandleImmediateTouchMoveInternal$($DvtSvgShadowUtils$$), this.$TouchManager$.$fireLogicalEvents$($DvtSvgShadowUtils$$), this.$TouchManager$.$postEventBubble$($DvtSvgShadowUtils$$), this.$_processTouchTooltip$($DvtSvgShadowUtils$$));
  };
  $dvt$$17$$.$EventManager$.prototype.$_handleTouchEndTimer$ = function $$dvt$$17$$$$EventManager$$$$_handleTouchEndTimer$$() {
    for (var $DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < this.$_touchEndTimer$.length;$DvtSvgShadowUtils$$++) {
      var $DvtSvgPatternFillUtils$$ = this.$_touchEndTimer$[$DvtSvgShadowUtils$$];
      $DvtSvgPatternFillUtils$$.timer.stop();
      $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.event;
      this.$TouchManager$ && (this.$HandleImmediateTouchEndInternal$($DvtSvgPatternFillUtils$$), this.$TouchManager$.$fireLogicalEvents$($DvtSvgPatternFillUtils$$), this.$TouchManager$.$postEventBubble$($DvtSvgPatternFillUtils$$));
    }
    this.$DragSource$ && !$DvtSvgPatternFillUtils$$.$dragSourceSet$ && (this.$DragSource$.$setDragCandidate$(null), $DvtSvgPatternFillUtils$$.$dragSourceSet$ = !0);
    this.$_touchEndTimer$ = [];
  };
  $dvt$$17$$.$EventManager$.prototype.$OnTouchEndBubble$ = function $$dvt$$17$$$$EventManager$$$$OnTouchEndBubble$$($DvtSvgShadowUtils$$) {
    this.$PreEventBubble$($DvtSvgShadowUtils$$);
    var $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Timer$(this.$_context$, 0, this.$_handleTouchEndTimer$, this, 1);
    this.$_touchEndTimer$ || (this.$_touchEndTimer$ = []);
    this.$_touchEndTimer$.push({event:$DvtSvgShadowUtils$$, timer:$DvtSvgPatternFillUtils$$});
    $DvtSvgPatternFillUtils$$.start();
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleImmediateTouchStartInternal$ = function $$dvt$$17$$$$EventManager$$$$HandleImmediateTouchStartInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleImmediateTouchMoveInternal$ = function $$dvt$$17$$$$EventManager$$$$HandleImmediateTouchMoveInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleImmediateTouchEndInternal$ = function $$dvt$$17$$$$EventManager$$$$HandleImmediateTouchEndInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$_preOnComponentTouchHoverStart$ = function $$dvt$$17$$$$EventManager$$$$_preOnComponentTouchHoverStart$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_START_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverStart$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnComponentTouchHoverStart$ = function $$dvt$$17$$$$EventManager$$$$OnComponentTouchHoverStart$$($DvtSvgShadowUtils$$) {
    this.$HandleTouchHoverStartInternal$($DvtSvgShadowUtils$$);
    this.$_touchResponseHandled$ || this.$HandleTouchActionsStart$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_preOnComponentTouchHoverMove$ = function $$dvt$$17$$$$EventManager$$$$_preOnComponentTouchHoverMove$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_MOVE_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverMove$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnComponentTouchHoverMove$ = function $$dvt$$17$$$$EventManager$$$$OnComponentTouchHoverMove$$($DvtSvgShadowUtils$$) {
    this.$HandleTouchHoverMoveInternal$($DvtSvgShadowUtils$$);
    this.$_touchResponseHandled$ || this.$HandleTouchActionsMove$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_preOnComponentTouchHoverEnd$ = function $$dvt$$17$$$$EventManager$$$$_preOnComponentTouchHoverEnd$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_END_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverEnd$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnComponentTouchHoverEnd$ = function $$dvt$$17$$$$EventManager$$$$OnComponentTouchHoverEnd$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$);
    this.$HandleTouchHoverEndInternal$($DvtSvgShadowUtils$$);
    this.$ProcessTouchContextMenu$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    if (this.$_callbackObj$ instanceof $dvt$$17$$.$BaseComponent$) {
      var $DvtSvgPatternFillUtils$$ = this.$getCtx$().$getStageAbsolutePosition$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$touch$.pageX, $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$touch$.pageY;
      $DvtSvgImageFillUtils$$ <= $DvtSvgPatternFillUtils$$.x + this.$_callbackObj$.getWidth() && $DvtSvgImageFillUtils$$ >= $DvtSvgPatternFillUtils$$.x && $DvtSvgGradientUtils$$ <= $DvtSvgPatternFillUtils$$.y + this.$_callbackObj$.getHeight() && $DvtSvgGradientUtils$$ >= $DvtSvgPatternFillUtils$$.y && this.$_callback$.call(this.$_callbackObj$, $dvt$$17$$.$EventFactory$.$newTouchHoldReleaseEvent$($DvtSvgShadowUtils$$.$getNativeEvent$()));
    }
    this.$_touchResponseHandled$ || this.$HandleTouchActionsEnd$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_preOnComponentTouchHoverOut$ = function $$dvt$$17$$$$EventManager$$$$_preOnComponentTouchHoverOut$$($DvtSvgShadowUtils$$) {
    this.$_handlePreOutEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OUT_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverOut$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnComponentTouchHoverOut$ = function $$dvt$$17$$$$EventManager$$$$OnComponentTouchHoverOut$$($DvtSvgShadowUtils$$) {
    this.$_touchResponseHandled$ || this.$HandleTouchActionsOut$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_preOnComponentTouchHoverOver$ = function $$dvt$$17$$$$EventManager$$$$_preOnComponentTouchHoverOver$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_HOVER_OVER_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchHoverOver$);
    this.$_handlePreOverEvent$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnComponentTouchHoverOver$ = function $$dvt$$17$$$$EventManager$$$$OnComponentTouchHoverOver$$($DvtSvgShadowUtils$$) {
    this.$HandleTouchHoverOverInternal$($DvtSvgShadowUtils$$);
    this.$_touchResponseHandled$ || this.$HandleTouchActionsOver$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_preOnComponentTouchDblClick$ = function $$dvt$$17$$$$EventManager$$$$_preOnComponentTouchDblClick$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_DOUBLE_CLICK_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchDblClick$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnComponentTouchDblClick$ = function $$dvt$$17$$$$EventManager$$$$OnComponentTouchDblClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$touch$, $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$Point$($DvtSvgImageFillUtils$$.pageX, $DvtSvgImageFillUtils$$.pageY), $DvtSvgGradientUtils$$ = !1;
    this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgGradientUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
    $DvtSvgGradientUtils$$ || this.$PopupHandler$.$processPopupHelper$($DvtSvgPatternFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgPatternFillUtils$$), [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_DBL_CLICK$], $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0);
    this.$HandleTouchDblClickInternal$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_preOnComponentTouchClick$ = function $$dvt$$17$$$$EventManager$$$$_preOnComponentTouchClick$$($DvtSvgShadowUtils$$) {
    this.$_propagateEvent$($dvt$$17$$.$ComponentTouchEvent$.$TOUCH_CLICK_TYPE$, $DvtSvgShadowUtils$$, this.$OnComponentTouchClick$);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnComponentTouchClick$ = function $$dvt$$17$$$$EventManager$$$$OnComponentTouchClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$touch$, $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$ = new $dvt$$17$$.$Point$($DvtSvgImageFillUtils$$.pageX, $DvtSvgImageFillUtils$$.pageY), $DvtSvgFilterContext$$ = !1;
    this.$_hasEventInfo$($DvtSvgShadowUtils$$) && ($DvtSvgFilterContext$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$));
    !$DvtSvgFilterContext$$ && this.$PopupHandler$.$processPopupHelper$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_ACTION$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CLICK$], $DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$, !0) && (this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0), $DvtSvgFilterContext$$ = !0);
    $DvtSvgFilterContext$$ || ($DvtSvgFilterUtils$$ = this.$_getClientBehaviors$($DvtSvgGradientUtils$$)) && this.$ProcessClientBehaviorForTouch$($DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
    this.$HandleTouchClickInternal$($DvtSvgShadowUtils$$) || (this.$_isTouchResponseTouchStart$() || this.$_processTouchSelection$($DvtSvgGradientUtils$$), this.$_popupJustClosed$ || this.$_processTouchSelectionClear$($DvtSvgGradientUtils$$), this.$CustomTooltipManager$.$displayActionPopup$() && (new $dvt$$17$$.$Point$($DvtSvgImageFillUtils$$.pageX, $DvtSvgImageFillUtils$$.pageY), this.$CustomTooltipManager$.$startActionPopupAtPosition$($DvtSvgImageFillUtils$$.pageX, $DvtSvgImageFillUtils$$.pageY, 
    $DvtSvgPatternFillUtils$$)), $DvtSvgGradientUtils$$ && !$DvtSvgFilterContext$$ && $DvtSvgGradientUtils$$.$isCommandComponent$ && $DvtSvgGradientUtils$$.$isCommandComponent$() && ($DvtSvgShadowUtils$$ = $dvt$$17$$.$EventFactory$.$newActionEvent$("action", $DvtSvgGradientUtils$$.getId()), $dvt$$17$$.$EventManager$.$_addContextInfo$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$), this.$_callback$.call(this.$_callbackObj$, $DvtSvgShadowUtils$$)));
  };
  $dvt$$17$$.$EventManager$.prototype.$_processTouchSelection$ = function $$dvt$$17$$$$EventManager$$$$_processTouchSelection$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = !1;
    ($DvtSvgPatternFillUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$)) && $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() && ($DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$processClick$($DvtSvgShadowUtils$$, !0)) && this.$fireSelectionEvent$($DvtSvgShadowUtils$$);
    this.$_prevActionClear$ = !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$_processTouchSelectionClear$ = function $$dvt$$17$$$$EventManager$$$$_processTouchSelectionClear$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = !1;
    if (($DvtSvgPatternFillUtils$$ = this.$getSelectionHandler$($DvtSvgShadowUtils$$)) && !($DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$()) && !this.$_prevActionClear$) {
      var $DvtSvgImageFillUtils$$ = !1;
      this.$isClearMenuAllowed$() && $DvtSvgPatternFillUtils$$.$getType$() == $dvt$$17$$.$SelectionHandler$.$TYPE_MULTIPLE$ && 1 < $DvtSvgPatternFillUtils$$.$_selection$.length && ($DvtSvgImageFillUtils$$ = !0);
      $DvtSvgImageFillUtils$$ ? this.$addClearAllActionItem$() : ($DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.$processClick$(null, !1)) && this.$fireSelectionEvent$($DvtSvgShadowUtils$$);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$OnActionTooltipClosed$ = function $$dvt$$17$$$$EventManager$$$$OnActionTooltipClosed$$() {
    this.$_popupJustClosed$ = !0;
    this.$_isInActionPopup$ = !1;
    this.$CustomTooltipManager$.$_actionTooltip$.$containsMenuId$($dvt$$17$$.$EventManager$.$CLEAR_SELECTION_ACTION_TYPE$) && (this.$_prevActionClear$ = !0);
    this.$CustomTooltipManager$.$clearActionTooltip$();
  };
  $dvt$$17$$.$EventManager$.prototype.$OnActionTooltipStarted$ = function $$dvt$$17$$$$EventManager$$$$OnActionTooltipStarted$$() {
    this.$_isInActionPopup$ = !0;
  };
  $dvt$$17$$.$EventManager$.prototype.$_getTooltipInfo$ = function $$dvt$$17$$$$EventManager$$$$_getTooltipInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = null, $DvtSvgFilterContext$$ = !1;
    $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$getDatatip$ && ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getDatatip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$)) && ($DvtSvgFilterContext$$ = !0);
    !$DvtSvgFilterUtils$$ && $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$getTooltip$ && ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$getTooltip$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$));
    return {text:$DvtSvgFilterUtils$$, isDatatip:$DvtSvgFilterContext$$};
  };
  $dvt$$17$$.$EventManager$.prototype.$_processShowTooltip$ = function $$dvt$$17$$$$EventManager$$$$_processShowTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    if (this.$getTooltipsEnabled$($DvtSvgPatternFillUtils$$)) {
      var $DvtSvgFilterUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$ = this.$_getTooltipInfo$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$.x, $DvtSvgFilterUtils$$.y);
      $DvtSvgShadowUtils$$ = $DvtSvgFilterUtils$$.isDatatip;
      if ($DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.text) {
        this.$CustomTooltipManager$.$clearActionTooltip$();
        $DvtSvgPatternFillUtils$$ = this.$GetTooltipColor$($DvtSvgPatternFillUtils$$);
        var $DvtSvgFilterContext$$ = this.$_context$.$getTooltipManager$();
        $DvtSvgShadowUtils$$ ? $DvtSvgFilterContext$$.$showDatatip$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$) : $DvtSvgFilterContext$$.$showTooltip$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, null, !0, $DvtSvgPatternFillUtils$$);
        return !0;
      }
    }
    this.$hideTooltip$();
    return !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$hideTooltip$ = function $$dvt$$17$$$$EventManager$$$$hideTooltip$$() {
    var $DvtSvgShadowUtils$$ = this.$_context$.$getTooltipManager$();
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$hideTooltip$();
  };
  $dvt$$17$$.$EventManager$.prototype.$ProcessTouchContextMenu$ = function $$dvt$$17$$$$EventManager$$$$ProcessTouchContextMenu$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (this.$ContextMenuHandler$) {
      var $DvtSvgImageFillUtils$$ = this.$GetContextMenuType$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = !1;
      $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$isSelected$ && $DvtSvgPatternFillUtils$$.$isSelected$() ? $DvtSvgGradientUtils$$ = !0 : ($DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$.$isSelectable$ && $DvtSvgPatternFillUtils$$.$isSelectable$() || ($DvtSvgImageFillUtils$$ = $dvt$$17$$.$ContextMenuHandler$.$TYPE_BODY_CONTEXT_MENU$), $DvtSvgImageFillUtils$$ == $dvt$$17$$.$ContextMenuHandler$.$TYPE_BODY_CONTEXT_MENU$ && ($DvtSvgGradientUtils$$ = !0));
      $DvtSvgGradientUtils$$ && this.$ProcessContextMenuHandler$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$);
    } else {
      this.$ProcessContextMenuPopup$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$_processActionPopup$ = function $$dvt$$17$$$$EventManager$$$$_processActionPopup$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$CustomTooltipManager$.$displayActionPopup$() ? (this.$SetupTouchTooltip$($DvtSvgShadowUtils$$), this.$CustomTooltipManager$.$startActionPopupAtPosition$($DvtSvgPatternFillUtils$$.x, $DvtSvgPatternFillUtils$$.y, $DvtSvgShadowUtils$$), !0) : !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$SetupTouchTooltip$ = function $$dvt$$17$$$$EventManager$$$$SetupTouchTooltip$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$ = this.$CustomTooltipManager$.$_actionTooltip$;
    null == $DvtSvgShadowUtils$$.$_tooltipBorderColor$ && ($DvtSvgPatternFillUtils$$ = this.$GetTooltipColor$($DvtSvgPatternFillUtils$$), $DvtSvgShadowUtils$$.$setTooltipBorderColor$($DvtSvgPatternFillUtils$$));
  };
  $dvt$$17$$.$EventManager$.prototype.$OnClickInternal$ = function $$dvt$$17$$$$EventManager$$$$OnClickInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$OnDblClickInternal$ = function $$dvt$$17$$$$EventManager$$$$OnDblClickInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchHoverStartInternal$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchHoverStartInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchHoverMoveInternal$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchHoverMoveInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchHoverEndInternal$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchHoverEndInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchHoverOverInternal$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchHoverOverInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchClickInternal$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchClickInternal$$() {
    return !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchDblClickInternal$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchDblClickInternal$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$GetClearSelectionText$ = function $$dvt$$17$$$$EventManager$$$$GetClearSelectionText$$() {
    return $dvt$$17$$.$Bundle$.$getTranslatedString$($dvt$$17$$.$Bundle$.$UTIL_PREFIX$, "CLEAR_SELECTION");
  };
  $dvt$$17$$.$EventManager$.prototype.$addClearAllActionItem$ = function $$dvt$$17$$$$EventManager$$$$addClearAllActionItem$$() {
    this.$addActionTooltipMenuItem$($dvt$$17$$.$EventManager$.$CLEAR_SELECTION_ACTION_TYPE$, this.$GetClearSelectionText$(), this.$_actionTooltipClearListener$, this);
    var $DvtSvgShadowUtils$$ = this.$CustomTooltipManager$.$_actionTooltip$;
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$setTooltipBorderColor$($DvtCustomTooltip$$.$DEFAULT_BORDER_COLOR$);
  };
  $dvt$$17$$.$EventManager$.prototype.$isClearMenuAllowed$ = function $$dvt$$17$$$$EventManager$$$$isClearMenuAllowed$$() {
    return !0;
  };
  $dvt$$17$$.$EventManager$.prototype.$addActionTooltipMenuItem$ = function $$dvt$$17$$$$EventManager$$$$addActionTooltipMenuItem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$CustomTooltipManager$.$_actionTooltip$.$addMenuItem$(new $DvtCustomTooltipItem$$(this.$_context$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$));
  };
  $dvt$$17$$.$EventManager$.prototype.$_actionTooltipClearListener$ = function $$dvt$$17$$$$EventManager$$$$_actionTooltipClearListener$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$GetLogicalObject$($DvtSvgShadowUtils$$.target);
    this.$getSelectionHandler$($DvtSvgShadowUtils$$).$processClick$(null, !1) && this.$fireSelectionEvent$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.$consumeEvent$ = function $$dvt$$17$$$$EventManager$$$consumeEvent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.preventDefault(), $DvtSvgShadowUtils$$.stopPropagation());
  };
  $dvt$$17$$.$EventManager$.$_addContextInfo$ = function $$dvt$$17$$$$EventManager$$$_addContextInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgShadowUtils$$.$getContextCallback$ && $DvtSvgShadowUtils$$.$getContextCallbackObj$) {
      var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getContextCallback$(), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getContextCallbackObj$();
      $DvtSvgImageFillUtils$$ && $DvtSvgGradientUtils$$ && $DvtSvgImageFillUtils$$.call($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$);
    } else {
      $DvtSvgPatternFillUtils$$[$dvt$$17$$.$BaseComponentEvent$.$CLIENT_ROW_KEY$] = $DvtSvgShadowUtils$$.getId();
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$IsPropagationEnabled$ = function $$dvt$$17$$$$EventManager$$$$IsPropagationEnabled$$() {
    return !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$GetCurrentTargetForEvent$ = function $$dvt$$17$$$$EventManager$$$$GetCurrentTargetForEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$);
    return $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $DvtSvgShadowUtils$$.target;
  };
  $dvt$$17$$.$EventManager$.prototype.$_propagateEvent$ = function $$dvt$$17$$$$EventManager$$$$_propagateEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if (this.$GetLogicalObject$($DvtSvgPatternFillUtils$$.target)) {
      var $DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.target;
      try {
        for (;$DvtSvgGradientUtils$$ && (!this.$GetLogicalObject$($DvtSvgGradientUtils$$, !0) || (this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $DvtSvgGradientUtils$$), $DvtSvgImageFillUtils$$.call(this, $DvtSvgPatternFillUtils$$), this.$IsPropagationEnabled$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$)));) {
          $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.getParent();
        }
      } finally {
        this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, null);
      }
    } else {
      $DvtSvgImageFillUtils$$.call(this, $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$ConsumesClick$ = function $$dvt$$17$$$$EventManager$$$$ConsumesClick$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$.$isSelectable$ && $DvtSvgShadowUtils$$.$isSelectable$() || $DvtSvgShadowUtils$$.$isClickEventPropagationStopped$ && $DvtSvgShadowUtils$$.$isClickEventPropagationStopped$() || this.$_hasClickPopup$($DvtSvgShadowUtils$$) || this.$_hasClickClientBehavior$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_hasClickPopup$ = function $$dvt$$17$$$$EventManager$$$$_hasClickPopup$$($DvtSvgShadowUtils$$) {
    return this.$PopupHandler$.$hasPopup$($DvtSvgShadowUtils$$, [$dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_ACTION$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_CLICK$]);
  };
  $dvt$$17$$.$EventManager$.prototype.$addComponentKeyboardHandler$ = function $$dvt$$17$$$$EventManager$$$$addComponentKeyboardHandler$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && this.$_keyboardHandlers$.push($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$addComponentKeyboardHandlerAt$ = function $$dvt$$17$$$$EventManager$$$$addComponentKeyboardHandlerAt$$($DvtSvgShadowUtils$$) {
    0 > this.$_keyboardHandlers$.length || !$DvtSvgShadowUtils$$ || (this.$_keyboardHandlers$.splice(0, 0, $DvtSvgShadowUtils$$), 0 <= this.$_currentKeyboardHandlerIdx$ && this.$_currentKeyboardHandlerIdx$++);
  };
  $dvt$$17$$.$EventManager$.prototype.$removeComponentKeyboardHandler$ = function $$dvt$$17$$$$EventManager$$$$removeComponentKeyboardHandler$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = this.$_findHandler$($DvtSvgShadowUtils$$), -1 < $DvtSvgShadowUtils$$ && (this.$_currentKeyboardHandlerIdx$ == $DvtSvgShadowUtils$$ && 0 == $DvtSvgShadowUtils$$ ? this.$_currentKeyboardHandlerIdx$ = 0 : $DvtSvgShadowUtils$$ <= this.$_currentKeyboardHandlerIdx$ && this.$_currentKeyboardHandlerIdx$--, this.$_keyboardHandlers$.splice($DvtSvgShadowUtils$$, 1)));
  };
  $dvt$$17$$.$EventManager$.prototype.$_findHandler$ = function $$dvt$$17$$$$EventManager$$$$_findHandler$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = -1, $DvtSvgImageFillUtils$$ = this.$_keyboardHandlers$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgImageFillUtils$$;$DvtSvgGradientUtils$$++) {
      this.$_keyboardHandlers$[$DvtSvgGradientUtils$$] === $DvtSvgShadowUtils$$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$);
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$EventManager$.prototype.$setCurrentKeyboardHandler$ = function $$dvt$$17$$$$EventManager$$$$setCurrentKeyboardHandler$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_findHandler$($DvtSvgShadowUtils$$);
    0 <= $DvtSvgShadowUtils$$ && (this.$_currentKeyboardHandlerIdx$ = $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_hasClickClientBehavior$ = function $$dvt$$17$$$$EventManager$$$$_hasClickClientBehavior$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ = this.$_getClientBehaviors$($DvtSvgShadowUtils$$)) {
      for (var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgPatternFillUtils$$++) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$];
        if ($DvtSvgImageFillUtils$$ && ($DvtSvgImageFillUtils$$.$getTriggerType$() == $dvt$$17$$.$ClientBehavior$.$TRIGGER_TYPE_ACTION$ || $DvtSvgImageFillUtils$$.$getTriggerType$() == $dvt$$17$$.$ClientBehavior$.$TRIGGER_TYPE_CLICK$)) {
          return !0;
        }
      }
    }
    return !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$CreateClientBehaviorHandler$ = function $$dvt$$17$$$$EventManager$$$$CreateClientBehaviorHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return new $dvt$$17$$.$ClientBehaviorHandler$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$ProcessClientBehaviorForTouch$ = function $$dvt$$17$$$$EventManager$$$$ProcessClientBehaviorForTouch$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return this.$ClientBehaviorHandler$.$processClick$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$IsDragCandidate$ = function $$dvt$$17$$$$EventManager$$$$IsDragCandidate$$() {
    return !0;
  };
  $dvt$$17$$.$EventManager$.$_getActiveElementId$ = function $$dvt$$17$$$$EventManager$$$_getActiveElementId$$() {
    return "_dvtActiveElement" + Math.floor(1E9 * Math.random());
  };
  $dvt$$17$$.$EventManager$.prototype.$UpdateActiveElement$ = function $$dvt$$17$$$$EventManager$$$$UpdateActiveElement$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$getDisplayable$ ? $DvtSvgShadowUtils$$.$getDisplayable$() : $DvtSvgShadowUtils$$.$getDisplayables$ ? $DvtSvgShadowUtils$$.$getDisplayables$()[0] : $DvtSvgShadowUtils$$);
    if ($DvtSvgPatternFillUtils$$ instanceof $dvt$$17$$.$Displayable$) {
      if ($DvtSvgShadowUtils$$.$getAriaLabel$) {
        var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getAriaLabel$();
        $DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$.$setAriaProperty$("label", $DvtSvgImageFillUtils$$);
      } else {
        for (;!$DvtSvgPatternFillUtils$$.$getAriaRole$() && $DvtSvgPatternFillUtils$$.getParent();) {
          $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.getParent();
        }
      }
      $DvtSvgPatternFillUtils$$ != this.$getCtx$().$_stage$ && this.$getCtx$().$setActiveElement$($DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$_handlePreOverEvent$ = function $$dvt$$17$$$$EventManager$$$$_handlePreOverEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_getRolloverHierarchy$($DvtSvgShadowUtils$$.target), $DvtSvgImageFillUtils$$ = this.$_getRolloverHierarchy$($DvtSvgShadowUtils$$.relatedTarget);
    if (0 < $DvtSvgPatternFillUtils$$.length && ($DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$[$DvtSvgPatternFillUtils$$.length - 1], $DvtSvgPatternFillUtils$$ != (0 == $DvtSvgImageFillUtils$$.length ? null : $DvtSvgImageFillUtils$$[$DvtSvgImageFillUtils$$.length - 1]))) {
      try {
        this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $DvtSvgPatternFillUtils$$), this.$OnRollOver$($DvtSvgShadowUtils$$);
      } finally {
        this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, null);
      }
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$_handlePreOutEvent$ = function $$dvt$$17$$$$EventManager$$$$_handlePreOutEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$.relatedTarget), $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.target;
    try {
      var $DvtSvgFilterContext$$ = this.$_getRolloverHierarchy$($DvtSvgPatternFillUtils$$.target), $DvtSvgImplFactory$$ = this.$_getRolloverHierarchy$($DvtSvgPatternFillUtils$$.relatedTarget);
      if (0 < $DvtSvgFilterContext$$.length) {
        var $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$[$DvtSvgFilterContext$$.length - 1];
        $DvtHtmlRichTooltipManager$$ != (0 == $DvtSvgImplFactory$$.length ? null : $DvtSvgImplFactory$$[$DvtSvgImplFactory$$.length - 1]) && (this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $DvtHtmlRichTooltipManager$$), this.$OnRollOut$($DvtSvgPatternFillUtils$$));
      }
      var $DvtDomXmlParser$$ = this.$GetLogicalObject$($DvtSvgFilterUtils$$);
      if ($DvtDomXmlParser$$) {
        for (this.$PopupHandler$.$processMouseOut$($DvtDomXmlParser$$, this.$_getDisplayableHierarchy$($DvtSvgPatternFillUtils$$.relatedTarget), $DvtSvgPatternFillUtils$$);$DvtSvgFilterUtils$$;) {
          var $DvtCustomTooltipItem$$ = this.$GetLogicalObject$($DvtSvgFilterUtils$$, !0);
          if ($DvtCustomTooltipItem$$) {
            if ($DvtSvgGradientUtils$$ === $DvtCustomTooltipItem$$) {
              break;
            }
            this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, $DvtSvgFilterUtils$$);
            $DvtSvgImageFillUtils$$.call(this, $DvtSvgPatternFillUtils$$);
            if (!this.$IsPropagationEnabled$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$)) {
              break;
            }
          }
          $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.getParent();
        }
      } else {
        $DvtSvgImageFillUtils$$.call(this, $DvtSvgPatternFillUtils$$);
      }
    } finally {
      this.$SetEventInfo$($DvtSvgPatternFillUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_CURRENT_TARGET_KEY$, null), $DvtSvgPatternFillUtils$$.relatedTarget instanceof $dvt$$17$$.$Displayable$ || this.$_context$.$clearStageAbsolutePosition$();
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$getTouchManager$ = function $$dvt$$17$$$$EventManager$$$$getTouchManager$$() {
    return this.$TouchManager$;
  };
  $dvt$$17$$.$EventManager$.prototype.$endDrag$ = function $$dvt$$17$$$$EventManager$$$$endDrag$$() {
    return null;
  };
  $dvt$$17$$.$EventManager$.prototype.$_hasEventInfo$ = function $$dvt$$17$$$$EventManager$$$$_hasEventInfo$$($DvtSvgShadowUtils$$) {
    return null == $DvtSvgShadowUtils$$ ? !1 : $DvtSvgShadowUtils$$.$getNativeEvent$().$_eventInfo$ ? !0 : !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$GetEventInfo$ = function $$dvt$$17$$$$EventManager$$$$GetEventInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!this.$_hasEventInfo$($DvtSvgShadowUtils$$) || null == $DvtSvgPatternFillUtils$$) {
      return null;
    }
    var $DvtSvgImageFillUtils$$;
    this.$StoreInfoByEventType$($DvtSvgPatternFillUtils$$) ? ($DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.type ? $DvtSvgShadowUtils$$.type : $DvtSvgShadowUtils$$.$getType$(), $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$().$_eventInfo$[$DvtSvgImageFillUtils$$]) : $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$().$_eventInfo$;
    return $DvtSvgImageFillUtils$$ ? $DvtSvgImageFillUtils$$[$DvtSvgPatternFillUtils$$] : null;
  };
  $dvt$$17$$.$EventManager$.prototype.$SetEventInfo$ = function $$dvt$$17$$$$EventManager$$$$SetEventInfo$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    if (null != $DvtSvgShadowUtils$$ && null != $DvtSvgPatternFillUtils$$) {
      var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$();
      $DvtSvgGradientUtils$$.$_eventInfo$ || ($DvtSvgGradientUtils$$.$_eventInfo$ = {});
      this.$StoreInfoByEventType$($DvtSvgPatternFillUtils$$) ? ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.type ? $DvtSvgShadowUtils$$.type : $DvtSvgShadowUtils$$.$getType$(), $DvtSvgGradientUtils$$.$_eventInfo$[$DvtSvgShadowUtils$$] || ($DvtSvgGradientUtils$$.$_eventInfo$[$DvtSvgShadowUtils$$] = {}), $DvtSvgGradientUtils$$.$_eventInfo$[$DvtSvgShadowUtils$$][$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$) : $DvtSvgGradientUtils$$.$_eventInfo$[$DvtSvgPatternFillUtils$$] = $DvtSvgImageFillUtils$$;
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$StoreInfoByEventType$ = function $$dvt$$17$$$$EventManager$$$$StoreInfoByEventType$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ == $dvt$$17$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$ ? !1 : !0;
  };
  $dvt$$17$$.$EventManager$.prototype.$ProcessObjectTooltip$ = function $$dvt$$17$$$$EventManager$$$$ProcessObjectTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$) || this.$_processShowTooltip$($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_TOOLTIP_DISPLAYED_KEY$, !0);
  };
  $dvt$$17$$.$EventManager$.prototype.$_resetExternalKeyboardFocus$ = function $$dvt$$17$$$$EventManager$$$$_resetExternalKeyboardFocus$$() {
    this.$_handleExternalKeyboardFocus$ = !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$OnFocus$ = function $$dvt$$17$$$$EventManager$$$$OnFocus$$($DvtSvgShadowUtils$$) {
    this.$_handleExternalKeyboardFocus$ = !1;
    this.$_bKeyDown$ || $DvtSvgShadowUtils$$.$_isPropagationStopped$ || (this.$_handleExternalKeyboardFocus$ = !0, this.$_keyboardFocusTimer$ || (this.$_keyboardFocusTimer$ = new $dvt$$17$$.$Timer$(this.$_context$, 200, this.$_resetExternalKeyboardFocus$, this, 1)), this.$_keyboardFocusTimer$.reset(), this.$_keyboardFocusTimer$.start(), $DvtSvgShadowUtils$$.stopPropagation());
  };
  $dvt$$17$$.$EventManager$.prototype.$OnBlur$ = function $$dvt$$17$$$$EventManager$$$$OnBlur$$() {
    this.$_bKeyDown$ = !1;
    var $DvtSvgShadowUtils$$ = this.$getFocus$();
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$isShowingKeyboardFocusEffect$() && $DvtSvgShadowUtils$$.$hideKeyboardFocusEffect$();
  };
  $dvt$$17$$.$EventManager$.prototype.$ProcessRolloverEvent$ = function $$dvt$$17$$$$EventManager$$$$ProcessRolloverEvent$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$CreateCategoryRolloverHandler$ = function $$dvt$$17$$$$EventManager$$$$CreateCategoryRolloverHandler$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return new $dvt$$17$$.$CategoryRolloverHandler$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$GetTouchResponse$ = function $$dvt$$17$$$$EventManager$$$$GetTouchResponse$$() {
    return $dvt$$17$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_START$;
  };
  $dvt$$17$$.$EventManager$.prototype.$_isTouchResponseTouchStart$ = function $$dvt$$17$$$$EventManager$$$$_isTouchResponseTouchStart$$() {
    var $DvtSvgShadowUtils$$ = this.$GetTouchResponse$();
    if ($DvtSvgShadowUtils$$ === $dvt$$17$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_START$) {
      return !0;
    }
    if ($DvtSvgShadowUtils$$ === $dvt$$17$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_HOLD$) {
      return !1;
    }
    for ($DvtSvgShadowUtils$$ = this.$getCtx$().$_root$.parentElement.parentElement;$DvtSvgShadowUtils$$ && "HTML" !== $DvtSvgShadowUtils$$.nodeName;) {
      var $DvtSvgPatternFillUtils$$ = window.getComputedStyle($DvtSvgShadowUtils$$);
      if ("hidden" !== $DvtSvgPatternFillUtils$$.overflow && ($DvtSvgShadowUtils$$.scrollWidth > $DvtSvgShadowUtils$$.clientWidth + $dvt$$17$$.$EventManager$.$_TOUCH_RESPONSE_PADDING_CHECK$ && "hidden" !== $DvtSvgPatternFillUtils$$["overflow-x"] || $DvtSvgShadowUtils$$.scrollHeight > $DvtSvgShadowUtils$$.clientHeight + $dvt$$17$$.$EventManager$.$_TOUCH_RESPONSE_PADDING_CHECK$ && "hidden" !== $DvtSvgPatternFillUtils$$["overflow-y"])) {
        return !1;
      }
      $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.parentElement;
    }
    return !0;
  };
  $dvt$$17$$.$EventManager$.prototype.$_saveTouchStart$ = function $$dvt$$17$$$$EventManager$$$$_saveTouchStart$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    1 >= this.$TouchManager$.$getTouchIdsForObj$($dvt$$17$$.$EventManager$.$TOUCH_RESPONSE_TOUCH_START$).length && (this.$TouchManager$.$saveProcessedTouch$($DvtSvgPatternFillUtils$$.identifier, $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$, $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$, $dvt$$17$$.$TouchManager$.$HOVER_TOUCH_KEY$, this.$HandleTouchActionsMove$, this.$HandleTouchActionsEnd$, this), this.$HandleTouchActionsStart$($DvtSvgShadowUtils$$));
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchActionsStart$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchActionsStart$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ComponentTouchEvent$ ? $DvtSvgShadowUtils$$.$touch$ : $DvtSvgShadowUtils$$.touches[0], $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.pageX, $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$.pageY;
    $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ComponentTouchEvent$ || (this.$_touchMap$[$DvtSvgGradientUtils$$.identifier] || (this.$_touchMap$[$DvtSvgGradientUtils$$.identifier] = {}), this.$_touchMap$[$DvtSvgGradientUtils$$.identifier][$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$] = null, $DvtSvgImageFillUtils$$ && this.$HandleTouchActionsOver$($DvtSvgShadowUtils$$), this.$_touchMap$[$DvtSvgGradientUtils$$.identifier][$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$] = $DvtSvgImageFillUtils$$);
    this.$_marqueeHandler$ && ($DvtSvgGradientUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = this.$_marqueeHandler$.$processDragStart$($DvtSvgGradientUtils$$)) && ($DvtSvgShadowUtils$$.preventDefault(), this.$_callback$.call(this.$_callbackObj$, $DvtSvgGradientUtils$$));
    $DvtSvgImageFillUtils$$ && this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, !0);
    this.$_processTouchTooltip$($DvtSvgShadowUtils$$);
    this.$_prevActionClear$ = !1;
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgFilterUtils$$ = new $dvt$$17$$.$Point$($DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), ($DvtSvgPatternFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgPatternFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgImageFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgImageFillUtils$$), 
    $DvtSvgFilterUtils$$, $DvtSvgPatternFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_DOWN$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0));
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchActionsMove$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchActionsMove$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ComponentTouchEvent$ ? $DvtSvgShadowUtils$$.$touch$ : $DvtSvgShadowUtils$$.touches[0], $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$;
    if ($DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ComponentTouchEvent$) {
      $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
    } else {
      $DvtSvgShadowUtils$$.preventDefault();
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SvgDocumentUtils$.$elementFromTouch$($DvtSvgPatternFillUtils$$);
      $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
      var $DvtSvgFilterUtils$$ = this.$_touchMap$[$DvtSvgPatternFillUtils$$.identifier][$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$];
      if ($DvtSvgFilterUtils$$ != $DvtSvgGradientUtils$$) {
        if ($DvtSvgFilterUtils$$) {
          var $DvtSvgFilterContext$$;
          $DvtSvgFilterUtils$$.$getDisplayable$ ? $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.$getDisplayable$() : $DvtSvgFilterUtils$$.$getDisplayables$ && ($DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.$getDisplayables$()[0]);
          $DvtSvgFilterContext$$ && ($DvtSvgShadowUtils$$.target = $DvtSvgFilterContext$$, this.$HandleTouchActionsOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$));
        }
        $DvtSvgShadowUtils$$.target = $DvtSvgImageFillUtils$$;
        $DvtSvgGradientUtils$$ && this.$HandleTouchActionsOver$($DvtSvgShadowUtils$$);
      }
      this.$_touchMap$[$DvtSvgPatternFillUtils$$.identifier][$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$] = $DvtSvgGradientUtils$$;
    }
    $DvtSvgFilterUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgPatternFillUtils$$.pageX, $DvtSvgPatternFillUtils$$.pageY);
    this.$_marqueeHandler$ && ($DvtSvgFilterUtils$$ = this.$_marqueeHandler$.$processDragMove$($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$.ctrlKey)) && ($DvtSvgShadowUtils$$.preventDefault(), this.$_callback$.call(this.$_callbackObj$, $DvtSvgFilterUtils$$));
    $DvtSvgGradientUtils$$ && this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, !0);
    $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.pageX, $DvtSvgPatternFillUtils$$.pageY);
    this.$PopupHandler$.$processMouseMove$($DvtSvgPatternFillUtils$$);
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_MOVE$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, 
    $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0);
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchActionsEnd$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchActionsEnd$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$;
    if ($DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ComponentTouchEvent$) {
      $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$), $DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$touch$;
    } else {
      $DvtSvgShadowUtils$$.preventDefault();
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SvgDocumentUtils$.$elementFromTouch$($DvtSvgPatternFillUtils$$);
      $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
      var $DvtSvgFilterUtils$$;
      $DvtSvgGradientUtils$$ && ($DvtSvgGradientUtils$$.$getDisplayable$ ? $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$getDisplayable$() : $DvtSvgGradientUtils$$.$getDisplayables$ && ($DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$getDisplayables$()[0]));
      $DvtSvgFilterUtils$$ && ($DvtSvgShadowUtils$$.target = $DvtSvgFilterUtils$$, this.$HandleTouchActionsOut$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$));
      this.$_touchMap$[$DvtSvgPatternFillUtils$$.identifier][$dvt$$17$$.$TouchManager$.$PREV_HOVER_OBJ$] = null;
    }
    $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.pageX;
    var $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.pageY, $DvtSvgImplFactory$$ = this.$_context$.$pageToStageCoords$($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$);
    this.$_marqueeHandler$ && ($DvtSvgImplFactory$$ = this.$_marqueeHandler$.$processDragEnd$($DvtSvgImplFactory$$, $DvtSvgShadowUtils$$.ctrlKey)) && ($DvtSvgShadowUtils$$.preventDefault(), this.$_callback$.call(this.$_callbackObj$, $DvtSvgImplFactory$$));
    this.$_processTouchSelection$($DvtSvgGradientUtils$$);
    this.$_processActionPopup$($DvtSvgImageFillUtils$$, new $dvt$$17$$.$Point$($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$));
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgFilterUtils$$ = new $dvt$$17$$.$Point$($DvtSvgFilterUtils$$, $DvtSvgFilterContext$$), ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_UP$) && 
    this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0));
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchActionsOver$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchActionsOver$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = this.$GetLogicalObject$($DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ComponentTouchEvent$ ? $DvtSvgShadowUtils$$.$touch$ : $DvtSvgShadowUtils$$.touches[0], $DvtSvgGradientUtils$$ = new $dvt$$17$$.$Point$($DvtSvgGradientUtils$$.pageX, $DvtSvgGradientUtils$$.pageY);
    $DvtSvgImageFillUtils$$ && this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$, !0);
    var $DvtSvgFilterUtils$$ = this.$getSelectionHandler$($DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$ && $DvtSvgFilterUtils$$.$processMouseOver$($DvtSvgImageFillUtils$$);
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgPatternFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgPatternFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgImageFillUtils$$, this.$_getShowPopupBehaviors$($DvtSvgImageFillUtils$$), $DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OVER$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, 
    $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0);
  };
  $dvt$$17$$.$EventManager$.prototype.$HandleTouchActionsOut$ = function $$dvt$$17$$$$EventManager$$$$HandleTouchActionsOut$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$GetCurrentTargetForEvent$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$GetLogicalObject$($DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$ComponentTouchEvent$ && ($DvtSvgPatternFillUtils$$ = $DvtSvgShadowUtils$$.$touch$);
    $DvtSvgGradientUtils$$ && this.$ProcessRolloverEvent$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$, !1);
    var $DvtSvgFilterUtils$$ = this.$getSelectionHandler$($DvtSvgGradientUtils$$);
    $DvtSvgFilterUtils$$ && $DvtSvgFilterUtils$$.$processMouseOut$($DvtSvgGradientUtils$$);
    this.$GetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$) || ($DvtSvgFilterUtils$$ = new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$.pageX, $DvtSvgPatternFillUtils$$.pageY), ($DvtSvgImageFillUtils$$ = this.$GetLogicalObjectAndDisplayable$($DvtSvgImageFillUtils$$)) && this.$PopupHandler$.$processMousePopup$($DvtSvgGradientUtils$$, this.$_getShowPopupBehaviors$($DvtSvgGradientUtils$$), $DvtSvgFilterUtils$$, $DvtSvgImageFillUtils$$.$displayable$, $DvtSvgShadowUtils$$, 
    $dvt$$17$$.$ShowPopupBehavior$.$TRIGGER_TYPE_MOUSE_OUT$) && this.$SetEventInfo$($DvtSvgShadowUtils$$, $dvt$$17$$.$EventManager$.$_EVENT_INFO_POPUP_DISPLAYED_KEY$, !0));
  };
  $dvt$$17$$.$EventManager$.$getComponent$ = function $$dvt$$17$$$$EventManager$$$getComponent$$() {
    return null;
  };
  $dvt$$17$$.$EventManager$.$DROP_OFFSET_X_DATA_TYPE$ = "text/_dvtDropOffsetX";
  $dvt$$17$$.$EventManager$.$DROP_OFFSET_Y_DATA_TYPE$ = "text/_dvtDropOffsetY";
  $dvt$$17$$.$EventManager$.prototype.$isDndSupported$ = function $$dvt$$17$$$$EventManager$$$$isDndSupported$$() {
    return !1;
  };
  $dvt$$17$$.$EventManager$.prototype.$OnDndDragStart$ = function $$dvt$$17$$$$EventManager$$$$OnDndDragStart$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ToolkitUtils$.$getJQueryEvent$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $DvtSvgPatternFillUtils$$.dataTransfer;
    if (!($DvtSvgPatternFillUtils$$.dataTransfer.types && 0 < $DvtSvgPatternFillUtils$$.dataTransfer.types.length)) {
      var $DvtSvgGradientUtils$$ = this.$_context$.$pageToStageCoords$($DvtSvgShadowUtils$$.pageX, $DvtSvgShadowUtils$$.pageY), $DvtSvgFilterUtils$$ = this.$DragSource$.$getDragTransferable$($DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y), $DvtSvgFilterContext$$ = this.$GetDragSourceType$($DvtSvgShadowUtils$$);
      if (null == $DvtSvgFilterUtils$$ || null == $DvtSvgFilterContext$$) {
        this.$_context$.$isLastDndEventManager$(this) && $DvtSvgShadowUtils$$.preventDefault();
      } else {
        if (this.$_context$.$getTooltipManager$().$hideTooltip$(), $DvtSvgFilterUtils$$ = this.$_getDragOptions$(), $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$.dataTypes, $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.dragStart, null != $DvtSvgFilterContext$$ || $DvtSvgFilterUtils$$) {
          var $DvtSvgImplFactory$$ = this.$DragSource$.$_dragObj$, $DvtHtmlRichTooltipManager$$ = this.$getSelectionHandler$($DvtSvgImplFactory$$);
          $DvtHtmlRichTooltipManager$$ && $DvtSvgImplFactory$$.$isSelected$ && !$DvtSvgImplFactory$$.$isSelected$() && $DvtHtmlRichTooltipManager$$.$processClick$($DvtSvgImplFactory$$, !1);
          $DvtSvgImplFactory$$.$hideHoverEffect$ && $DvtSvgImplFactory$$.$hideHoverEffect$();
          if (null != $DvtSvgFilterContext$$) {
            for ($dvt$$17$$.$ArrayUtils$.isArray($DvtSvgFilterContext$$) || ($DvtSvgFilterContext$$ = [$DvtSvgFilterContext$$]), $DvtSvgImplFactory$$ = this.$_getDragData$(), $DvtHtmlRichTooltipManager$$ = 0;$DvtHtmlRichTooltipManager$$ < $DvtSvgFilterContext$$.length;$DvtHtmlRichTooltipManager$$++) {
              $DvtSvgImageFillUtils$$.setData($DvtSvgFilterContext$$[$DvtHtmlRichTooltipManager$$], $DvtSvgImplFactory$$);
            }
          }
          var $DvtSvgFilterContext$$ = $dvt$$17$$.$ToolkitUtils$.$getDragFeedback$(this.$DragSource$.$getDragOverFeedback$($DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y), this.$_context$.$_stage$), $DvtDomXmlParser$$ = $DvtSvgFilterContext$$.$svg$, $DvtSvgGradientUtils$$ = this.$DragSource$.$getDragOffset$($DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y);
          $DvtDomXmlParser$$.style.width = $DvtSvgFilterContext$$.width + "px";
          $DvtDomXmlParser$$.style.height = $DvtSvgFilterContext$$.height + "px";
          $DvtDomXmlParser$$.style.left = $DvtSvgShadowUtils$$.pageX - $DvtSvgGradientUtils$$.x + "px";
          $DvtDomXmlParser$$.style.top = $DvtSvgShadowUtils$$.pageY - $DvtSvgGradientUtils$$.y + "px";
          $DvtDomXmlParser$$.style.position = "absolute";
          $DvtDomXmlParser$$.style.fontFamily = this.$_context$.$_defaultFontFamily$;
          $DvtDomXmlParser$$.style.fontSize = this.$_context$.$_defaultFontSize$;
          $dvt$$17$$.$SvgDocumentUtils$.$disableMouseEvents$($DvtDomXmlParser$$);
          document.body.appendChild($DvtDomXmlParser$$);
          $dvt$$17$$.$Context$.requestAnimationFrame(function() {
            document.body.removeChild($DvtDomXmlParser$$);
          });
          $DvtSvgImageFillUtils$$.setDragImage($DvtDomXmlParser$$, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y);
          if ($DvtSvgGradientUtils$$ = this.$GetDropOffset$($DvtSvgShadowUtils$$)) {
            $DvtSvgImageFillUtils$$.setData($dvt$$17$$.$EventManager$.$DROP_OFFSET_X_DATA_TYPE$, $DvtSvgGradientUtils$$.x), $DvtSvgImageFillUtils$$.setData($dvt$$17$$.$EventManager$.$DROP_OFFSET_Y_DATA_TYPE$, $DvtSvgGradientUtils$$.y);
          }
          $DvtSvgFilterUtils$$ && ($DvtSvgShadowUtils$$ = this.$_getDragEventPayload$($DvtSvgShadowUtils$$), $DvtSvgFilterUtils$$($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$));
        } else {
          this.$_context$.$isLastDndEventManager$(this) && $DvtSvgShadowUtils$$.preventDefault();
        }
      }
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$OnDndDrag$ = function $$dvt$$17$$$$EventManager$$$$OnDndDrag$$($DvtSvgShadowUtils$$) {
    this.$_handleDragSourceEvent$($DvtSvgShadowUtils$$, "drag");
  };
  $dvt$$17$$.$EventManager$.prototype.$OnDndDragEnd$ = function $$dvt$$17$$$$EventManager$$$$OnDndDragEnd$$($DvtSvgShadowUtils$$) {
    this.$_handleDragSourceEvent$($DvtSvgShadowUtils$$, "dragEnd");
  };
  $dvt$$17$$.$EventManager$.prototype.$GetDragSourceType$ = function $$dvt$$17$$$$EventManager$$$$GetDragSourceType$$() {
    return null;
  };
  $dvt$$17$$.$EventManager$.prototype.$GetDragDataContexts$ = function $$dvt$$17$$$$EventManager$$$$GetDragDataContexts$$() {
    return [];
  };
  $dvt$$17$$.$EventManager$.prototype.$GetDropOffset$ = function $$dvt$$17$$$$EventManager$$$$GetDropOffset$$() {
    return null;
  };
  $dvt$$17$$.$EventManager$.prototype.$_getDragOptions$ = function $$dvt$$17$$$$EventManager$$$$_getDragOptions$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$GetDragSourceType$($DvtSvgShadowUtils$$);
    return this.$getComponent$().$getOptions$().dnd.drag[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$EventManager$.prototype.$_getDragEventPayload$ = function $$dvt$$17$$$$EventManager$$$$_getDragEventPayload$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = {};
    $DvtSvgShadowUtils$$ = this.$GetDragSourceType$($DvtSvgShadowUtils$$);
    $DvtSvgPatternFillUtils$$[$DvtSvgShadowUtils$$] = this.$GetDragDataContexts$();
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$EventManager$.prototype.$_getDragData$ = function $$dvt$$17$$$$EventManager$$$$_getDragData$$() {
    for (var $DvtSvgShadowUtils$$ = this.$GetDragDataContexts$(), $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgPatternFillUtils$$++) {
      $DvtSvgShadowUtils$$[$DvtSvgPatternFillUtils$$].component = void 0;
    }
    return JSON.stringify($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventManager$.prototype.$_handleDragSourceEvent$ = function $$dvt$$17$$$$EventManager$$$$_handleDragSourceEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (null != this.$GetDragSourceType$($DvtSvgShadowUtils$$)) {
      var $DvtSvgImageFillUtils$$ = this.$_getDragOptions$($DvtSvgShadowUtils$$)[$DvtSvgPatternFillUtils$$];
      if ($DvtSvgImageFillUtils$$) {
        var $DvtSvgGradientUtils$$ = $dvt$$17$$.$ToolkitUtils$.$getJQueryEvent$($DvtSvgShadowUtils$$);
        $DvtSvgImageFillUtils$$($DvtSvgGradientUtils$$);
      }
    }
  };
  $dvt$$17$$.$EventManager$.prototype.$OnDndDragEnter$ = function $$dvt$$17$$$$EventManager$$$$OnDndDragEnter$$($DvtSvgShadowUtils$$) {
    this.$_handleDropTargetEvent$($DvtSvgShadowUtils$$, "dragEnter", !0);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnDndDragOver$ = function $$dvt$$17$$$$EventManager$$$$OnDndDragOver$$($DvtSvgShadowUtils$$) {
    this.$_handleDropTargetEvent$($DvtSvgShadowUtils$$, "dragOver", !0);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnDndDragLeave$ = function $$dvt$$17$$$$EventManager$$$$OnDndDragLeave$$($DvtSvgShadowUtils$$) {
    this.$_handleDropTargetEvent$($DvtSvgShadowUtils$$, "dragLeave", !1);
  };
  $dvt$$17$$.$EventManager$.prototype.$OnDndDrop$ = function $$dvt$$17$$$$EventManager$$$$OnDndDrop$$($DvtSvgShadowUtils$$) {
    this.$_handleDropTargetEvent$($DvtSvgShadowUtils$$, "drop", !1);
  };
  $dvt$$17$$.$EventManager$.prototype.$GetDropTargetType$ = function $$dvt$$17$$$$EventManager$$$$GetDropTargetType$$() {
    return null;
  };
  $dvt$$17$$.$EventManager$.prototype.$GetDropEventPayload$ = function $$dvt$$17$$$$EventManager$$$$GetDropEventPayload$$() {
    return null;
  };
  $dvt$$17$$.$EventManager$.prototype.$ShowDropEffect$ = function $$dvt$$17$$$$EventManager$$$$ShowDropEffect$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$ClearDropEffect$ = function $$dvt$$17$$$$EventManager$$$$ClearDropEffect$$() {
  };
  $dvt$$17$$.$EventManager$.prototype.$_getDropOptions$ = function $$dvt$$17$$$$EventManager$$$$_getDropOptions$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$GetDropTargetType$($DvtSvgShadowUtils$$);
    return this.$getComponent$().$getOptions$().dnd.drop[$DvtSvgShadowUtils$$];
  };
  $dvt$$17$$.$EventManager$.prototype.$_handleDropTargetEvent$ = function $$dvt$$17$$$$EventManager$$$$_handleDropTargetEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    ($DvtSvgPatternFillUtils$$ = this.$_handleDropTargetEventHelper$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$)) || $DvtSvgShadowUtils$$.preventDefault();
    !$DvtSvgPatternFillUtils$$ && $DvtSvgImageFillUtils$$ ? this.$ShowDropEffect$($DvtSvgShadowUtils$$) : this.$ClearDropEffect$();
  };
  $dvt$$17$$.$EventManager$.prototype.$_handleDropTargetEventHelper$ = function $$dvt$$17$$$$EventManager$$$$_handleDropTargetEventHelper$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (null == this.$GetDropTargetType$($DvtSvgShadowUtils$$)) {
      return !0;
    }
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ToolkitUtils$.$getJQueryEvent$($DvtSvgShadowUtils$$), $DvtSvgGradientUtils$$ = this.$_getDropOptions$($DvtSvgShadowUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$[$DvtSvgPatternFillUtils$$];
    if ($DvtSvgFilterUtils$$) {
      var $DvtSvgFilterContext$$ = this.$GetDropEventPayload$($DvtSvgShadowUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$($DvtSvgImageFillUtils$$, $DvtSvgFilterContext$$);
      if (null != $DvtSvgFilterUtils$$) {
        return $DvtSvgFilterUtils$$;
      }
    }
    $DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.dataTypes;
    if (null != $DvtSvgGradientUtils$$) {
      for ($dvt$$17$$.$ArrayUtils$.isArray($DvtSvgGradientUtils$$) || ($DvtSvgGradientUtils$$ = [$DvtSvgGradientUtils$$]), $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtSvgGradientUtils$$.length;$DvtSvgFilterUtils$$++) {
        if (0 <= $dvt$$17$$.$ArrayUtils$.$getIndex$($DvtSvgImageFillUtils$$.dataTransfer.types, $DvtSvgGradientUtils$$[$DvtSvgFilterUtils$$])) {
          return !1;
        }
      }
    }
    return !0;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCustomTooltipManager$$, $dvt$$17$$.$Obj$);
  $DvtCustomTooltipManager$$.prototype.Init = function $$DvtCustomTooltipManager$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_id$ = $DvtSvgPatternFillUtils$$;
    this.$_actionTooltip$ = new $DvtCustomTooltip$$(this.$_context$, this.$_id$ + "ActionPopup");
  };
  $DvtCustomTooltipManager$$.prototype.$GetRichTooltipManager$ = function $$DvtCustomTooltipManager$$$$$GetRichTooltipManager$$() {
    if (!this.$_RichTooltipManager$) {
      this.$_RichTooltipManager$ = this.$_context$.$_implFactory$.$newRichTooltipManager$(this.$_id$ + "Tooltip");
      this.$_RichTooltipManager$.$InitializeTooltipElem$();
      var $DvtSvgShadowUtils$$ = this.$_RichTooltipManager$.$GetStoredContext$();
      $DvtSvgShadowUtils$$ && (new $DvtCustomTooltipEventHandler$$($DvtSvgShadowUtils$$, this, null, null)).$addListeners$(this.$_actionTooltip$);
    }
    return this.$_RichTooltipManager$;
  };
  $DvtCustomTooltipManager$$.prototype.$clearActionTooltip$ = function $$DvtCustomTooltipManager$$$$$clearActionTooltip$$() {
    this.$_actionTooltip$ && this.$_actionTooltip$.$clearContent$();
  };
  $DvtCustomTooltipManager$$.prototype.$hideTooltip$ = function $$DvtCustomTooltipManager$$$$$hideTooltip$$() {
    this.$clearActionTooltip$();
    this.$_RichTooltipManager$ && this.$_RichTooltipManager$.$hideTooltip$();
  };
  $DvtCustomTooltipManager$$.prototype.$closeActionTooltip$ = function $$DvtCustomTooltipManager$$$$$closeActionTooltip$$() {
    var $DvtSvgShadowUtils$$ = new $DvtActionTooltipEvent$$($DvtActionTooltipEvent$$.$TOOLTIP_CLOSED_TYPE$, this.$_actionPopupObj$);
    this.$FireListener$($DvtSvgShadowUtils$$);
    this.$_actionPopupObj$ = null;
    this.$hideTooltip$();
  };
  $DvtCustomTooltipManager$$.prototype.$showDatatip$ = function $$DvtCustomTooltipManager$$$$$showDatatip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = this.$_actionTooltip$;
    $DvtCustomTooltipManager$$.$_formatTextString$($DvtSvgImageFillUtils$$);
    null != $DvtSvgGradientUtils$$ && $DvtSvgFilterUtils$$.$setTooltipBorderColor$($DvtSvgGradientUtils$$);
    this.$GetRichTooltipManager$().$showRichElement$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$);
  };
  $DvtCustomTooltipManager$$.prototype.$displayActionPopup$ = function $$DvtCustomTooltipManager$$$$$displayActionPopup$$() {
    var $DvtSvgShadowUtils$$ = this.$_actionTooltip$;
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$hasMenuItems$() ? !0 : !1;
  };
  $DvtCustomTooltipManager$$.prototype.$startActionPopupAtPosition$ = function $$DvtCustomTooltipManager$$$$$startActionPopupAtPosition$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$_actionTooltip$;
    $DvtSvgGradientUtils$$ && (this.$GetRichTooltipManager$().$showRichElementAtPosition$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$), $DvtSvgShadowUtils$$ = new $DvtActionTooltipEvent$$($DvtActionTooltipEvent$$.$TOOLTIP_STARTED_TYPE$, $DvtSvgImageFillUtils$$), this.$FireListener$($DvtSvgShadowUtils$$), this.$_actionPopupObj$ = $DvtSvgImageFillUtils$$);
  };
  $DvtCustomTooltipManager$$.prototype.$addTooltipEventListener$ = function $$DvtCustomTooltipManager$$$$$addTooltipEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, !0);
    $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$);
    $DvtSvgShadowUtils$$.push($DvtSvgImageFillUtils$$);
  };
  $DvtCustomTooltipManager$$.prototype.$removeTooltipEventListener$ = function $$DvtCustomTooltipManager$$$$$removeTooltipEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$, !1);
    if (null !== $DvtSvgShadowUtils$$) {
      for (var $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$ += 2) {
        if ($DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$] === $DvtSvgPatternFillUtils$$ && $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$ + 1] === $DvtSvgImageFillUtils$$) {
          $DvtSvgShadowUtils$$.splice($DvtSvgGradientUtils$$, 2);
          break;
        }
      }
    }
  };
  $DvtCustomTooltipManager$$.prototype.$_getListeners$ = function $$DvtCustomTooltipManager$$$$$_getListeners$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!this.$_listenerObj$) {
      if ($DvtSvgPatternFillUtils$$) {
        this.$_listenerObj$ = {};
      } else {
        return null;
      }
    }
    var $DvtSvgImageFillUtils$$ = this.$_listenerObj$[$DvtSvgShadowUtils$$];
    !$DvtSvgImageFillUtils$$ && $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$ = [], this.$_listenerObj$[$DvtSvgShadowUtils$$] = $DvtSvgImageFillUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $DvtCustomTooltipManager$$.prototype.$FireListener$ = function $$DvtCustomTooltipManager$$$$$FireListener$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_getListeners$($DvtSvgShadowUtils$$.$getType$(), !1);
    if ($DvtSvgPatternFillUtils$$) {
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$ += 2) {
        $DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].call($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$ + 1], $DvtSvgShadowUtils$$);
      }
    }
  };
  $DvtCustomTooltipManager$$.$_formatTextString$ = function $$DvtCustomTooltipManager$$$$_formatTextString$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.replace(/\n/g, "\x3cbr\x3e"), $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.split("\x3cbr\x3e"))) {
      for (var $DvtSvgPatternFillUtils$$ = [], $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$];
        null != $DvtSvgGradientUtils$$ && "" != $DvtSvgGradientUtils$$ && $DvtSvgPatternFillUtils$$.push($DvtSvgGradientUtils$$);
      }
      for ($DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      }
    }
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCustomTooltipEventHandler$$, $dvt$$17$$.$EventManager$);
  $DvtCustomTooltipEventHandler$$.prototype.$OnClickInternal$ = function $$DvtCustomTooltipEventHandler$$$$$OnClickInternal$$($DvtSvgShadowUtils$$) {
    this.$_handleMenuClick$($DvtSvgShadowUtils$$.target);
  };
  $DvtCustomTooltipEventHandler$$.prototype.$HandleImmediateTouchStartInternal$ = function $$DvtCustomTooltipEventHandler$$$$$HandleImmediateTouchStartInternal$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.$blockTouchHold$();
    this.$_handleMenuClick$($DvtSvgShadowUtils$$.target);
  };
  $DvtCustomTooltipEventHandler$$.prototype.$HandleTouchClickInternal$ = function $$DvtCustomTooltipEventHandler$$$$$HandleTouchClickInternal$$($DvtSvgShadowUtils$$) {
    this.$_handleMenuClick$($DvtSvgShadowUtils$$.target);
  };
  $DvtCustomTooltipEventHandler$$.prototype.$_handleMenuClick$ = function $$DvtCustomTooltipEventHandler$$$$$_handleMenuClick$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = this.$_customTooltipManager$.$_actionPopupObj$;
    if ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$_menu$) {
      var $DvtSvgImageFillUtils$$ = !0;
      $DvtSvgShadowUtils$$ instanceof $DvtContextMenuTooltipItem$$ && $DvtSvgShadowUtils$$.$_menuItem$.$isDisabled$() && ($DvtSvgImageFillUtils$$ = !1);
      $DvtSvgImageFillUtils$$ && (this.$_customTooltipManager$.$closeActionTooltip$(), $DvtSvgShadowUtils$$.$FireActionTooltipItem$($DvtSvgPatternFillUtils$$));
    }
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCustomTooltip$$, $dvt$$17$$.$Container$);
  $DvtCustomTooltip$$.$DEFAULT_BORDER_COLOR$ = "gray";
  $DvtCustomTooltip$$.$DEFAULT_BACKGROUND_COLOR$ = "#ffffff";
  $DvtCustomTooltip$$.$TOOLTIP_ONLY$ = "tooltipOnly";
  $DvtCustomTooltip$$.$MENU_ONLY$ = "menuOnly";
  $DvtCustomTooltip$$.$MENU_AND_TOOLTIP$ = "menuAndTooltip";
  $DvtCustomTooltip$$.EMPTY = "empty";
  $DvtCustomTooltip$$.$MENU_PADDING_LEFT$ = 21;
  $DvtCustomTooltip$$.$MENU_PADDING_RIGHT$ = 10;
  $DvtCustomTooltip$$.prototype.$_Init$ = function $$DvtCustomTooltip$$$$$_Init$$($DvtSvgShadowUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$getImpl$() || this.$setImpl$($DvtSvgShadowUtils$$.$_implFactory$.$newContainer$("customTT"));
    $DvtCustomTooltip$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$);
    this.$_tooltipBorderColor$ = null;
    this.$_menuFontSize$ = 11;
    this.$_tooltipFill$ = new $dvt$$17$$.$SolidFill$($DvtCustomTooltip$$.$DEFAULT_BACKGROUND_COLOR$);
    this.$_includePointer$ = !1;
    this.$_pointerLocation$ = new $dvt$$17$$.$Point$(0, 0);
  };
  $DvtCustomTooltip$$.prototype.$getRootDisplayable$ = function $$DvtCustomTooltip$$$$$getRootDisplayable$$() {
    return this;
  };
  $DvtCustomTooltip$$.prototype.$UpdateTooltipSize$ = function $$DvtCustomTooltip$$$$$UpdateTooltipSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_displayWidth$ = $DvtSvgShadowUtils$$;
    this.$_displayHeight$ = $DvtSvgPatternFillUtils$$;
  };
  $DvtCustomTooltip$$.prototype.$clearContent$ = function $$DvtCustomTooltip$$$$$clearContent$$() {
    this.$clearMenuItems$();
    this.$setTooltipBorderColor$(null);
  };
  $DvtCustomTooltip$$.prototype.$setTooltipBorderColor$ = function $$DvtCustomTooltip$$$$$setTooltipBorderColor$$($DvtSvgShadowUtils$$) {
    this.$_tooltipBorderColor$ = $DvtSvgShadowUtils$$;
  };
  $DvtCustomTooltip$$.prototype.$addMenuItem$ = function $$DvtCustomTooltip$$$$$addMenuItem$$($DvtSvgShadowUtils$$) {
    this.$getMenuItems$().push($DvtSvgShadowUtils$$);
  };
  $DvtCustomTooltip$$.prototype.$hasMenuItems$ = function $$DvtCustomTooltip$$$$$hasMenuItems$$() {
    var $DvtSvgShadowUtils$$ = this.$getMenuItems$();
    return $DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length;
  };
  $DvtCustomTooltip$$.prototype.$clearMenuItems$ = function $$DvtCustomTooltip$$$$$clearMenuItems$$() {
    this.$_menuItems$ && (this.$_menuItems$ = []);
  };
  $DvtCustomTooltip$$.prototype.$getMenuItems$ = function $$DvtCustomTooltip$$$$$getMenuItems$$() {
    this.$_menuItems$ || (this.$_menuItems$ = []);
    return this.$_menuItems$;
  };
  $DvtCustomTooltip$$.prototype.$containsMenuId$ = function $$DvtCustomTooltip$$$$$containsMenuId$$($DvtSvgShadowUtils$$) {
    for (var $DvtSvgPatternFillUtils$$ = this.$getMenuItems$(), $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$.length;$DvtSvgImageFillUtils$$++) {
      if ($DvtSvgPatternFillUtils$$[$DvtSvgImageFillUtils$$].getId() == $DvtSvgShadowUtils$$) {
        return !0;
      }
    }
    return !1;
  };
  $DvtCustomTooltip$$.prototype.$getTooltipType$ = function $$DvtCustomTooltip$$$$$getTooltipType$$() {
    return this.$hasMenuItems$() ? $DvtCustomTooltip$$.$MENU_ONLY$ : $DvtCustomTooltip$$.EMPTY;
  };
  $DvtCustomTooltip$$.prototype.$Render$ = function $$DvtCustomTooltip$$$$$Render$$() {
    var $DvtSvgShadowUtils$$ = this.$getRootDisplayable$();
    $DvtSvgShadowUtils$$.$removeChildren$();
    var $DvtSvgPatternFillUtils$$ = this.$getTooltipType$();
    if ($DvtSvgPatternFillUtils$$ != $DvtCustomTooltip$$.EMPTY) {
      var $DvtSvgImageFillUtils$$ = 4, $DvtSvgGradientUtils$$ = 2;
      this.$_includePointer$ && ($DvtSvgGradientUtils$$ = 3, $DvtSvgImageFillUtils$$ = 10);
      var $DvtSvgFilterUtils$$ = this.$hasMenuItems$(), $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ / 2, $DvtSvgImplFactory$$ = 0, $DvtHtmlRichTooltipManager$$ = 0;
      $DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$TOOLTIP_ONLY$ ? $DvtSvgShadowUtils$$.$setAlpha$(.9) : $DvtSvgShadowUtils$$.$setAlpha$(1);
      var $DvtDomXmlParser$$ = [], $DvtCustomTooltipItem$$ = [];
      $DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$MENU_AND_TOOLTIP$ ? $DvtSvgImplFactory$$ += 5 : $DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$MENU_ONLY$ && ($DvtSvgImplFactory$$ += 2.5);
      if ($DvtSvgFilterUtils$$) {
        for (var $DvtPolygonalShape$$ = this.$getMenuItems$(), $DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtPolygonalShape$$.length;$DvtSvgFilterUtils$$++) {
          var $DvtCustomTooltipEventHandler$$ = $DvtPolygonalShape$$[$DvtSvgFilterUtils$$], $DvtCircularShape$$ = new $dvt$$17$$.$OutputText$(this.$_context$, $DvtCustomTooltipEventHandler$$.$getText$(), 0, 0, null);
          $DvtCircularShape$$.$alignBottom$();
          $DvtCircularShape$$.$setFontSize$(this.$_menuFontSize$);
          $DvtCustomTooltipEventHandler$$ instanceof $DvtContextMenuTooltipItem$$ && $DvtCustomTooltipEventHandler$$.$_menuItem$.$isDisabled$() && $DvtCircularShape$$.$setAlpha$(.5);
          $DvtCircularShape$$.$_menu$ = $DvtCustomTooltipEventHandler$$;
          $DvtCustomTooltipEventHandler$$ = $DvtCircularShape$$.$measureDimensions$();
          $DvtCustomTooltipEventHandler$$.y = $DvtSvgFilterContext$$ + $DvtSvgImplFactory$$;
          var $DvtPopupSource$$ = $DvtCustomTooltipEventHandler$$.$w$;
          $DvtCustomTooltipItem$$.push($DvtCustomTooltipEventHandler$$);
          $DvtHtmlRichTooltipManager$$ = Math.max($DvtPopupSource$$ + $DvtCustomTooltip$$.$MENU_PADDING_LEFT$ + $DvtCustomTooltip$$.$MENU_PADDING_RIGHT$, $DvtHtmlRichTooltipManager$$);
          $DvtCircularShape$$.$setY$($DvtCustomTooltipEventHandler$$.y);
          $DvtSvgImplFactory$$ += $DvtCustomTooltipEventHandler$$.$h$;
          $DvtSvgFilterUtils$$ < $DvtPolygonalShape$$.length - 1 && ($DvtSvgImplFactory$$ += 5);
          $DvtDomXmlParser$$.push($DvtCircularShape$$);
          $DvtCircularShape$$.$alignLeft$();
          $DvtCircularShape$$.$alignTop$();
        }
      }
      if ($DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$MENU_ONLY$ || $DvtSvgPatternFillUtils$$ == $DvtCustomTooltip$$.$MENU_AND_TOOLTIP$) {
        $DvtSvgImplFactory$$ += 2.5;
      }
      $DvtSvgFilterUtils$$ = $DvtHtmlRichTooltipManager$$ + 2 * $DvtSvgImageFillUtils$$;
      $DvtSvgPatternFillUtils$$ = $DvtSvgFilterUtils$$ + $DvtSvgGradientUtils$$;
      $DvtSvgFilterContext$$ = $DvtSvgFilterContext$$ + $DvtSvgImplFactory$$ + $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ / 2;
      this.$_cursorText$ && this.$_cursorText$.$setTranslateX$($DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$ / 2);
      $DvtHtmlRichTooltipManager$$ = 12;
      $DvtPolygonalShape$$ = this.$_pointerLocation$.x > $DvtSvgPatternFillUtils$$;
      $DvtSvgImageFillUtils$$ = -this.$_pointerLocation$.x;
      $DvtSvgImplFactory$$ = this.$_pointerLocation$.y;
      this.$_includePointer$ ? ($DvtSvgFilterContext$$ / 2 < $DvtHtmlRichTooltipManager$$ && ($DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$ / 3), $DvtCircularShape$$ = Math.max($DvtSvgImplFactory$$ + $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ + $DvtSvgGradientUtils$$), $DvtPolygonalShape$$ ? (this.$UpdateTooltipSize$(this.$_pointerLocation$.x, $DvtCircularShape$$), $DvtCircularShape$$ = $DvtSvgGradientUtils$$ / 2) : (this.$UpdateTooltipSize$($DvtSvgPatternFillUtils$$ + $DvtSvgImageFillUtils$$ + 
      $DvtSvgGradientUtils$$, $DvtCircularShape$$), $DvtCircularShape$$ = $DvtSvgGradientUtils$$ / 2 + $DvtSvgImageFillUtils$$), $DvtSvgShadowUtils$$.$setTranslate$($DvtCircularShape$$, $DvtSvgGradientUtils$$ / 2)) : (this.$UpdateTooltipSize$($DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$, $DvtSvgFilterContext$$ + $DvtSvgGradientUtils$$), $DvtSvgShadowUtils$$.$setTranslate$($DvtSvgGradientUtils$$ / 2, $DvtSvgGradientUtils$$ / 2));
      $DvtSvgGradientUtils$$ = new $dvt$$17$$.Rect(this.$_context$, 0, 0, $DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$);
      this.$_includePointer$ && ($DvtSvgGradientUtils$$ = $DvtSvgFilterContext$$ / 2, $DvtPolygonalShape$$ ? ($DvtPolygonalShape$$ = new $dvt$$17$$.$Point$(0, 0), $DvtCircularShape$$ = new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$, 0), $DvtCustomTooltipEventHandler$$ = new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$), $DvtPopupSource$$ = new $dvt$$17$$.$Point$(this.$_pointerLocation$.x, $DvtSvgImplFactory$$), $DvtHtmlRichTooltipManager$$ = new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$, 
      $DvtSvgGradientUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$), $DvtSvgGradientUtils$$ = new $dvt$$17$$.$Point$(0, $DvtSvgFilterContext$$), $DvtSvgGradientUtils$$ = $dvt$$17$$.$PathUtils$.moveTo($DvtPolygonalShape$$.x + 5, $DvtPolygonalShape$$.y) + $dvt$$17$$.$PathUtils$.lineTo($DvtCircularShape$$.x - 5, $DvtCircularShape$$.y) + $dvt$$17$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtCircularShape$$.x, 
      $DvtCircularShape$$.y + 5) + $dvt$$17$$.$PathUtils$.lineTo($DvtCustomTooltipEventHandler$$.x, $DvtCustomTooltipEventHandler$$.y) + $dvt$$17$$.$PathUtils$.lineTo($DvtPopupSource$$.x, $DvtPopupSource$$.y) + $dvt$$17$$.$PathUtils$.lineTo($DvtHtmlRichTooltipManager$$.x, $DvtHtmlRichTooltipManager$$.y) + $dvt$$17$$.$PathUtils$.lineTo($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y - 5) + $dvt$$17$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtSvgImageFillUtils$$.x - 5, $DvtSvgImageFillUtils$$.y) + 
      $dvt$$17$$.$PathUtils$.lineTo($DvtSvgGradientUtils$$.x + 5, $DvtSvgGradientUtils$$.y) + $dvt$$17$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y - 5) + $dvt$$17$$.$PathUtils$.lineTo(0, 5) + $dvt$$17$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, 5, 0) + $dvt$$17$$.$PathUtils$.closePath()) : ($DvtPolygonalShape$$ = new $dvt$$17$$.$Point$(0, 0), $DvtCircularShape$$ = new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$, 0), $DvtCustomTooltipEventHandler$$ = 
      new $dvt$$17$$.$Point$($DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$), $DvtPopupSource$$ = new $dvt$$17$$.$Point$(0, $DvtSvgFilterContext$$), $DvtHtmlRichTooltipManager$$ = new $dvt$$17$$.$Point$(0, $DvtSvgGradientUtils$$ + $DvtHtmlRichTooltipManager$$), $DvtSvgImageFillUtils$$ = new $dvt$$17$$.$Point$(-$DvtSvgImageFillUtils$$, $DvtSvgImplFactory$$), $DvtSvgGradientUtils$$ = new $dvt$$17$$.$Point$(0, $DvtSvgGradientUtils$$), $DvtSvgGradientUtils$$ = $dvt$$17$$.$PathUtils$.moveTo($DvtPolygonalShape$$.x + 
      5, $DvtPolygonalShape$$.y) + $dvt$$17$$.$PathUtils$.lineTo($DvtCircularShape$$.x - 5, $DvtCircularShape$$.y) + $dvt$$17$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtCircularShape$$.x, $DvtCircularShape$$.y + 5) + $dvt$$17$$.$PathUtils$.lineTo($DvtCustomTooltipEventHandler$$.x, $DvtCustomTooltipEventHandler$$.y - 5) + $dvt$$17$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtCustomTooltipEventHandler$$.x - 5, $DvtCustomTooltipEventHandler$$.y) + $dvt$$17$$.$PathUtils$.lineTo($DvtPopupSource$$.x + 
      5, $DvtPopupSource$$.y) + $dvt$$17$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, $DvtPopupSource$$.x, $DvtPopupSource$$.y - 5) + $dvt$$17$$.$PathUtils$.lineTo($DvtHtmlRichTooltipManager$$.x, $DvtHtmlRichTooltipManager$$.y) + $dvt$$17$$.$PathUtils$.lineTo($DvtSvgImageFillUtils$$.x, $DvtSvgImageFillUtils$$.y) + $dvt$$17$$.$PathUtils$.lineTo($DvtSvgGradientUtils$$.x, $DvtSvgGradientUtils$$.y) + $dvt$$17$$.$PathUtils$.lineTo(0, 5) + $dvt$$17$$.$PathUtils$.arcTo(5, 5, Math.PI / 2, 1, 5, 0) + $dvt$$17$$.$PathUtils$.closePath()), 
      $DvtSvgGradientUtils$$ = new $dvt$$17$$.$Path$(this.$_context$, $DvtSvgGradientUtils$$, null));
      $DvtSvgGradientUtils$$.$setSolidStroke$("rgb(229,232,238)");
      this.$_tooltipFill$ || (this.$_tooltipFill$ = new $dvt$$17$$.$SolidFill$($DvtCustomTooltip$$.$DEFAULT_BACKGROUND_COLOR$));
      $DvtSvgGradientUtils$$.$setFill$(this.$_tooltipFill$);
      $DvtSvgShadowUtils$$.$addChildAt$($DvtSvgGradientUtils$$, 0);
      $DvtSvgGradientUtils$$ = .95 * $DvtSvgFilterUtils$$;
      $DvtSvgFilterContext$$ = ($DvtSvgPatternFillUtils$$ - $DvtSvgGradientUtils$$) / 2;
      for ($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtDomXmlParser$$.length;$DvtSvgFilterUtils$$++) {
        $DvtSvgImageFillUtils$$ = $DvtDomXmlParser$$[$DvtSvgFilterUtils$$], $DvtSvgShadowUtils$$.$addChild$($DvtSvgImageFillUtils$$), $DvtSvgImageFillUtils$$.$_menu$ && ($DvtSvgImplFactory$$ = new $dvt$$17$$.$Rectangle$(0, $DvtCustomTooltipItem$$[$DvtSvgFilterUtils$$].y - 2.5, $DvtSvgPatternFillUtils$$, $DvtCustomTooltipItem$$[$DvtSvgFilterUtils$$].$h$ + 5), $DvtSvgImplFactory$$ = new $dvt$$17$$.Rect(this.$_context$, $DvtSvgImplFactory$$.x, $DvtSvgImplFactory$$.y, $DvtSvgImplFactory$$.$w$, $DvtSvgImplFactory$$.$h$), 
        $DvtSvgImplFactory$$.$setInvisibleFill$(), $DvtSvgImplFactory$$.$_menu$ = $DvtSvgImageFillUtils$$.$_menu$, $DvtSvgShadowUtils$$.$addChild$($DvtSvgImplFactory$$), 0 < $DvtSvgFilterUtils$$ && ($DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$.$_menu$.$_menuItem$, $DvtDomXmlParser$$[$DvtSvgFilterUtils$$ - 1].$_menu$ instanceof $DvtContextMenuTooltipItem$$ && $DvtSvgImplFactory$$.$hasSeparatorBefore$() && ($DvtSvgImplFactory$$ = new $dvt$$17$$.$SolidFill$("gray", .5), this.$renderDivider$($DvtSvgShadowUtils$$, 
        $DvtSvgFilterContext$$, $DvtCustomTooltipItem$$[$DvtSvgFilterUtils$$].y - 2.5, $DvtSvgGradientUtils$$, $DvtSvgImplFactory$$)))), $DvtSvgImageFillUtils$$.$setTranslateX$($DvtCustomTooltip$$.$MENU_PADDING_LEFT$);
      }
    }
  };
  $DvtCustomTooltip$$.prototype.$renderDivider$ = function $$DvtCustomTooltip$$$$$renderDivider$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgPatternFillUtils$$ = new $dvt$$17$$.Rect(this.$_context$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, 1);
    $DvtSvgPatternFillUtils$$.$setFill$($DvtSvgFilterUtils$$);
    $DvtSvgShadowUtils$$.$addChild$($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtCustomTooltipItem$$, $dvt$$17$$.$Obj$);
  $DvtCustomTooltipItem$$.prototype.Init = function $$DvtCustomTooltipItem$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_id$ = $DvtSvgPatternFillUtils$$;
    this.$_text$ = $DvtSvgImageFillUtils$$;
    this.$_listener$ = $DvtSvgGradientUtils$$;
    this.$_listenerObj$ = $DvtSvgFilterUtils$$;
  };
  $DvtCustomTooltipItem$$.prototype.getId = function $$DvtCustomTooltipItem$$$$getId$() {
    return this.$_id$;
  };
  $DvtCustomTooltipItem$$.prototype.$getText$ = function $$DvtCustomTooltipItem$$$$$getText$$() {
    return this.$_text$;
  };
  $DvtCustomTooltipItem$$.prototype.$FireActionTooltipItem$ = function $$DvtCustomTooltipItem$$$$$FireActionTooltipItem$$($DvtSvgShadowUtils$$) {
    if (this.$_listenerObj$ && this.$_listener$) {
      var $DvtSvgPatternFillUtils$$ = {};
      $DvtSvgPatternFillUtils$$.target = $DvtSvgShadowUtils$$;
      $DvtSvgPatternFillUtils$$.$menuItem$ = this.$_menuItem$;
      this.$_menuItemTimer$ = new $dvt$$17$$.$Timer$(this.$_context$, 1, this.$_handleMenuTimer$, this);
      this.$_menuItemTimer$.$evt$ = $DvtSvgPatternFillUtils$$;
      this.$_menuItemTimer$.start();
    }
  };
  $DvtCustomTooltipItem$$.prototype.$_handleMenuTimer$ = function $$DvtCustomTooltipItem$$$$$_handleMenuTimer$$() {
    this.$_menuItemTimer$ && this.$_menuItemTimer$.stop();
    this.$_listener$.call(this.$_listenerObj$, this.$_menuItemTimer$.$evt$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtContextMenuTooltipItem$$, $DvtCustomTooltipItem$$);
  $DvtContextMenuTooltipItem$$.prototype.Init = function $$DvtContextMenuTooltipItem$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtContextMenuTooltipItem$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$.$getText$(), $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    this.$_menuItem$ = $DvtSvgFilterUtils$$;
  };
  $dvt$$17$$.$XmlParser$ = function $$dvt$$17$$$$XmlParser$$($DvtSvgShadowUtils$$) {
    this.$_impl$ || (this.$_impl$ = $DvtSvgShadowUtils$$.$_implFactory$.$newParser$());
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$XmlParser$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$XmlParser$.prototype.parse = function $$dvt$$17$$$$XmlParser$$$parse$($DvtSvgShadowUtils$$) {
    return this.$_impl$ && this.$_impl$.parse ? this.$_impl$.parse($DvtSvgShadowUtils$$) : null;
  };
  $dvt$$17$$.$XmlNode$ = function $$dvt$$17$$$$XmlNode$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$XmlNode$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$XmlNode$.prototype.$getAttr$ = function $$dvt$$17$$$$XmlNode$$$$getAttr$$() {
    return null;
  };
  $dvt$$17$$.$XmlNode$.prototype.$getChildNodes$ = function $$dvt$$17$$$$XmlNode$$$$getChildNodes$$() {
    return [];
  };
  $dvt$$17$$.$XmlNode$.prototype.$getChild$ = function $$dvt$$17$$$$XmlNode$$$$getChild$$() {
    var $DvtSvgShadowUtils$$ = this.$getChildNodes$();
    return null != $DvtSvgShadowUtils$$ && 0 < $DvtSvgShadowUtils$$.length ? $DvtSvgShadowUtils$$[0] : null;
  };
  $dvt$$17$$.$XmlNode$.prototype.getFirstChild = function $$dvt$$17$$$$XmlNode$$$getFirstChild$() {
    return this.$getChild$();
  };
  $dvt$$17$$.$XmlNode$.prototype.getName = function $$dvt$$17$$$$XmlNode$$$getName$() {
    return null;
  };
  $dvt$$17$$.$XmlNode$.prototype.getAttributes = function $$dvt$$17$$$$XmlNode$$$getAttributes$() {
    return null;
  };
  $dvt$$17$$.$XmlNode$.prototype.$getAllChildNodes$ = function $$dvt$$17$$$$XmlNode$$$$getAllChildNodes$$() {
    return [];
  };
  $dvt$$17$$.$XmlNode$.prototype.getNodeValue = function $$dvt$$17$$$$XmlNode$$$getNodeValue$() {
    return null;
  };
  $dvt$$17$$.$XmlNode$.prototype.getTextContent = function $$dvt$$17$$$$XmlNode$$$getTextContent$() {
    return null;
  };
  $dvt$$17$$.$XmlNode$.prototype.getElementsByTagName = function $$dvt$$17$$$$XmlNode$$$getElementsByTagName$() {
    return null;
  };
  $dvt$$17$$.$HtmlTooltipManager$ = function $$dvt$$17$$$$HtmlTooltipManager$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.Init($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$HtmlTooltipManager$, $dvt$$17$$.$TooltipManager$);
  $dvt$$17$$.$HtmlTooltipManager$.$_TOOLTIP_DIV_ID$ = "_dvtTooltip";
  $dvt$$17$$.$HtmlTooltipManager$.$_SHOW_DELAY$ = 500;
  $dvt$$17$$.$HtmlTooltipManager$.$_BORDER_COLOR$ = "#9ba2b0";
  $dvt$$17$$.$HtmlTooltipManager$.$_FONT_COLOR$ = "#383a47";
  $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$ = 15;
  $dvt$$17$$.$HtmlTooltipManager$.prototype.Init = function $$dvt$$17$$$$HtmlTooltipManager$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_context$ = $DvtSvgShadowUtils$$;
    this.$_domElementId$ = $DvtSvgPatternFillUtils$$ ? $DvtSvgPatternFillUtils$$ : $dvt$$17$$.$HtmlTooltipManager$.$_TOOLTIP_DIV_ID$;
    this.$_isTooltip$ = !0;
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$showDatatip$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$showDatatip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    null == $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = !0);
    this.$_isTooltip$ = !1;
    this.$_showTextAtPosition$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, this.$_context$.$getDatatipStyleClass$());
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$_showTextAtPosition$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$_showTextAtPosition$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    var $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$ = this.$getTooltipElem$();
    if ("string" == typeof $DvtSvgImageFillUtils$$) {
      for (;$DvtHtmlRichTooltipManager$$.hasChildNodes();) {
        $DvtHtmlRichTooltipManager$$.removeChild($DvtHtmlRichTooltipManager$$.firstChild);
      }
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/(<|&#60;)/g, "\x26lt;");
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/(>|&#62;)/g, "\x26gt;");
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "b");
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "i");
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "table");
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "tr");
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "td");
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/\n/g, "\x3cbr\x3e");
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/\\n/g, "\x3cbr\x3e");
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.replace(/&#92;n/g, "\x3cbr\x3e");
      $DvtSvgImageFillUtils$$ = $dvt$$17$$.$HtmlTooltipManager$.$_restoreTag$($DvtSvgImageFillUtils$$, "br");
      $DvtSvgImplFactory$$ = document.createElement("span");
      $DvtSvgImplFactory$$.style.visibility = "inherit";
      $DvtSvgImplFactory$$.style.width = null;
      $DvtSvgImplFactory$$.style.height = null;
      $DvtSvgImplFactory$$.innerHTML = $DvtSvgImageFillUtils$$;
    } else {
      1 != $DvtSvgImageFillUtils$$ && ($DvtSvgImplFactory$$ = $DvtSvgImageFillUtils$$);
    }
    this.$_isCustomClassName$ || ($DvtHtmlRichTooltipManager$$.className = $DvtSvgFilterContext$$);
    this.$_isCustomClassName$ = !1;
    $DvtSvgGradientUtils$$ || ($DvtSvgGradientUtils$$ = $dvt$$17$$.$HtmlTooltipManager$.$_BORDER_COLOR$);
    this.$_isCustomBorderColor$ || ($DvtHtmlRichTooltipManager$$.style.borderColor = $DvtSvgGradientUtils$$);
    this.$_isCustomBorderColor$ = !1;
    $DvtHtmlRichTooltipManager$$.style.position = "absolute";
    $DvtHtmlRichTooltipManager$$.style.zIndex = 2147483647;
    null != $DvtSvgImplFactory$$ && $DvtHtmlRichTooltipManager$$.appendChild($DvtSvgImplFactory$$);
    this.$PostElement$($DvtHtmlRichTooltipManager$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, !0, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$PostElement$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$PostElement$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgShadowUtils$$.style["pointer-events"] = $DvtSvgGradientUtils$$ ? "none" : "auto";
    $DvtSvgShadowUtils$$.style.width = null;
    $DvtSvgShadowUtils$$.style.height = null;
    $DvtSvgShadowUtils$$.style.left = "0px";
    $DvtSvgShadowUtils$$.style.top = "0px";
    $DvtSvgFilterUtils$$ ? ($DvtSvgGradientUtils$$ = this.$_getOffsets$(), this.$positionTip$($DvtSvgPatternFillUtils$$ + $DvtSvgGradientUtils$$.x, $DvtSvgImageFillUtils$$ + $DvtSvgGradientUtils$$.y)) : this.$positionTip$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $DvtSvgShadowUtils$$.style.visibility = "visible";
    ($DvtSvgPatternFillUtils$$ = this.$_context$.$_tooltipAttachedCallback$) && $DvtSvgPatternFillUtils$$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$hideTooltip$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$hideTooltip$$() {
    this.$clearTooltip$();
    this.$_timerIsRunning$ = this.$_tooltipDisplayed$ = !1;
    var $DvtSvgShadowUtils$$ = document.getElementById(this.$_domElementId$);
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.style.visibility = "hidden", $DvtSvgShadowUtils$$.style.overflow = null, $DvtSvgShadowUtils$$.style.width = "0px", $DvtSvgShadowUtils$$.style.height = "0px", $dvt$$17$$.$Agent$.$isRightToLeft$(this.$_context$) ? $DvtSvgShadowUtils$$.style.left = $DvtSvgShadowUtils$$.style.right : $DvtSvgShadowUtils$$.style.left = "0px", $DvtSvgShadowUtils$$.style.top = "0px");
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$getTooltipElem$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$getTooltipElem$$() {
    var $DvtSvgShadowUtils$$ = document.getElementById(this.$_domElementId$);
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = this.$InitializeTooltipElem$());
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$InitializeTooltipElem$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$InitializeTooltipElem$$() {
    var $DvtSvgShadowUtils$$ = document.createElement("div");
    $DvtSvgShadowUtils$$.id = this.$_domElementId$;
    $DvtSvgShadowUtils$$.style.visibility = "hidden";
    document.body.appendChild($DvtSvgShadowUtils$$);
    this.$InitContent$($DvtSvgShadowUtils$$);
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$InitContent$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$InitContent$$() {
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$showTooltip$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$showTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    $DvtSvgImageFillUtils$$ && 0 != $DvtSvgImageFillUtils$$.length && (this.$_x$ = $DvtSvgShadowUtils$$, this.$_y$ = $DvtSvgPatternFillUtils$$, this.$_text$ = $DvtSvgImageFillUtils$$, this.$_trackMouse$ = $DvtSvgFilterUtils$$, this.$_timerIsRunning$ || ($DvtSvgShadowUtils$$ = document.createElement("span"), $DvtSvgShadowUtils$$.className = "OraDVTTooltipText", $DvtSvgShadowUtils$$.innerHTML = $DvtSvgImageFillUtils$$, $DvtSvgShadowUtils$$.style.color = $dvt$$17$$.$HtmlTooltipManager$.$_FONT_COLOR$, 
    $DvtSvgFilterContext$$ || ($DvtSvgFilterContext$$ = $dvt$$17$$.$HtmlTooltipManager$.$_BORDER_COLOR$), this.$getTooltipElem$().style.borderColor = $DvtSvgFilterContext$$, $dvt$$17$$.$Agent$.$isTouchDevice$() || this.$_tooltipDisplayed$ && this.$_trackMouse$ ? this.$_displayTooltip$(this.$_x$, this.$_y$, this.$_text$, this.$_borderColor$) : (this.$_timerIsRunning$ = !0, this.$_showTimerId$ = window.setTimeout($dvt$$17$$.$Obj$.$createCallback$(this, this.$_handleShowTimer$), $dvt$$17$$.$HtmlTooltipManager$.$_SHOW_DELAY$))));
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$clearTooltip$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$clearTooltip$$() {
    this.$_showTimerId$ && (window.clearTimeout(this.$_showTimerId$), this.$_trackMouse$ = this.$_text$ = this.$_y$ = this.$_x$ = this.$_showTimerId$ = void 0);
    this.$_hideTimerId$ && (window.clearTimeout(this.$_hideTimerId$), this.$_hideTimerId$ = void 0);
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$_handleShowTimer$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$_handleShowTimer$$() {
    this.$_timerIsRunning$ = !1;
    this.$_displayTooltip$(this.$_x$, this.$_y$, this.$_text$, this.$_borderColor$);
    this.$_tooltipDisplayed$ = !0;
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$_displayTooltip$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$_displayTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    this.$_isTooltip$ = !0;
    this.$_showTextAtPosition$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, !0, this.$_context$.$getTooltipStyleClass$());
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$_getOffsets$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$_getOffsets$$() {
    var $DvtSvgShadowUtils$$ = this.$getTooltipBounds$();
    if ($dvt$$17$$.$Agent$.$isTouchDevice$()) {
      return new $dvt$$17$$.$Point$(0 - $DvtSvgShadowUtils$$.$w$ / 2, -30 - $DvtSvgShadowUtils$$.$h$);
    }
    var $DvtSvgPatternFillUtils$$ = -8 - $DvtSvgShadowUtils$$.$h$, $DvtSvgImageFillUtils$$ = 8;
    this.$_isTooltip$ && ($DvtSvgPatternFillUtils$$ = 22, $DvtSvgImageFillUtils$$ = 0);
    $dvt$$17$$.$Agent$.$isRightToLeft$(this.$_context$) && ($DvtSvgImageFillUtils$$ = -$DvtSvgImageFillUtils$$ - $DvtSvgShadowUtils$$.$w$);
    return new $dvt$$17$$.$Point$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$getTooltipBounds$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$getTooltipBounds$$() {
    var $DvtSvgShadowUtils$$ = this.$getTooltipElem$();
    $DvtSvgShadowUtils$$.style.height = "auto";
    return new $dvt$$17$$.$Rectangle$(parseInt($DvtSvgShadowUtils$$.style.left), parseInt($DvtSvgShadowUtils$$.style.top), $DvtSvgShadowUtils$$.offsetWidth, $DvtSvgShadowUtils$$.offsetHeight);
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$positionTip$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$positionTip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$getTooltipElem$(), $DvtSvgGradientUtils$$ = this.$getTooltipBounds$(), $DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$w$, $DvtSvgFilterContext$$ = $DvtSvgGradientUtils$$.$h$, $DvtSvgGradientUtils$$ = new $dvt$$17$$.$Rectangle$(window.pageXOffset + $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$, window.pageYOffset + $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$, window.innerWidth - 2 * $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$, window.innerHeight - 
    2 * $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$);
    $DvtSvgFilterUtils$$ > $DvtSvgGradientUtils$$.$w$ - 2 * $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$ && ($DvtSvgFilterUtils$$ = $DvtSvgGradientUtils$$.$w$ - 2 * $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$, $DvtSvgImageFillUtils$$.style.width = $DvtSvgFilterUtils$$ + "px");
    var $DvtSvgImplFactory$$;
    $DvtSvgImplFactory$$ = Math.max($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$.x + $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$);
    $DvtSvgImplFactory$$ = Math.min($DvtSvgImplFactory$$, $DvtSvgGradientUtils$$.x + $DvtSvgGradientUtils$$.$w$ - $DvtSvgFilterUtils$$ - $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$);
    Math.abs($DvtSvgGradientUtils$$.x) > $dvt$$17$$.$HtmlTooltipManager$.$_VIEWPORT_BUFFER$ && ($DvtSvgImageFillUtils$$.style.width = Math.min($DvtSvgImageFillUtils$$.clientWidth, $DvtSvgGradientUtils$$.x + $DvtSvgGradientUtils$$.$w$ - $DvtSvgImplFactory$$) + "px", $DvtSvgPatternFillUtils$$ += $DvtSvgFilterContext$$ - $DvtSvgImageFillUtils$$.offsetHeight, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.offsetHeight, $DvtSvgImageFillUtils$$.style.overflow = "hidden");
    $DvtSvgFilterUtils$$ = Math.min($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$.y + $DvtSvgGradientUtils$$.$h$ - $DvtSvgFilterContext$$);
    $DvtSvgFilterUtils$$ = Math.max($DvtSvgFilterUtils$$, $DvtSvgGradientUtils$$.y);
    $DvtSvgImageFillUtils$$.style.left = $DvtSvgImplFactory$$ + "px";
    $DvtSvgImageFillUtils$$.style.top = $DvtSvgFilterUtils$$ + "px";
  };
  $dvt$$17$$.$HtmlTooltipManager$.prototype.$getCustomTooltip$ = function $$dvt$$17$$$$HtmlTooltipManager$$$$getCustomTooltip$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = this.$getTooltipElem$();$DvtSvgImageFillUtils$$.hasChildNodes();) {
      $DvtSvgImageFillUtils$$.removeChild($DvtSvgImageFillUtils$$.firstChild);
    }
    $DvtSvgPatternFillUtils$$.parentElement = $DvtSvgImageFillUtils$$;
    $DvtSvgImageFillUtils$$.className = "";
    $DvtSvgImageFillUtils$$.style.borderColor = "";
    var $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$($DvtSvgPatternFillUtils$$);
    $DvtSvgImageFillUtils$$.className && (this.$_isCustomClassName$ = !0);
    $DvtSvgImageFillUtils$$.style.borderColor && (this.$_isCustomBorderColor$ = !0);
    return !$DvtSvgGradientUtils$$ && $DvtSvgImageFillUtils$$.hasChildNodes() ? !0 : $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$HtmlTooltipManager$.$_restoreTag$ = function $$dvt$$17$$$$HtmlTooltipManager$$$_restoreTag$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.replace(new RegExp("\x26lt;(/?)" + $DvtSvgPatternFillUtils$$ + "([^\x26]*)(/?)\x26gt;", "g"), "\x3c$1" + $DvtSvgPatternFillUtils$$ + "$2$3\x3e");
  };
  $dvt$$17$$.$HtmlTooltipManager$.$createStartTag$ = function $$dvt$$17$$$$HtmlTooltipManager$$$createStartTag$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return "\x3c" + $DvtSvgShadowUtils$$ + ' style\x3d"' + $DvtSvgPatternFillUtils$$.toString() + '"\x3e';
  };
  $dvt$$17$$.$HtmlKeyboardListenerUtils$ = function $$dvt$$17$$$$HtmlKeyboardListenerUtils$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$HtmlKeyboardListenerUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$HtmlKeyboardListenerUtils$.$ATTR_IGNORE_EVENTS_FROM_TARGET$ = "_dvtIgnoreEventsFromTarget";
  $dvt$$17$$.$HtmlKeyboardListenerUtils$.$getListener$ = function $$dvt$$17$$$$HtmlKeyboardListenerUtils$$$getListener$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ ? $dvt$$17$$.$HtmlKeyboardListenerUtils$.$_captureListener$ : $dvt$$17$$.$HtmlKeyboardListenerUtils$.$_bubbleListener$;
  };
  $dvt$$17$$.$HtmlKeyboardListenerUtils$.$_bubbleListener$ = function $$dvt$$17$$$$HtmlKeyboardListenerUtils$$$_bubbleListener$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$HtmlKeyboardListenerUtils$.$_commonListener$.call(this, $DvtSvgShadowUtils$$, !1);
  };
  $dvt$$17$$.$HtmlKeyboardListenerUtils$.$_captureListener$ = function $$dvt$$17$$$$HtmlKeyboardListenerUtils$$$_captureListener$$($DvtSvgShadowUtils$$) {
    $dvt$$17$$.$HtmlKeyboardListenerUtils$.$_commonListener$.call(this, $DvtSvgShadowUtils$$, !0);
  };
  $dvt$$17$$.$HtmlKeyboardListenerUtils$.$_commonListener$ = function $$dvt$$17$$$$HtmlKeyboardListenerUtils$$$_commonListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if (!$dvt$$17$$.$HtmlKeyboardListenerUtils$.$_checkIgnoreTarget$($DvtSvgShadowUtils$$)) {
      var $DvtSvgImageFillUtils$$;
      if (this.$_currentObj$) {
        if ("focus" == $DvtSvgShadowUtils$$.type) {
          this.$_focusEvent$ = $DvtSvgShadowUtils$$;
        } else {
          var $DvtSvgGradientUtils$$ = this.$_currentObj$.$getCtx$();
          this.$_focusEvent$ && ($DvtSvgGradientUtils$$.$resetCurrentKeyboardFocus$($DvtSvgShadowUtils$$), $DvtSvgImageFillUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$(this.$_focusEvent$, $DvtSvgGradientUtils$$), this.$_currentObj$.$FireListener$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$), this.$_focusEvent$ = null);
          $DvtSvgImageFillUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$);
          this.$_currentObj$.$FireListener$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
        }
      } else {
        if (this.$_obj$ && this.$_obj$ instanceof Array) {
          for (var $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = this.$_obj$.length, $DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgFilterContext$$;$DvtSvgGradientUtils$$++) {
            $DvtSvgFilterUtils$$ = this.$_obj$[$DvtSvgGradientUtils$$], $DvtSvgImageFillUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, $DvtSvgFilterUtils$$.$getCtx$()), $DvtSvgFilterUtils$$.$FireListener$($DvtSvgImageFillUtils$$, $DvtSvgPatternFillUtils$$);
          }
        }
      }
    }
  };
  $dvt$$17$$.$HtmlKeyboardListenerUtils$.$_checkIgnoreTarget$ = function $$dvt$$17$$$$HtmlKeyboardListenerUtils$$$_checkIgnoreTarget$$($DvtSvgShadowUtils$$) {
    return $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.target && $DvtSvgShadowUtils$$.target[$dvt$$17$$.$HtmlKeyboardListenerUtils$.$ATTR_IGNORE_EVENTS_FROM_TARGET$] ? !0 : !1;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtDomXmlParser$$, $dvt$$17$$.$Obj$);
  $DvtDomXmlParser$$.prototype.parse = function $$DvtDomXmlParser$$$$parse$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = this.$_parser$.parseFromString($DvtSvgShadowUtils$$, "text/xml").documentElement;
    return new $dvt$$17$$.$DomXmlNode$($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$DomXmlNode$ = function $$dvt$$17$$$$DomXmlNode$$($DvtSvgShadowUtils$$) {
    this.$_node$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$DomXmlNode$, $dvt$$17$$.$XmlNode$);
  $dvt$$17$$.$DomXmlNode$.prototype.$getAttr$ = function $$dvt$$17$$$$DomXmlNode$$$$getAttr$$($DvtSvgShadowUtils$$) {
    return this.$_node$.getAttribute($DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$DomXmlNode$.prototype.$getChildNodes$ = function $$dvt$$17$$$$DomXmlNode$$$$getChildNodes$$() {
    for (var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$_node$.firstChild;null != $DvtSvgPatternFillUtils$$;) {
      1 == $DvtSvgPatternFillUtils$$.nodeType && $DvtSvgShadowUtils$$.push(new $dvt$$17$$.$DomXmlNode$($DvtSvgPatternFillUtils$$)), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.nextSibling;
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$DomXmlNode$.prototype.getName = function $$dvt$$17$$$$DomXmlNode$$$getName$() {
    return this.$_node$.nodeName;
  };
  $dvt$$17$$.$DomXmlNode$.prototype.getAttributes = function $$dvt$$17$$$$DomXmlNode$$$getAttributes$() {
    for (var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$_node$.attributes.length, $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgImageFillUtils$$++) {
      var $DvtSvgGradientUtils$$ = this.$_node$.attributes[$DvtSvgImageFillUtils$$];
      $DvtSvgGradientUtils$$.name && "undefined" != typeof $DvtSvgGradientUtils$$.value && null != $DvtSvgGradientUtils$$.value && $DvtSvgShadowUtils$$.push({name:$DvtSvgGradientUtils$$.name, value:$DvtSvgGradientUtils$$.value});
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$DomXmlNode$.prototype.$getAllChildNodes$ = function $$dvt$$17$$$$DomXmlNode$$$$getAllChildNodes$$() {
    for (var $DvtSvgShadowUtils$$ = [], $DvtSvgPatternFillUtils$$ = this.$_node$.firstChild;null != $DvtSvgPatternFillUtils$$;) {
      $DvtSvgShadowUtils$$.push(new $dvt$$17$$.$DomXmlNode$($DvtSvgPatternFillUtils$$)), $DvtSvgPatternFillUtils$$ = $DvtSvgPatternFillUtils$$.nextSibling;
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$DomXmlNode$.prototype.getNodeValue = function $$dvt$$17$$$$DomXmlNode$$$getNodeValue$() {
    return this.$_node$.nodeValue;
  };
  $dvt$$17$$.$DomXmlNode$.prototype.getTextContent = function $$dvt$$17$$$$DomXmlNode$$$getTextContent$() {
    return this.$_node$.textContent;
  };
  $dvt$$17$$.$DomXmlNode$.prototype.getElementsByTagName = function $$dvt$$17$$$$DomXmlNode$$$getElementsByTagName$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = [];
    if ($DvtSvgShadowUtils$$ = this.$_node$.getElementsByTagName($DvtSvgShadowUtils$$)) {
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        $DvtSvgPatternFillUtils$$.push(new $dvt$$17$$.$DomXmlNode$($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$]));
      }
    }
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$EventFactory$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$EventFactory$.$newEvent$ = function $$dvt$$17$$$$EventFactory$$$newEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = {type:$DvtSvgShadowUtils$$};
    $DvtSvgPatternFillUtils$$ && ($DvtSvgImageFillUtils$$.id = $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newOptionChangeEvent$ = function $$dvt$$17$$$$EventFactory$$$newOptionChangeEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("optionChange");
    $DvtSvgPatternFillUtils$$.key = "dataCursorPosition";
    $DvtSvgPatternFillUtils$$.value = $DvtSvgShadowUtils$$;
    $DvtSvgPatternFillUtils$$.optionMetadata = void 0;
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newAdfPropertyChangeEvent$ = function $$dvt$$17$$$$EventFactory$$$newAdfPropertyChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("adfPropertyChange");
    $DvtSvgImageFillUtils$$.properties = {};
    null != $DvtSvgShadowUtils$$ && ($DvtSvgImageFillUtils$$.properties[$DvtSvgShadowUtils$$] = $DvtSvgPatternFillUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newAdfContextMenuEvent$ = function $$dvt$$17$$$$EventFactory$$$newAdfContextMenuEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("adfContextMenu");
    $DvtSvgImageFillUtils$$.nativeEvent = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.menuId = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newAdfHidePopupEvent$ = function $$dvt$$17$$$$EventFactory$$$newAdfHidePopupEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("adfHidePopup");
    $DvtSvgImageFillUtils$$.popupId = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.relatedTarget = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newAdfLogEvent$ = function $$dvt$$17$$$$EventFactory$$$newAdfLogEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("adfLog");
    $DvtSvgImageFillUtils$$.level = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.message = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newAdfShowPopupEvent$ = function $$dvt$$17$$$$EventFactory$$$newAdfShowPopupEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("adfShowPopup");
    $DvtSvgFilterUtils$$.showPopupBehavior = $DvtSvgShadowUtils$$;
    $DvtSvgFilterUtils$$.launcherBounds = $DvtSvgPatternFillUtils$$;
    $DvtSvgFilterUtils$$.launcherId = $DvtSvgImageFillUtils$$;
    $DvtSvgFilterUtils$$.triggerType = $DvtSvgGradientUtils$$;
    return $DvtSvgFilterUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newActionEvent$ = function $$dvt$$17$$$$EventFactory$$$newActionEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("action");
    $DvtSvgGradientUtils$$.commandId = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.clientId = $DvtSvgImageFillUtils$$;
    $DvtSvgGradientUtils$$.subType = $DvtSvgShadowUtils$$;
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newCategoryHideEvent$ = function $$dvt$$17$$$$EventFactory$$$newCategoryHideEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("categoryHide");
    $DvtSvgImageFillUtils$$.category = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.hiddenCategories = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newCategoryShowEvent$ = function $$dvt$$17$$$$EventFactory$$$newCategoryShowEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("categoryShow");
    $DvtSvgImageFillUtils$$.category = $DvtSvgShadowUtils$$;
    $DvtSvgImageFillUtils$$.hiddenCategories = $DvtSvgPatternFillUtils$$;
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newCategoryHighlightEvent$ = function $$dvt$$17$$$$EventFactory$$$newCategoryHighlightEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("categoryHighlight");
    $DvtSvgImageFillUtils$$._highlightType = $DvtSvgPatternFillUtils$$ ? "over" : "out";
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$ || [];
    $DvtSvgImageFillUtils$$.categories = $DvtSvgShadowUtils$$ instanceof Array ? $DvtSvgShadowUtils$$ : [$DvtSvgShadowUtils$$];
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newDrillEvent$ = function $$dvt$$17$$$$EventFactory$$$newDrillEvent$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$EventFactory$.$newEvent$("drill", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventFactory$.$newReadyEvent$ = function $$dvt$$17$$$$EventFactory$$$newReadyEvent$$() {
    return $dvt$$17$$.$EventFactory$.$newEvent$("ready");
  };
  $dvt$$17$$.$EventFactory$.$newSelectionEvent$ = function $$dvt$$17$$$$EventFactory$$$newSelectionEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("selection");
    $DvtSvgPatternFillUtils$$.selection = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newTouchHoldReleaseEvent$ = function $$dvt$$17$$$$EventFactory$$$newTouchHoldReleaseEvent$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("touchHoldRelease");
    $DvtSvgPatternFillUtils$$.nativeEvent = $DvtSvgShadowUtils$$;
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newValueChangeEvent$ = function $$dvt$$17$$$$EventFactory$$$newValueChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("valueChange");
    $DvtSvgGradientUtils$$.oldValue = $DvtSvgShadowUtils$$;
    $DvtSvgGradientUtils$$.newValue = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.complete = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newChartDrillEvent$ = function $$dvt$$17$$$$EventFactory$$$newChartDrillEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$EventFactory$.$newDrillEvent$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.series = $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$.group = $DvtSvgImageFillUtils$$;
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newChartSelectionEvent$ = function $$dvt$$17$$$$EventFactory$$$newChartSelectionEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$EventFactory$.$newSelectionEvent$($DvtSvgShadowUtils$$);
    $DvtSvgShadowUtils$$.complete = $DvtSvgPatternFillUtils$$;
    $DvtSvgShadowUtils$$.xMin = $DvtSvgImageFillUtils$$;
    $DvtSvgShadowUtils$$.xMax = $DvtSvgGradientUtils$$;
    $DvtSvgShadowUtils$$.startGroup = $DvtSvgFilterUtils$$;
    $DvtSvgShadowUtils$$.endGroup = $DvtSvgFilterContext$$;
    $DvtSvgShadowUtils$$.yMin = $DvtSvgImplFactory$$;
    $DvtSvgShadowUtils$$.yMax = $DvtHtmlRichTooltipManager$$;
    $DvtSvgShadowUtils$$.y2Min = $DvtDomXmlParser$$;
    $DvtSvgShadowUtils$$.y2Max = $DvtCustomTooltipItem$$;
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newChartViewportChangeEvent$ = function $$dvt$$17$$$$EventFactory$$$newChartViewportChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$) {
    var $DvtHtmlRichTooltipManager$$ = $dvt$$17$$.$EventFactory$.$newEvent$("viewportChange");
    $DvtHtmlRichTooltipManager$$.complete = $DvtSvgShadowUtils$$;
    $DvtHtmlRichTooltipManager$$.xMin = $DvtSvgPatternFillUtils$$;
    $DvtHtmlRichTooltipManager$$.xMax = $DvtSvgImageFillUtils$$;
    $DvtHtmlRichTooltipManager$$.startGroup = $DvtSvgGradientUtils$$;
    $DvtHtmlRichTooltipManager$$.endGroup = $DvtSvgFilterUtils$$;
    $DvtHtmlRichTooltipManager$$.yMin = $DvtSvgFilterContext$$;
    $DvtHtmlRichTooltipManager$$.yMax = $DvtSvgImplFactory$$;
    return $DvtHtmlRichTooltipManager$$;
  };
  $dvt$$17$$.$EventFactory$.$newSunburstCollapseEvent$ = function $$dvt$$17$$$$EventFactory$$$newSunburstCollapseEvent$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$EventFactory$.$newEvent$("collapse", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventFactory$.$newSunburstExpandEvent$ = function $$dvt$$17$$$$EventFactory$$$newSunburstExpandEvent$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$EventFactory$.$newEvent$("expand", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$EventFactory$.$newSunburstRotationEvent$ = function $$dvt$$17$$$$EventFactory$$$newSunburstRotationEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("rotation");
    $DvtSvgImageFillUtils$$.complete = $DvtSvgPatternFillUtils$$;
    $DvtSvgImageFillUtils$$.startAngle = $DvtSvgShadowUtils$$ % 360;
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newThematicMapViewportChangeEvent$ = function $$dvt$$17$$$$EventFactory$$$newThematicMapViewportChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("viewportChange");
    $DvtSvgGradientUtils$$.panX = $DvtSvgShadowUtils$$;
    $DvtSvgGradientUtils$$.panY = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.zoom = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newTimelineViewportChangeEvent$ = function $$dvt$$17$$$$EventFactory$$$newTimelineViewportChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$17$$.$EventFactory$.$newEvent$("viewportChange");
    $DvtSvgGradientUtils$$.viewportStart = $DvtSvgShadowUtils$$;
    $DvtSvgGradientUtils$$.viewportEnd = $DvtSvgPatternFillUtils$$;
    $DvtSvgGradientUtils$$.minorAxisScale = $DvtSvgImageFillUtils$$;
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newGanttViewportChangeEvent$ = function $$dvt$$17$$$$EventFactory$$$newGanttViewportChangeEvent$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ = $dvt$$17$$.$EventFactory$.$newTimelineViewportChangeEvent$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
    $DvtSvgShadowUtils$$.majorAxisScale = $DvtSvgImageFillUtils$$;
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$EventFactory$.$newTreemapIsolateEvent$ = function $$dvt$$17$$$$EventFactory$$$newTreemapIsolateEvent$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$EventFactory$.$newEvent$("isolate", $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$ClientBehaviorEvent$ = function $$dvt$$17$$$$ClientBehaviorEvent$$($DvtSvgShadowUtils$$) {
    this.Init($dvt$$17$$.$ClientBehaviorEvent$.$TYPE$);
    this.$_clientBehavior$ = $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ClientBehaviorEvent$, $dvt$$17$$.$BaseComponentEvent$);
  $dvt$$17$$.$ClientBehaviorEvent$.$TYPE$ = "clientBehavior";
  $dvt$$17$$.$EventDispatcher$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$EventDispatcher$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$EventDispatcher$.dispatchEvent = function $$dvt$$17$$$$EventDispatcher$$dispatchEvent$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.call && $DvtSvgShadowUtils$$.call($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$ = {};
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$ToolkitUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$ToolkitUtils$.$SVG_NS$ = "http://www.w3.org/2000/svg";
  $dvt$$17$$.$ToolkitUtils$.$XLINK_NS$ = "http://www.w3.org/1999/xlink";
  $dvt$$17$$.$ToolkitUtils$.$createSvgDocument$ = function $$dvt$$17$$$$ToolkitUtils$$$createSvgDocument$$($DvtSvgShadowUtils$$) {
    var $DvtSvgPatternFillUtils$$ = document.createElementNS($dvt$$17$$.$ToolkitUtils$.$SVG_NS$, "svg");
    null != $DvtSvgShadowUtils$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "id", $DvtSvgShadowUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "width", "100%");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "height", "100%");
    $dvt$$17$$.$Agent$.$isPlatformIE$() && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$, "focusable", "false");
    return $DvtSvgPatternFillUtils$$;
  };
  $dvt$$17$$.$ToolkitUtils$.$getDragFeedback$ = function $$dvt$$17$$$$ToolkitUtils$$$getDragFeedback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$ instanceof Array || ($DvtSvgShadowUtils$$ = [$DvtSvgShadowUtils$$]);
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$DragAndDropUtils$.$getDragFeedbackBounds$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $dvt$$17$$.$ToolkitUtils$.$_getDragFeedbackSVG$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ = {};
    $DvtSvgFilterUtils$$.width = $DvtSvgImageFillUtils$$.$w$ + 2 * $dvt$$17$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$;
    $DvtSvgFilterUtils$$.height = $DvtSvgImageFillUtils$$.$h$ + 2 * $dvt$$17$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$;
    $DvtSvgGradientUtils$$ && ($DvtSvgFilterUtils$$.$svg$ = $DvtSvgGradientUtils$$);
    return $DvtSvgFilterUtils$$;
  };
  $dvt$$17$$.$ToolkitUtils$.$_getDragFeedbackSVG$ = function $$dvt$$17$$$$ToolkitUtils$$$_getDragFeedbackSVG$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$ToolkitUtils$.$createSvgDocument$("dnd"), $DvtSvgGradientUtils$$ = "translate(" + ($dvt$$17$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$ - $DvtSvgPatternFillUtils$$.x) + "," + ($dvt$$17$$.$DragSource$.$DRAG_FEEDBACK_MARGIN$ - $DvtSvgPatternFillUtils$$.y) + ")", $DvtSvgFilterUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("g");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "transform", $DvtSvgGradientUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
    for ($DvtSvgGradientUtils$$ = 0;$DvtSvgGradientUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgGradientUtils$$++) {
      var $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$[$DvtSvgGradientUtils$$], $DvtSvgImplFactory$$ = $DvtSvgFilterContext$$.$getImpl$().$getElem$().cloneNode(!0);
      $dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgImplFactory$$, "filter") && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "filter", null);
      var $DvtHtmlRichTooltipManager$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("g");
      $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgFilterUtils$$, $DvtHtmlRichTooltipManager$$);
      for (var $DvtSvgFilterContext$$ = $DvtSvgFilterContext$$.$getPathToStage$(), $DvtDomXmlParser$$ = null, $DvtCustomTooltipItem$$ = 1;$DvtCustomTooltipItem$$ < $DvtSvgFilterContext$$.length;$DvtCustomTooltipItem$$++) {
        $DvtDomXmlParser$$ ? ($DvtDomXmlParser$$ = $DvtDomXmlParser$$.clone(), $DvtDomXmlParser$$.concat($DvtSvgFilterContext$$[$DvtCustomTooltipItem$$].$getMatrix$())) : $DvtDomXmlParser$$ = $DvtSvgFilterContext$$[$DvtCustomTooltipItem$$].$getMatrix$();
      }
      $DvtDomXmlParser$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtHtmlRichTooltipManager$$, "transform", "matrix(" + $DvtDomXmlParser$$.$_a$ + "," + $DvtDomXmlParser$$.$_c$ + "," + $DvtDomXmlParser$$.$_b$ + "," + $DvtDomXmlParser$$.$_d$ + "," + $DvtDomXmlParser$$.$_tx$ + "," + $DvtDomXmlParser$$.$_ty$ + ")");
      $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtHtmlRichTooltipManager$$, $DvtSvgImplFactory$$);
    }
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$ToolkitUtils$.$addDomEventListener$ = function $$dvt$$17$$$$ToolkitUtils$$$addDomEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.addEventListener && $DvtSvgShadowUtils$$.addEventListener($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$removeDomEventListener$ = function $$dvt$$17$$$$ToolkitUtils$$$removeDomEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.removeEventListener && $DvtSvgShadowUtils$$.removeEventListener($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$appendChildElem$ = function $$dvt$$17$$$$ToolkitUtils$$$appendChildElem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $DvtSvgShadowUtils$$.appendChild($DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$getAttrNS$ = function $$dvt$$17$$$$ToolkitUtils$$$getAttrNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$.getAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$ = function $$dvt$$17$$$$ToolkitUtils$$$getAttrNullNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$.getAttributeNS(null, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$hasAttrNS$ = function $$dvt$$17$$$$ToolkitUtils$$$hasAttrNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return $DvtSvgShadowUtils$$.hasAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$hasAttrNullNS$ = function $$dvt$$17$$$$ToolkitUtils$$$hasAttrNullNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $dvt$$17$$.$ToolkitUtils$.$hasAttrNS$($DvtSvgShadowUtils$$, null, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$setAttrNS$ = function $$dvt$$17$$$$ToolkitUtils$$$setAttrNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    null != $DvtSvgFilterUtils$$ && $DvtSvgGradientUtils$$ == $DvtSvgFilterUtils$$ ? $dvt$$17$$.$ToolkitUtils$.$hasAttrNS$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) && ($dvt$$17$$.$Agent$.$isPlatformIE$() && 10 >= $dvt$$17$$.$Agent$.$getVersion$() || $dvt$$17$$.$Agent$.$isBrowserChrome$() && !$dvt$$17$$.$Agent$.$isEnvironmentTest$() && 34 <= $dvt$$17$$.$Agent$.$getVersion$() && "text" == $DvtSvgShadowUtils$$.nodeName && ("x" == $DvtSvgImageFillUtils$$ || "y" == $DvtSvgImageFillUtils$$) ? 
    $DvtSvgShadowUtils$$.setAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) : $dvt$$17$$.$ToolkitUtils$.$removeAttrNS$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$)) : $DvtSvgShadowUtils$$.setAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$ = function $$dvt$$17$$$$ToolkitUtils$$$setAttrNullNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    $dvt$$17$$.$ToolkitUtils$.$setAttrNS$($DvtSvgShadowUtils$$, null, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$removeAttrNS$ = function $$dvt$$17$$$$ToolkitUtils$$$removeAttrNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $dvt$$17$$.$ToolkitUtils$.$hasAttrNS$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) && $DvtSvgShadowUtils$$.removeAttributeNS($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$removeAttrNullNS$ = function $$dvt$$17$$$$ToolkitUtils$$$removeAttrNullNS$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    $dvt$$17$$.$ToolkitUtils$.$removeAttrNS$($DvtSvgShadowUtils$$, null, $DvtSvgPatternFillUtils$$);
  };
  $dvt$$17$$.$ToolkitUtils$.$getLinkCallback$ = function $$dvt$$17$$$$ToolkitUtils$$$getLinkCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    return $DvtSvgShadowUtils$$ || $DvtSvgPatternFillUtils$$ ? function() {
      if (null == $DvtSvgShadowUtils$$) {
        self.location = $DvtSvgPatternFillUtils$$;
      } else {
        var $DvtSvgImageFillUtils$$ = window.open($DvtSvgPatternFillUtils$$, $DvtSvgShadowUtils$$);
        $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.focus();
      }
    } : null;
  };
  $dvt$$17$$.$ToolkitUtils$.$roundDecimal$ = function $$dvt$$17$$$$ToolkitUtils$$$roundDecimal$$($DvtSvgShadowUtils$$) {
    return $dvt$$17$$.$Agent$.$isEnvironmentTest$() ? Math.round(1E3 * $DvtSvgShadowUtils$$) / 1E3 : $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ToolkitUtils$.$getUrlPathById$ = function $$dvt$$17$$$$ToolkitUtils$$$getUrlPathById$$($DvtSvgShadowUtils$$) {
    return (($dvt$$17$$.$Agent$.$isPlatformIE$() ? null != document.querySelector("base") : document.URL != document.baseURI) ? document.URL.split("#")[0] + "#" : "#") + $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$ToolkitUtils$.$getUrlById$ = function $$dvt$$17$$$$ToolkitUtils$$$getUrlById$$($DvtSvgShadowUtils$$) {
    return "url(" + $dvt$$17$$.$ToolkitUtils$.$getUrlPathById$($DvtSvgShadowUtils$$) + ")";
  };
  $dvt$$17$$.$ToolkitUtils$.$setSvgSize$ = function $$dvt$$17$$$$ToolkitUtils$$$setSvgSize$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$_root$;
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "width", $DvtSvgPatternFillUtils$$ + "px");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "height", $DvtSvgImageFillUtils$$ + "px");
  };
  $dvt$$17$$.$ToolkitUtils$.$getOuterDivSize$ = function $$dvt$$17$$$$ToolkitUtils$$$getOuterDivSize$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = window.getComputedStyle($DvtSvgShadowUtils$$.$_root$.parentNode);
    return new $dvt$$17$$.$Dimension$(parseFloat($DvtSvgShadowUtils$$.width), parseFloat($DvtSvgShadowUtils$$.height));
  };
  $dvt$$17$$.$ToolkitUtils$.$getJQueryEvent$ = function $$dvt$$17$$$$ToolkitUtils$$$getJQueryEvent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getNativeEvent$();
    if ($) {
      var $DvtSvgPatternFillUtils$$ = $.event.fix($DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.dataTransfer = $DvtSvgShadowUtils$$.dataTransfer;
      return $DvtSvgPatternFillUtils$$;
    }
    return $DvtSvgShadowUtils$$;
  };
  $dvt$$17$$.$Bundle$.$addDefaultStrings$($dvt$$17$$.$Bundle$.$UTIL_PREFIX$, {SCALING_SUFFIX_THOUSAND:"K", SCALING_SUFFIX_MILLION:"M", SCALING_SUFFIX_BILLION:"B", SCALING_SUFFIX_TRILLION:"T", SCALING_SUFFIX_QUADRILLION:"Q", NUMBER_FORMAT_DECIMAL_SEPARATOR:".", NUMBER_FORMAT_GROUPING_SEPARATOR:",", NUMBER_FORMAT_GROUPING_SIZE:3, MONTH_JANUARY:"January", MONTH_FEBRUARY:"February", MONTH_MARCH:"March", MONTH_APRIL:"April", MONTH_MAY:"May", MONTH_JUNE:"June", MONTH_JULY:"July", MONTH_AUGUST:"August", 
  MONTH_SEPTEMBER:"September", MONTH_OCTOBER:"October", MONTH_NOVEMBER:"November", MONTH_DECEMBER:"December", MONTH_SHORT_JANUARY:"Jan", MONTH_SHORT_FEBRUARY:"Feb", MONTH_SHORT_MARCH:"Mar", MONTH_SHORT_APRIL:"Apr", MONTH_SHORT_MAY:"May", MONTH_SHORT_JUNE:"Jun", MONTH_SHORT_JULY:"Jul", MONTH_SHORT_AUGUST:"Aug", MONTH_SHORT_SEPTEMBER:"Sep", MONTH_SHORT_OCTOBER:"Oct", MONTH_SHORT_NOVEMBER:"Nov", MONTH_SHORT_DECEMBER:"Dec", DAY_MONDAY:"Monday", DAY_TUESDAY:"Tuesday", DAY_WEDNESDAY:"Wednesday", DAY_THURSDAY:"Thursday", 
  DAY_FRIDAY:"Friday", DAY_SATURDAY:"Saturday", DAY_SUNDAY:"Sunday", DAY_SHORT_MONDAY:"Mon", DAY_SHORT_TUESDAY:"Tue", DAY_SHORT_WEDNESDAY:"Wed", DAY_SHORT_THURSDAY:"Thu", DAY_SHORT_FRIDAY:"Fri", DAY_SHORT_SATURDAY:"Sat", DAY_SHORT_SUNDAY:"Sun", TIME_AM:"AM", TIME_PM:"PM", DURATION_DAYS:"{0} days", DURATION_HOURS:"{0} hours", ROW_INFO:"Row {0}", TASK_INFO:"Start time is {0}, end time is {1}, duration is {2}", MILESTONE_INFO:"Time is {0}", INVALID_DATA:"Invalid data", NO_DATA:"No data to display", 
  CLEAR_SELECTION:"Clear Selection", EXPAND:"Expand", COLLAPSE:"Collapse", DATA_VISUALIZATION:"Data Visualization", STATE_SELECTED:"Selected", STATE_UNSELECTED:"Unselected", STATE_MAXIMIZED:"Maximized", STATE_MINIMIZED:"Minimized", STATE_EXPANDED:"Expanded", STATE_COLLAPSED:"Collapsed", STATE_ISOLATED:"Isolated", STATE_HIDDEN:"Hidden", STATE_VISIBLE:"Visible", STATE_DRILLABLE:"Drillable", ARIA_LABEL_STATE_DELIMITER:", ", ARIA_LABEL_DESC_DELIMITER:". ", COLON_SEP_LIST:"{0}: {1}", COUNT_WITH_TOTAL:"{0} of {1}", 
  ZOOM_IN:"Zoom In", ZOOM_OUT:"Zoom Out", CHART:"Chart", DIAGRAM:"Diagram", GANTT:"Gantt", GAUGE:"Gauge", HIERARCHY_VIEWER:"Hierarchy Viewer", LEGEND:"Legend", NBOX:"{0} Box", PICTOCHART:"Picture Chart", SUNBURST:"Sunburst", TAG_CLOUD:"Tag Cloud", THEMATIC_MAP:"Thematic Map", TIME_AXIS:"Time Axis", TIMELINE:"Timeline", TIMELINE_SERIES:"Series", TREEMAP:"Treemap"});
  $dvt$$17$$.$SvgDocumentUtils$ = function $$dvt$$17$$$$SvgDocumentUtils$$() {
  };
  $dvt$$17$$.$Obj$.$createSubclass$($dvt$$17$$.$SvgDocumentUtils$, $dvt$$17$$.$Obj$);
  $dvt$$17$$.$SvgDocumentUtils$.elementFromPoint = function $$dvt$$17$$$$SvgDocumentUtils$$elementFromPoint$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = document.elementFromPoint($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);$DvtSvgImageFillUtils$$;) {
      if ($DvtSvgImageFillUtils$$.$_obj$ && $DvtSvgImageFillUtils$$.$_obj$.$getObj$ && $DvtSvgImageFillUtils$$.$_obj$.$getObj$()) {
        return $DvtSvgImageFillUtils$$.$_obj$.$getObj$();
      }
      $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.parentNode;
    }
    return null;
  };
  $dvt$$17$$.$SvgDocumentUtils$.$elementFromTouch$ = function $$dvt$$17$$$$SvgDocumentUtils$$$elementFromTouch$$($DvtSvgShadowUtils$$) {
    return this.elementFromPoint($DvtSvgShadowUtils$$.clientX, $DvtSvgShadowUtils$$.clientY);
  };
  $dvt$$17$$.$SvgDocumentUtils$.$isFilterSupported$ = function $$dvt$$17$$$$SvgDocumentUtils$$$isFilterSupported$$() {
    return !($dvt$$17$$.$Agent$.$isPlatformIE$() && 10 > $dvt$$17$$.$Agent$.$getVersion$()) && !($dvt$$17$$.$Agent$.$isBrowserSafari$() && 536 > $dvt$$17$$.$Agent$.$getVersion$()) && !($dvt$$17$$.$Agent$.$isTouchDevice$() && !$dvt$$17$$.$Agent$.$isBrowserSafari$());
  };
  $dvt$$17$$.$SvgDocumentUtils$.$isEventAvailableOutsideClip$ = function $$dvt$$17$$$$SvgDocumentUtils$$$isEventAvailableOutsideClip$$() {
    return $dvt$$17$$.$Agent$.$isBrowserSafari$();
  };
  $dvt$$17$$.$SvgDocumentUtils$.$isFilterStraightLineAdjustmentNeeded$ = function $$dvt$$17$$$$SvgDocumentUtils$$$isFilterStraightLineAdjustmentNeeded$$() {
    return $dvt$$17$$.$Agent$.$isPlatformGecko$();
  };
  $dvt$$17$$.$SvgDocumentUtils$.$fixGeckoContainerForFilter$ = function $$dvt$$17$$$$SvgDocumentUtils$$$fixGeckoContainerForFilter$$($DvtSvgShadowUtils$$) {
    if ($DvtSvgShadowUtils$$ && $dvt$$17$$.$Agent$.$isPlatformGecko$() && ($DvtSvgShadowUtils$$ = $DvtSvgShadowUtils$$.$getImpl$().$getElem$())) {
      var $DvtSvgPatternFillUtils$$ = $dvt$$17$$.$ToolkitUtils$.$getAttrNullNS$($DvtSvgShadowUtils$$, "transform");
      $DvtSvgPatternFillUtils$$ || ($DvtSvgPatternFillUtils$$ = "matrix(1 0 0 1 0 0)");
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgShadowUtils$$, "transform", $DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$SvgDocumentUtils$.$cancelDomEvent$ = function $$dvt$$17$$$$SvgDocumentUtils$$$cancelDomEvent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ && ($DvtSvgShadowUtils$$.stopPropagation && $DvtSvgShadowUtils$$.stopPropagation(), $DvtSvgShadowUtils$$.preventDefault && $DvtSvgShadowUtils$$.preventDefault(), $DvtSvgShadowUtils$$.cancelBubble = !0, $DvtSvgShadowUtils$$.cancel = !0, $DvtSvgShadowUtils$$.returnValue = !1);
  };
  $dvt$$17$$.$SvgDocumentUtils$.$addDragListeners$ = function $$dvt$$17$$$$SvgDocumentUtils$$$addDragListeners$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$) {
    function $DvtSvgImplFactory$$($DvtSvgShadowUtils$$) {
      $DvtSvgShadowUtils$$.stopPropagation();
    }
    function $DvtHtmlRichTooltipManager$$($DvtSvgShadowUtils$$) {
      $DvtCustomTooltipItem$$ ? (document.removeEventListener("touchmove", $DvtCustomTooltipEventHandler$$, !0), document.removeEventListener("touchend", $DvtHtmlRichTooltipManager$$, !0)) : (document.removeEventListener("mousemove", $DvtCustomTooltipEventHandler$$, !0), document.removeEventListener("mouseup", $DvtHtmlRichTooltipManager$$, !0), $DvtCustomTooltipItem$$ || setTimeout(function() {
        document.removeEventListener("click", $DvtSvgImplFactory$$, !0);
      }, 50));
      $DvtPolygonalShape$$.webkitUserSelect = $dvt$$17$$.$SvgDocumentUtils$.$_webkitUserSelect$;
      $DvtPolygonalShape$$.MozUserSelect = $dvt$$17$$.$SvgDocumentUtils$.$_mozUserSelect$;
      $DvtSvgShadowUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgShadowUtils$$, $DvtContextMenuTooltipItem$$);
      $DvtSvgGradientUtils$$.call($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$);
    }
    function $DvtDomXmlParser$$($DvtSvgShadowUtils$$) {
      $DvtSvgPatternFillUtils$$.call($DvtSvgFilterUtils$$, $DvtSvgShadowUtils$$) && ($DvtCustomTooltipItem$$ ? (document.addEventListener("touchmove", $DvtCustomTooltipEventHandler$$, !0), document.addEventListener("touchend", $DvtHtmlRichTooltipManager$$, !0)) : (document.addEventListener("mousemove", $DvtCustomTooltipEventHandler$$, !0), document.addEventListener("mouseup", $DvtHtmlRichTooltipManager$$, !0), $DvtSvgFilterContext$$ && document.addEventListener("click", $DvtSvgImplFactory$$, !0)), 
      $dvt$$17$$.$SvgDocumentUtils$.$_webkitUserSelect$ = $DvtPolygonalShape$$.webkitUserSelect, $dvt$$17$$.$SvgDocumentUtils$.$_mozUserSelect$ = $DvtPolygonalShape$$.MozUserSelect, $DvtPolygonalShape$$.webkitUserSelect = "none", $DvtPolygonalShape$$.MozUserSelect = "none");
    }
    var $DvtCustomTooltipItem$$ = $dvt$$17$$.$Agent$.$isTouchDevice$(), $DvtContextMenuTooltipItem$$ = $DvtSvgShadowUtils$$.$getCtx$(), $DvtPolygonalShape$$ = $dvt$$17$$.$Agent$.$isEnvironmentBrowser$() ? document.body.style : {}, $DvtCustomTooltipEventHandler$$ = $dvt$$17$$.$SvgDocumentUtils$.$createStaticCallback$($DvtContextMenuTooltipItem$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
    $DvtCustomTooltipItem$$ ? $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.TouchEvent.$TOUCHSTART$, $DvtDomXmlParser$$) : $DvtSvgShadowUtils$$.$addEvtListener$($dvt$$17$$.MouseEvent.$MOUSEDOWN$, $DvtDomXmlParser$$);
    return function() {
      $DvtCustomTooltipItem$$ ? (document.removeEventListener("touchmove", $DvtCustomTooltipEventHandler$$, !0), document.removeEventListener("touchend", $DvtHtmlRichTooltipManager$$, !0)) : (document.removeEventListener("mousemove", $DvtCustomTooltipEventHandler$$, !0), document.removeEventListener("mouseup", $DvtHtmlRichTooltipManager$$, !0), document.removeEventListener("click", $DvtSvgImplFactory$$, !0));
      $DvtPolygonalShape$$.webkitUserSelect = $dvt$$17$$.$SvgDocumentUtils$.$_webkitUserSelect$;
      $DvtPolygonalShape$$.MozUserSelect = $dvt$$17$$.$SvgDocumentUtils$.$_mozUserSelect$;
    };
  };
  $dvt$$17$$.$SvgDocumentUtils$.$createStaticCallback$ = function $$dvt$$17$$$$SvgDocumentUtils$$$createStaticCallback$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return function($DvtSvgGradientUtils$$) {
      $DvtSvgGradientUtils$$ = $dvt$$17$$.$DomEventFactory$.$newEvent$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$);
      $DvtSvgPatternFillUtils$$.call($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    };
  };
  $dvt$$17$$.$SvgDocumentUtils$.$disableMouseEvents$ = function $$dvt$$17$$$$SvgDocumentUtils$$$disableMouseEvents$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.style && ($DvtSvgShadowUtils$$.style.pointerEvents = "none");
    if ($DvtSvgShadowUtils$$.childNodes) {
      for (var $DvtSvgPatternFillUtils$$ = 0;$DvtSvgPatternFillUtils$$ < $DvtSvgShadowUtils$$.childNodes.length;$DvtSvgPatternFillUtils$$++) {
        $dvt$$17$$.$SvgDocumentUtils$.$disableMouseEvents$($DvtSvgShadowUtils$$.childNodes[$DvtSvgPatternFillUtils$$]);
      }
    }
  };
  var $DvtSvgImageLoader$$ = {$_cache$:{}};
  $dvt$$17$$.$Obj$.$createSubclass$($DvtSvgImageLoader$$, $dvt$$17$$.$Obj$);
  $DvtSvgImageLoader$$.$addBubbleEventListener$ = function $$DvtSvgImageLoader$$$$addBubbleEventListener$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    return window.addEventListener ? ($dvt$$17$$.$ToolkitUtils$.$addDomEventListener$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, !1), !0) : window.attachEvent ? ($DvtSvgShadowUtils$$.attachEvent("on" + $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$), !0) : !1;
  };
  $DvtSvgImageLoader$$.$loadImage$ = function $$DvtSvgImageLoader$$$$loadImage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = this.$_cache$[$DvtSvgShadowUtils$$];
    if ($DvtSvgImageFillUtils$$) {
      if ($DvtSvgImageFillUtils$$.$_image$) {
        $DvtSvgImageLoader$$.$_addListenerToQueue$($DvtSvgImageFillUtils$$.$_listeners$, $DvtSvgPatternFillUtils$$);
      } else {
        return $DvtSvgPatternFillUtils$$ && $DvtSvgPatternFillUtils$$($DvtSvgImageFillUtils$$), $DvtSvgImageFillUtils$$;
      }
    } else {
      this.$loadNewImage$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
    }
    return null;
  };
  $DvtSvgImageLoader$$.$loadNewImage$ = function $$DvtSvgImageLoader$$$$loadNewImage$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = document.createElement("img"), $DvtSvgGradientUtils$$ = {$_listeners$:[], url:$DvtSvgShadowUtils$$, $_image$:$DvtSvgImageFillUtils$$};
    $DvtSvgPatternFillUtils$$ && $DvtSvgImageLoader$$.$_addListenerToQueue$($DvtSvgGradientUtils$$.$_listeners$, $DvtSvgPatternFillUtils$$);
    this.$_cache$[$DvtSvgShadowUtils$$] = $DvtSvgGradientUtils$$;
    $DvtSvgImageLoader$$.$addBubbleEventListener$($DvtSvgImageFillUtils$$, "load", function() {
      $DvtSvgGradientUtils$$.width = $DvtSvgImageFillUtils$$.width;
      $DvtSvgGradientUtils$$.height = $DvtSvgImageFillUtils$$.height;
      delete $DvtSvgGradientUtils$$.$_image$;
      var $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$ = $DvtSvgGradientUtils$$.$_listeners$.length;
      for ($DvtSvgShadowUtils$$ = 0;$DvtSvgShadowUtils$$ < $DvtSvgPatternFillUtils$$;$DvtSvgShadowUtils$$++) {
        if ($DvtSvgGradientUtils$$.$_listeners$[$DvtSvgShadowUtils$$]) {
          $DvtSvgGradientUtils$$.$_listeners$[$DvtSvgShadowUtils$$]($DvtSvgGradientUtils$$);
        }
      }
      delete $DvtSvgGradientUtils$$.$_listeners$;
    });
    $DvtSvgImageFillUtils$$.src = $DvtSvgShadowUtils$$;
  };
  $DvtSvgImageLoader$$.$_addListenerToQueue$ = function $$DvtSvgImageLoader$$$$_addListenerToQueue$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    if ($DvtSvgPatternFillUtils$$) {
      for (var $DvtSvgImageFillUtils$$ = 0;$DvtSvgImageFillUtils$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImageFillUtils$$++) {
        if ($DvtSvgShadowUtils$$[$DvtSvgImageFillUtils$$] === $DvtSvgPatternFillUtils$$) {
          return;
        }
      }
      $DvtSvgShadowUtils$$.push($DvtSvgPatternFillUtils$$);
    }
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtHtmlRichTooltipManager$$, $dvt$$17$$.$HtmlTooltipManager$);
  $DvtHtmlRichTooltipManager$$.prototype.Init = function $$DvtHtmlRichTooltipManager$$$$Init$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    this.$_storedContexts$ = {};
    $DvtHtmlRichTooltipManager$$.$superclass$.Init.call(this, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$);
  };
  $DvtHtmlRichTooltipManager$$.prototype.$InitContent$ = function $$DvtHtmlRichTooltipManager$$$$$InitContent$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$.innerHTML = "";
    $DvtSvgShadowUtils$$ = new $dvt$$17$$.$Context$($DvtSvgShadowUtils$$, "DvtCustomTooltip");
    this.$_storedContexts$[this.$_domElementId$] = $DvtSvgShadowUtils$$;
  };
  $DvtHtmlRichTooltipManager$$.prototype.$GetStoredContext$ = function $$DvtHtmlRichTooltipManager$$$$$GetStoredContext$$() {
    return this.$_storedContexts$[this.$_domElementId$];
  };
  $DvtHtmlRichTooltipManager$$.prototype.$showRichElement$ = function $$DvtHtmlRichTooltipManager$$$$$showRichElement$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    this.$showRichElementAtPosition$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
  };
  $DvtHtmlRichTooltipManager$$.prototype.$showRichElementAtPosition$ = function $$DvtHtmlRichTooltipManager$$$$$showRichElementAtPosition$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = this.$getTooltipElem$();
    $DvtSvgGradientUtils$$.style.position = "absolute";
    $DvtSvgGradientUtils$$.style.zIndex = 2147483647;
    var $DvtSvgFilterUtils$$ = this.$GetStoredContext$();
    $DvtSvgFilterUtils$$ && ($DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.$_stage$, $DvtSvgFilterUtils$$.$removeChildren$(), $DvtSvgFilterUtils$$.$addChild$($DvtSvgImageFillUtils$$.$getRootDisplayable$()), $DvtSvgImageFillUtils$$ && $DvtSvgImageFillUtils$$.$Render$ && $DvtSvgImageFillUtils$$.$Render$(), $DvtSvgFilterUtils$$ = $DvtSvgFilterUtils$$.$getImpl$().$_SVGRoot$, $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "width", $DvtSvgImageFillUtils$$.$_displayWidth$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, 
    "height", $DvtSvgImageFillUtils$$.$_displayHeight$), this.$PostElement$($DvtSvgGradientUtils$$, $DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$, !1, !0));
  };
  $DvtHtmlRichTooltipManager$$.prototype.$hideTooltip$ = function $$DvtHtmlRichTooltipManager$$$$$hideTooltip$$() {
    $DvtHtmlRichTooltipManager$$.$superclass$.$hideTooltip$.call(this);
    var $DvtSvgShadowUtils$$ = this.$GetStoredContext$();
    $DvtSvgShadowUtils$$ && $DvtSvgShadowUtils$$.$_stage$.$removeChildren$();
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtSvgImplFactory$$, $dvt$$17$$.$Obj$);
  $DvtSvgImplFactory$$.prototype.$newDefs$ = function $$DvtSvgImplFactory$$$$$newDefs$$() {
    return $dvt$$17$$.$SvgShapeUtils$.createElement("defs");
  };
  $DvtSvgImplFactory$$.prototype.$getImageLoader$ = function $$DvtSvgImplFactory$$$$$getImageLoader$$() {
    return $dvt$$17$$.$Agent$.$isEnvironmentBrowser$() ? $DvtSvgImageLoader$$ : $dvt$$17$$.$JavaImageLoader$;
  };
  $DvtSvgImplFactory$$.prototype.$getDocumentUtils$ = function $$DvtSvgImplFactory$$$$$getDocumentUtils$$() {
    return $dvt$$17$$.$SvgDocumentUtils$;
  };
  $DvtSvgImplFactory$$.prototype.$newParser$ = function $$DvtSvgImplFactory$$$$$newParser$$() {
    return $dvt$$17$$.$Agent$.$isEnvironmentBrowser$() ? new $DvtDomXmlParser$$ : new $DvtJavaXmlParser$$;
  };
  $DvtSvgImplFactory$$.prototype.$newTooltipManager$ = function $$DvtSvgImplFactory$$$$$newTooltipManager$$($DvtSvgShadowUtils$$) {
    return new $dvt$$17$$.$HtmlTooltipManager$(this.$_context$, $DvtSvgShadowUtils$$);
  };
  $DvtSvgImplFactory$$.prototype.$newRichTooltipManager$ = function $$DvtSvgImplFactory$$$$$newRichTooltipManager$$($DvtSvgShadowUtils$$) {
    return new $DvtHtmlRichTooltipManager$$(this.$_context$, $DvtSvgShadowUtils$$);
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtSvgFilterContext$$, $dvt$$17$$.$Obj$);
  $DvtSvgFilterContext$$.prototype.Init = function $$DvtSvgFilterContext$$$$Init$() {
    this.$_regionPctRect$ = new $dvt$$17$$.$Rectangle$(-10, -10, 120, 120);
    this.$_counter$ = 0;
    this.$_resultIdsUnder$ = [];
    this.$_resultIdsOver$ = [];
  };
  $DvtSvgFilterContext$$.prototype.$createResultId$ = function $$DvtSvgFilterContext$$$$$createResultId$$($DvtSvgShadowUtils$$) {
    $DvtSvgShadowUtils$$ || ($DvtSvgShadowUtils$$ = "filtRes");
    return $DvtSvgShadowUtils$$ + this.$_counter$++;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtSvgFilterUtils$$, $dvt$$17$$.$Obj$);
  $DvtSvgFilterUtils$$.$_counter$ = 0;
  $DvtSvgFilterUtils$$.$createFilter$ = function $$DvtSvgFilterUtils$$$$createFilter$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    for (var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("filter", $DvtSvgFilterUtils$$.$CreateFilterId$()), $DvtSvgGradientUtils$$ = new $DvtSvgFilterContext$$, $DvtSvgImplFactory$$ = 0;$DvtSvgImplFactory$$ < $DvtSvgShadowUtils$$.length;$DvtSvgImplFactory$$++) {
      var $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$[$DvtSvgImplFactory$$];
      $DvtHtmlRichTooltipManager$$ && $DvtSvgFilterUtils$$.$CreateFilterPrimitives$($DvtSvgImageFillUtils$$, $DvtHtmlRichTooltipManager$$, $DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
    }
    var $DvtDomXmlParser$$ = !1;
    if ($DvtSvgPatternFillUtils$$) {
      var $DvtCustomTooltipItem$$ = $DvtSvgPatternFillUtils$$.$getElem$().getBBox();
      if ($DvtCustomTooltipItem$$ && ($DvtSvgImplFactory$$ = $DvtCustomTooltipItem$$.width, $DvtHtmlRichTooltipManager$$ = $DvtCustomTooltipItem$$.height, 0 == $DvtHtmlRichTooltipManager$$ || 0 == $DvtSvgImplFactory$$)) {
        var $DvtContextMenuTooltipItem$$;
        $DvtSvgPatternFillUtils$$.$getStroke$ && ($DvtContextMenuTooltipItem$$ = $DvtSvgPatternFillUtils$$.$getStroke$());
        $DvtDomXmlParser$$ = 10;
        $DvtContextMenuTooltipItem$$ && ($DvtDomXmlParser$$ = $DvtContextMenuTooltipItem$$.getWidth());
        $DvtContextMenuTooltipItem$$ = $DvtCustomTooltipItem$$.x;
        $DvtCustomTooltipItem$$ = $DvtCustomTooltipItem$$.y;
        if ($dvt$$17$$.$SvgDocumentUtils$.$isFilterStraightLineAdjustmentNeeded$() && $DvtSvgPatternFillUtils$$ instanceof $dvt$$17$$.$Polyline$) {
          var $DvtPolygonalShape$$ = $dvt$$17$$.$ArrayUtils$.copy($DvtSvgPatternFillUtils$$.$getPoints$());
          0 == $DvtSvgImplFactory$$ && ($DvtPolygonalShape$$[0] += .01);
          0 == $DvtHtmlRichTooltipManager$$ && ($DvtPolygonalShape$$[1] += .01);
          $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgPatternFillUtils$$.$getElem$(), "points", $dvt$$17$$.$SvgShapeUtils$.$convertPointsArray$($DvtPolygonalShape$$));
        }
        0 == $DvtHtmlRichTooltipManager$$ && ($DvtHtmlRichTooltipManager$$ = 2 * $DvtDomXmlParser$$, $DvtCustomTooltipItem$$ -= $DvtDomXmlParser$$);
        0 == $DvtSvgImplFactory$$ && ($DvtSvgImplFactory$$ = 2 * $DvtDomXmlParser$$, $DvtContextMenuTooltipItem$$ -= $DvtDomXmlParser$$);
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "x", $DvtContextMenuTooltipItem$$);
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "y", $DvtCustomTooltipItem$$);
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "width", $DvtSvgImplFactory$$);
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "height", $DvtHtmlRichTooltipManager$$);
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "filterUnits", "userSpaceOnUse");
        $DvtDomXmlParser$$ = !0;
      }
    }
    $DvtDomXmlParser$$ || (-10 != $DvtSvgGradientUtils$$.$_regionPctRect$.x && "Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.x && "-Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.x && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "x", $DvtSvgGradientUtils$$.$_regionPctRect$.x + "%"), -10 != $DvtSvgGradientUtils$$.$_regionPctRect$.y && "Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.y && "-Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.y && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, 
    "y", $DvtSvgGradientUtils$$.$_regionPctRect$.y + "%"), 120 != $DvtSvgGradientUtils$$.$_regionPctRect$.$w$ && "Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.$w$ && "-Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.$w$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "width", $DvtSvgGradientUtils$$.$_regionPctRect$.$w$ + "%"), 120 != $DvtSvgGradientUtils$$.$_regionPctRect$.$h$ && "Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.$h$ && "-Infinity" != $DvtSvgGradientUtils$$.$_regionPctRect$.$h$ && 
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "height", $DvtSvgGradientUtils$$.$_regionPctRect$.$h$ + "%"));
    $DvtSvgImplFactory$$ = $DvtSvgGradientUtils$$.$_resultIdsUnder$.length;
    $DvtHtmlRichTooltipManager$$ = $DvtSvgGradientUtils$$.$_resultIdsOver$.length;
    $DvtCustomTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feMerge");
    if (0 < $DvtSvgImplFactory$$) {
      for ($DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtSvgImplFactory$$;$DvtDomXmlParser$$++) {
        $DvtContextMenuTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feMergeNode"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "in", $DvtSvgGradientUtils$$.$_resultIdsUnder$[$DvtDomXmlParser$$]), $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtCustomTooltipItem$$, $DvtContextMenuTooltipItem$$);
      }
    }
    $DvtContextMenuTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feMergeNode");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "in", "SourceGraphic");
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtCustomTooltipItem$$, $DvtContextMenuTooltipItem$$);
    if (0 < $DvtHtmlRichTooltipManager$$) {
      for ($DvtDomXmlParser$$ = 0;$DvtDomXmlParser$$ < $DvtHtmlRichTooltipManager$$;$DvtDomXmlParser$$++) {
        $DvtContextMenuTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feMergeNode"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "in", $DvtSvgGradientUtils$$.$_resultIdsOver$[$DvtDomXmlParser$$]), $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtCustomTooltipItem$$, $DvtContextMenuTooltipItem$$);
      }
    }
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtCustomTooltipItem$$);
    return $DvtSvgImageFillUtils$$;
  };
  $DvtSvgFilterUtils$$.$CreateFilterPrimitives$ = function $$DvtSvgFilterUtils$$$$CreateFilterPrimitives$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgImageFillUtils$$ instanceof $dvt$$17$$.$Shadow$ && $DvtSvgShadowUtils$$.$createFilterPrimitives$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $DvtSvgFilterUtils$$.$CreateFilterId$ = function $$DvtSvgFilterUtils$$$$CreateFilterId$$() {
    return "filt" + $DvtSvgFilterUtils$$.$_counter$++;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtSvgGradientUtils$$, $dvt$$17$$.$Obj$);
  $DvtSvgGradientUtils$$.$createElem$ = function $$DvtSvgGradientUtils$$$$createElem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$LinearGradientFill$ || $DvtSvgShadowUtils$$ instanceof $dvt$$17$$.$LinearGradientStroke$, $DvtSvgGradientUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement($DvtSvgImageFillUtils$$ ? "linearGradient" : "radialGradient", $DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.$_arColors$, $DvtSvgImplFactory$$ = $DvtSvgShadowUtils$$.$_arAlphas$, $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$.$_arStops$, 
    $DvtDomXmlParser$$ = $DvtSvgShadowUtils$$.$getBounds$(), $DvtCustomTooltipItem$$ = $DvtSvgFilterContext$$.length;
    for ($DvtSvgFilterUtils$$ = 0;$DvtSvgFilterUtils$$ < $DvtCustomTooltipItem$$;$DvtSvgFilterUtils$$++) {
      var $DvtContextMenuTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("stop");
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "offset", "" + 100 * $DvtHtmlRichTooltipManager$$[$DvtSvgFilterUtils$$] + "%");
      var $DvtPolygonalShape$$ = $DvtSvgFilterContext$$[$DvtSvgFilterUtils$$];
      if ($DvtPolygonalShape$$) {
        var $DvtCustomTooltipEventHandler$$ = $DvtSvgImplFactory$$[$DvtSvgFilterUtils$$];
        ($dvt$$17$$.$Agent$.$isEnvironmentBatik$() || $dvt$$17$$.$Agent$.$isBrowserSafari$()) && -1 !== $DvtPolygonalShape$$.indexOf("rgba") ? ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stop-color", $dvt$$17$$.$ColorUtils$.$getRGB$($DvtPolygonalShape$$)), null != $DvtCustomTooltipEventHandler$$ ? $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stop-opacity", $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtPolygonalShape$$) * $DvtCustomTooltipEventHandler$$, 
        1) : $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stop-opacity", $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtPolygonalShape$$), 1)) : ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stop-color", $DvtPolygonalShape$$), null != $DvtCustomTooltipEventHandler$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtContextMenuTooltipItem$$, "stop-opacity", $DvtCustomTooltipEventHandler$$, 1));
      }
      $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgGradientUtils$$, $DvtContextMenuTooltipItem$$);
    }
    $DvtContextMenuTooltipItem$$ = !$DvtDomXmlParser$$ || 0 == $DvtDomXmlParser$$[0] && 0 == $DvtDomXmlParser$$[1] && 0 == $DvtDomXmlParser$$[2] && 0 == $DvtDomXmlParser$$[3];
    if ($DvtSvgImageFillUtils$$) {
      $DvtCustomTooltipItem$$ = $DvtSvgShadowUtils$$.$getAngle$();
      $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$ = "0%";
      $DvtSvgFilterContext$$ = "100%";
      $DvtSvgImplFactory$$ = "0%";
      $DvtHtmlRichTooltipManager$$ = !0;
      if ($DvtContextMenuTooltipItem$$) {
        45 === $DvtCustomTooltipItem$$ ? $DvtSvgFilterContext$$ = $DvtSvgFilterUtils$$ = "100%" : 90 === $DvtCustomTooltipItem$$ ? ($DvtSvgFilterUtils$$ = "100%", $DvtSvgFilterContext$$ = "0%") : 135 === $DvtCustomTooltipItem$$ ? ($DvtSvgImageFillUtils$$ = "100%", $DvtSvgFilterContext$$ = "0%", $DvtSvgImplFactory$$ = "100%") : 270 === $DvtCustomTooltipItem$$ ? ($DvtSvgFilterContext$$ = "0%", $DvtSvgImplFactory$$ = "100%") : 0 !== $DvtCustomTooltipItem$$ && ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, 
        "gradientTransform", "rotate(" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(-$DvtCustomTooltipItem$$) + " .5 .5)"), $DvtHtmlRichTooltipManager$$ = !1);
      } else {
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "gradientUnits", "userSpaceOnUse");
        $DvtSvgImageFillUtils$$ = "0";
        $DvtSvgFilterUtils$$ = "0.5";
        var $DvtSvgFilterContext$$ = "1", $DvtSvgImplFactory$$ = "0.5", $DvtPolygonalShape$$ = $DvtDomXmlParser$$[2], $DvtCustomTooltipEventHandler$$ = $DvtDomXmlParser$$[3], $DvtContextMenuTooltipItem$$ = $DvtDomXmlParser$$[0], $DvtDomXmlParser$$ = $DvtDomXmlParser$$[1], $DvtCustomTooltip$$ = "translate(" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtContextMenuTooltipItem$$) + " " + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtDomXmlParser$$) + ")", $DvtCustomTooltipItem$$ = "scale(" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtPolygonalShape$$) + 
        " " + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$($DvtCustomTooltipEventHandler$$) + ") " + ("rotate(" + $dvt$$17$$.$ToolkitUtils$.$roundDecimal$(-$DvtCustomTooltipItem$$) + " .5 .5)");
        if (0 != $DvtContextMenuTooltipItem$$ || 0 != $DvtDomXmlParser$$) {
          $DvtCustomTooltipItem$$ = $DvtCustomTooltip$$ + " " + $DvtCustomTooltipItem$$;
        }
        $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "gradientTransform", $DvtCustomTooltipItem$$);
      }
      $DvtHtmlRichTooltipManager$$ && ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "x1", $DvtSvgImageFillUtils$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "y1", $DvtSvgFilterUtils$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "x2", $DvtSvgFilterContext$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "y2", $DvtSvgImplFactory$$));
    } else {
      $DvtContextMenuTooltipItem$$ || ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "gradientUnits", "userSpaceOnUse"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "cx", $DvtSvgShadowUtils$$.$getCx$()), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "cy", $DvtSvgShadowUtils$$.$getCy$()), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "fx", $DvtSvgShadowUtils$$.$getCx$()), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, 
      "fy", $DvtSvgShadowUtils$$.$getCy$()), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "r", $DvtSvgShadowUtils$$.$getRadius$()));
    }
    return $DvtSvgGradientUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtSvgImageFillUtils$$, $dvt$$17$$.$Obj$);
  $DvtSvgImageFillUtils$$.$createElem$ = function $$DvtSvgImageFillUtils$$$$createElem$$($DvtSvgShadowUtils$$, $DvtSvgPatternFillUtils$$) {
    var $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("pattern", $DvtSvgPatternFillUtils$$), $DvtSvgGradientUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("image", $DvtSvgPatternFillUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getSrc$(), $DvtSvgFilterContext$$ = $DvtSvgShadowUtils$$.$_bound$;
    $DvtSvgFilterContext$$ && ($dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "x", $DvtSvgFilterContext$$.x), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "y", $DvtSvgFilterContext$$.y), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "x", $DvtSvgFilterContext$$.x), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "y", $DvtSvgFilterContext$$.y), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "width", 
    $DvtSvgFilterContext$$.$w$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "height", $DvtSvgFilterContext$$.$h$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "width", $DvtSvgFilterContext$$.$w$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "height", $DvtSvgFilterContext$$.$h$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "patternUnits", "userSpaceOnUse"), $DvtSvgFilterUtils$$ && $dvt$$17$$.$ToolkitUtils$.$setAttrNS$($DvtSvgGradientUtils$$, 
    $dvt$$17$$.Image.$XLINK_NS$, "xlink:href", $DvtSvgFilterUtils$$));
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$);
    return $DvtSvgImageFillUtils$$;
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtSvgPatternFillUtils$$, $dvt$$17$$.$Obj$);
  $DvtSvgPatternFillUtils$$.$_SM_WIDTH$ = 8;
  $DvtSvgPatternFillUtils$$.$_SM_HEIGHT$ = 8;
  $DvtSvgPatternFillUtils$$.$_LG_WIDTH$ = 16;
  $DvtSvgPatternFillUtils$$.$_LG_HEIGHT$ = 16;
  $DvtSvgPatternFillUtils$$.$createElem$ = function $$DvtSvgPatternFillUtils$$$$createElem$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("pattern", $DvtSvgImageFillUtils$$), $DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getPattern$(), $DvtSvgFilterContext$$;
    $DvtSvgPatternFillUtils$$.$IsSmallPattern$($DvtSvgFilterUtils$$) ? ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$_SM_WIDTH$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$_SM_HEIGHT$) : ($DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$_LG_WIDTH$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$_LG_HEIGHT$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "x", 0);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "y", 0);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "width", $DvtSvgFilterUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "height", $DvtSvgFilterContext$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "patternUnits", "userSpaceOnUse");
    ($DvtSvgFilterUtils$$ = $DvtSvgShadowUtils$$.$getMatrix$()) && $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "patternTransform", "matrix(" + $DvtSvgFilterUtils$$.$_a$ + "," + $DvtSvgFilterUtils$$.$_c$ + "," + $DvtSvgFilterUtils$$.$_b$ + "," + $DvtSvgFilterUtils$$.$_d$ + "," + $DvtSvgFilterUtils$$.$_tx$ + "," + $DvtSvgFilterUtils$$.$_ty$ + ")");
    $DvtSvgPatternFillUtils$$.$CreatePatternElems$($DvtSvgShadowUtils$$, $DvtSvgGradientUtils$$);
    return $DvtSvgGradientUtils$$;
  };
  $DvtSvgPatternFillUtils$$.$IsSmallPattern$ = function $$DvtSvgPatternFillUtils$$$$IsSmallPattern$$($DvtSvgShadowUtils$$) {
    return "s" === $DvtSvgShadowUtils$$.charAt(0);
  };
  $DvtSvgPatternFillUtils$$.$CreatePatternElems$ = function $$DvtSvgPatternFillUtils$$$$CreatePatternElems$$($DvtSvgShadowUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$, $DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$, $DvtDomXmlParser$$, $DvtCustomTooltipItem$$;
    $DvtHtmlRichTooltipManager$$ = $DvtSvgShadowUtils$$.$getPattern$();
    var $DvtContextMenuTooltipItem$$ = $DvtSvgShadowUtils$$.$getColor$(), $DvtPolygonalShape$$ = $dvt$$17$$.$ColorUtils$.$getRGB$($DvtContextMenuTooltipItem$$), $DvtContextMenuTooltipItem$$ = $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtContextMenuTooltipItem$$);
    $DvtSvgGradientUtils$$ = $DvtSvgShadowUtils$$.$getBackgroundColor$();
    $DvtDomXmlParser$$ = $dvt$$17$$.$ColorUtils$.$getRGB$($DvtSvgGradientUtils$$);
    var $DvtCustomTooltipEventHandler$$ = $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgGradientUtils$$);
    $DvtSvgPatternFillUtils$$.$IsSmallPattern$($DvtHtmlRichTooltipManager$$) ? ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$_SM_WIDTH$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$_SM_HEIGHT$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$_SM_WIDTH$, $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$.$_SM_HEIGHT$) : ($DvtSvgGradientUtils$$ = $DvtSvgPatternFillUtils$$.$_LG_WIDTH$, $DvtSvgFilterUtils$$ = $DvtSvgPatternFillUtils$$.$_LG_HEIGHT$, $DvtSvgFilterContext$$ = $DvtSvgPatternFillUtils$$.$_LG_WIDTH$, 
    $DvtSvgImplFactory$$ = $DvtSvgPatternFillUtils$$.$_LG_HEIGHT$);
    $DvtDomXmlParser$$ && 0 < $DvtCustomTooltipEventHandler$$ && ($DvtCustomTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("rect"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke", $DvtDomXmlParser$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-opacity", $DvtCustomTooltipEventHandler$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-width", 1), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, 
    "fill", $DvtDomXmlParser$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "fill-opacity", $DvtCustomTooltipEventHandler$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "x", 0), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "y", 0), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "width", $DvtSvgGradientUtils$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "height", $DvtSvgFilterUtils$$), 
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtCustomTooltipItem$$));
    if ($DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$SM_DIAG_UP_LT$ || $DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$LG_DIAG_UP_LT$) {
      $DvtCustomTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("path"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke", $DvtPolygonalShape$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-opacity", $DvtContextMenuTooltipItem$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-width", 1), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-linecap", "square"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, 
      "d", $dvt$$17$$.$PathUtils$.moveTo(0, -$DvtSvgImplFactory$$ / 2) + $dvt$$17$$.$PathUtils$.lineTo(3 * $DvtSvgFilterContext$$ / 2, $DvtSvgImplFactory$$) + $dvt$$17$$.$PathUtils$.moveTo(-$DvtSvgFilterContext$$ / 2, 0) + $dvt$$17$$.$PathUtils$.lineTo($DvtSvgFilterContext$$ / 2, $DvtSvgImplFactory$$)), $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtCustomTooltipItem$$);
    } else {
      if ($DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$SM_DIAG_UP_RT$ || $DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$LG_DIAG_UP_RT$) {
        $DvtCustomTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("path"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke", $DvtPolygonalShape$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-opacity", $DvtContextMenuTooltipItem$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-width", 1), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-linecap", "square"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, 
        "d", $dvt$$17$$.$PathUtils$.moveTo(-$DvtSvgFilterContext$$ / 2, $DvtSvgImplFactory$$) + $dvt$$17$$.$PathUtils$.lineTo($DvtSvgFilterContext$$, -$DvtSvgImplFactory$$ / 2) + $dvt$$17$$.$PathUtils$.moveTo(0, 3 * $DvtSvgImplFactory$$ / 2) + $dvt$$17$$.$PathUtils$.lineTo(3 * $DvtSvgFilterContext$$ / 2, 0)), $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtCustomTooltipItem$$);
      } else {
        if ($DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$SM_CROSSHATCH$ || $DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$LG_CROSSHATCH$) {
          $DvtCustomTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("path"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke", $DvtPolygonalShape$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-opacity", $DvtContextMenuTooltipItem$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-width", 1), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "d", "M0,0L" + $DvtSvgGradientUtils$$ + "," + 
          $DvtSvgFilterUtils$$ + "M" + $DvtSvgGradientUtils$$ + ",0L0," + $DvtSvgFilterUtils$$), $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtCustomTooltipItem$$);
        } else {
          if ($DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$SM_CHECK$ || $DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$LG_CHECK$) {
            $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$ / 2, $DvtDomXmlParser$$ = $DvtSvgImplFactory$$ / 2, $DvtCustomTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("path"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke", $DvtPolygonalShape$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-opacity", $DvtContextMenuTooltipItem$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-width", 1), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, 
            "fill", $DvtPolygonalShape$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "fill-opacity", $DvtContextMenuTooltipItem$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "d", "M" + $DvtHtmlRichTooltipManager$$ + ",0L" + $DvtSvgFilterContext$$ + ",0L" + $DvtSvgFilterContext$$ + "," + $DvtDomXmlParser$$ + "L" + $DvtHtmlRichTooltipManager$$ + "," + $DvtDomXmlParser$$ + "ZM0," + $DvtDomXmlParser$$ + "L" + $DvtHtmlRichTooltipManager$$ + "," + $DvtDomXmlParser$$ + 
            "L" + $DvtHtmlRichTooltipManager$$ + "," + $DvtSvgImplFactory$$ + "L0," + $DvtSvgImplFactory$$ + "Z"), $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtCustomTooltipItem$$);
          } else {
            if ($DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$SM_TRIANGLE_CHECK$ || $DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$LG_TRIANGLE_CHECK$) {
              $DvtCustomTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("polygon"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke", $DvtPolygonalShape$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-opacity", $DvtContextMenuTooltipItem$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-width", 1), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "fill", $DvtPolygonalShape$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, 
              "fill-opacity", $DvtContextMenuTooltipItem$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "points", "0," + $DvtSvgFilterUtils$$ + " " + $DvtSvgGradientUtils$$ + ",0 " + $DvtSvgGradientUtils$$ + "," + $DvtSvgFilterUtils$$), $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtCustomTooltipItem$$);
            } else {
              if ($DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$SM_DIAMOND_CHECK$ || $DvtHtmlRichTooltipManager$$ === $dvt$$17$$.$PatternFill$.$LG_DIAMOND_CHECK$) {
                $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$ / 2, $DvtDomXmlParser$$ = $DvtSvgImplFactory$$ / 2, $DvtCustomTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("polygon"), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke", $DvtPolygonalShape$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-opacity", $DvtContextMenuTooltipItem$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "stroke-width", 1), 
                $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "fill", $DvtPolygonalShape$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "fill-opacity", $DvtContextMenuTooltipItem$$), $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "points", "0," + $DvtDomXmlParser$$ + " " + $DvtHtmlRichTooltipManager$$ + ",0 " + $DvtSvgGradientUtils$$ + "," + $DvtHtmlRichTooltipManager$$ + " " + $DvtHtmlRichTooltipManager$$ + "," + $DvtSvgFilterUtils$$), 
                $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImageFillUtils$$, $DvtCustomTooltipItem$$);
              }
            }
          }
        }
      }
    }
  };
  $dvt$$17$$.$Obj$.$createSubclass$($DvtSvgShadowUtils$$, $dvt$$17$$.$Obj$);
  $DvtSvgShadowUtils$$.$RADS_PER_DEGREE$ = Math.PI / 180;
  $DvtSvgShadowUtils$$.$createFilter$ = function $$DvtSvgShadowUtils$$$$createFilter$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$) {
    var $DvtSvgGradientUtils$$;
    if (!$DvtSvgPatternFillUtils$$.$_bLocked$) {
      var $DvtSvgFilterUtils$$ = new $DvtSvgFilterContext$$;
      $DvtSvgGradientUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("filter", $DvtSvgPatternFillUtils$$.$_Id$);
      $DvtSvgShadowUtils$$.$createFilterPrimitives$($DvtSvgGradientUtils$$, $DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$);
      var $DvtSvgImplFactory$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feMerge"), $DvtHtmlRichTooltipManager$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feMergeNode");
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtHtmlRichTooltipManager$$, "in", $DvtSvgFilterUtils$$.$_resultIdsUnder$[0]);
      $DvtSvgFilterUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feMergeNode");
      $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "in", "SourceGraphic");
      $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgGradientUtils$$, $DvtSvgImplFactory$$);
      $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$);
      $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgImplFactory$$, $DvtSvgFilterUtils$$);
    }
    return $DvtSvgGradientUtils$$;
  };
  $DvtSvgShadowUtils$$.$createFilterPrimitives$ = function $$DvtSvgShadowUtils$$$$createFilterPrimitives$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    $DvtSvgImageFillUtils$$.$_bInner$ ? $DvtSvgShadowUtils$$.$CreateInnerFilterPrimitives$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgFilterUtils$$) : $DvtSvgShadowUtils$$.$CreateOuterFilterPrimitives$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$);
  };
  $DvtSvgShadowUtils$$.$CreateOuterFilterPrimitives$ = function $$DvtSvgShadowUtils$$$$CreateOuterFilterPrimitives$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$) {
    var $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.$_rgba$, $DvtSvgImplFactory$$ = $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgFilterContext$$) / 255, $DvtHtmlRichTooltipManager$$ = $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgFilterContext$$) / 255, $DvtDomXmlParser$$ = $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgFilterContext$$) / 255, $DvtCustomTooltipItem$$ = $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgFilterContext$$), $DvtContextMenuTooltipItem$$ = $DvtSvgImageFillUtils$$.$_strength$, $DvtPolygonalShape$$ = 
    $DvtSvgImageFillUtils$$.$_blurX$, $DvtCustomTooltipEventHandler$$ = $DvtSvgImageFillUtils$$.$_blurY$, $DvtCustomTooltip$$ = $DvtSvgFilterContext$$ = 0;
    0 < $DvtSvgImageFillUtils$$.$_blurX$ && ($DvtSvgFilterContext$$ = Math.max($DvtSvgImageFillUtils$$.$_blurX$ / 3, 1));
    0 < $DvtSvgImageFillUtils$$.$_blurY$ && ($DvtCustomTooltip$$ = Math.max($DvtSvgImageFillUtils$$.$_blurY$ / 3, 1));
    var $DvtCircularShape$$ = $DvtSvgImageFillUtils$$.$_distance$, $DvtPopupSource$$ = $DvtSvgImageFillUtils$$.$_angle$ * $DvtSvgShadowUtils$$.$RADS_PER_DEGREE$;
    $DvtSvgImageFillUtils$$ = Math.cos($DvtPopupSource$$) * $DvtCircularShape$$;
    var $DvtPopupSource$$ = Math.sin($DvtPopupSource$$) * $DvtCircularShape$$, $DvtCategoricalObject$$ = $DvtSvgGradientUtils$$.$getDimensions$($DvtSvgGradientUtils$$.getParent());
    if ($DvtCategoricalObject$$) {
      var $DvtCustomTooltipManager$$ = Math.abs($DvtCircularShape$$), $DvtPopupBehaviorHandler$$ = 2 * $DvtPolygonalShape$$, $DvtLogicalObject$$ = 2 * $DvtPolygonalShape$$, $DvtPolygonalShape$$ = 2 * $DvtCustomTooltipEventHandler$$, $DvtCustomTooltipEventHandler$$ = 2 * $DvtCustomTooltipEventHandler$$;
      0 < $DvtCircularShape$$ ? ($DvtPopupBehaviorHandler$$ -= $DvtCustomTooltipManager$$, $DvtPolygonalShape$$ -= $DvtCustomTooltipManager$$, $DvtLogicalObject$$ += $DvtCustomTooltipManager$$, $DvtCustomTooltipEventHandler$$ += $DvtCustomTooltipManager$$) : 0 > $DvtCircularShape$$ && ($DvtPopupBehaviorHandler$$ += $DvtCustomTooltipManager$$, $DvtPolygonalShape$$ += $DvtCustomTooltipManager$$, $DvtLogicalObject$$ -= $DvtCustomTooltipManager$$, $DvtCustomTooltipEventHandler$$ -= $DvtCustomTooltipManager$$);
      0 > $DvtPopupBehaviorHandler$$ && ($DvtPopupBehaviorHandler$$ = 0);
      0 > $DvtPolygonalShape$$ && ($DvtPolygonalShape$$ = 0);
      0 > $DvtLogicalObject$$ && ($DvtLogicalObject$$ = 0);
      0 > $DvtCustomTooltipEventHandler$$ && ($DvtCustomTooltipEventHandler$$ = 0);
      $DvtCircularShape$$ = $DvtPopupBehaviorHandler$$ / $DvtCategoricalObject$$.$w$ * 100;
      $DvtCustomTooltipManager$$ = $DvtLogicalObject$$ / $DvtCategoricalObject$$.$w$ * 100;
      $DvtPolygonalShape$$ = $DvtPolygonalShape$$ / $DvtCategoricalObject$$.$h$ * 100;
      $DvtCategoricalObject$$ = $DvtCustomTooltipEventHandler$$ / $DvtCategoricalObject$$.$h$ * 100;
      $DvtSvgFilterUtils$$.$_regionPctRect$.x > -$DvtCircularShape$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.x = -$DvtCircularShape$$);
      $DvtSvgFilterUtils$$.$_regionPctRect$.y > -$DvtPolygonalShape$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.y = -$DvtPolygonalShape$$);
      $DvtSvgFilterUtils$$.$_regionPctRect$.$w$ < 100 + $DvtCircularShape$$ + $DvtCustomTooltipManager$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.$w$ = 100 + $DvtCircularShape$$ + $DvtCustomTooltipManager$$);
      $DvtSvgFilterUtils$$.$_regionPctRect$.$h$ < 100 + $DvtPolygonalShape$$ + $DvtCategoricalObject$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.$h$ = 100 + $DvtPolygonalShape$$ + $DvtCategoricalObject$$);
    }
    $DvtSvgGradientUtils$$ instanceof $dvt$$17$$.$Polyline$ && ($DvtSvgGradientUtils$$ = $DvtSvgGradientUtils$$.$getStroke$().getWidth(), 1 < $DvtSvgGradientUtils$$ && ($DvtSvgFilterUtils$$.$_regionPctRect$.$h$ += $DvtSvgGradientUtils$$, $DvtSvgFilterUtils$$.$_regionPctRect$.y -= $DvtSvgGradientUtils$$));
    $DvtSvgGradientUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feColorMatrix");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "in", "SourceGraphic");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "type", "matrix");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgGradientUtils$$, "values", "0 0 0 " + $DvtSvgImplFactory$$ + " 0 0 0 0 " + $DvtHtmlRichTooltipManager$$ + " 0 0 0 0 " + $DvtDomXmlParser$$ + " 0 0 0 0 " + $DvtCustomTooltipItem$$ * $DvtContextMenuTooltipItem$$ + " 0");
    $DvtSvgImplFactory$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feGaussianBlur");
    $DvtHtmlRichTooltipManager$$ = $DvtSvgFilterContext$$;
    $DvtSvgFilterContext$$ !== $DvtCustomTooltip$$ && ($DvtHtmlRichTooltipManager$$ += " " + $DvtCustomTooltip$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "stdDeviation", $DvtHtmlRichTooltipManager$$);
    $DvtCustomTooltip$$ = $DvtSvgFilterUtils$$.$createResultId$("blur");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "result", $DvtCustomTooltip$$);
    $DvtSvgFilterContext$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feOffset");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "dx", $DvtSvgImageFillUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "dy", $DvtPopupSource$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "in", $DvtCustomTooltip$$);
    $DvtSvgImageFillUtils$$ = $DvtSvgFilterUtils$$.$createResultId$("offset");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "result", $DvtSvgImageFillUtils$$);
    $DvtSvgFilterUtils$$.$_resultIdsUnder$.push($DvtSvgImageFillUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgGradientUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgImplFactory$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$);
  };
  $DvtSvgShadowUtils$$.$CreateInnerFilterPrimitives$ = function $$DvtSvgShadowUtils$$$$CreateInnerFilterPrimitives$$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$, $DvtSvgGradientUtils$$) {
    var $DvtSvgFilterUtils$$ = $DvtSvgImageFillUtils$$.$_rgba$, $DvtSvgFilterContext$$ = $dvt$$17$$.$ColorUtils$.$getRed$($DvtSvgFilterUtils$$) / 255, $DvtSvgImplFactory$$ = $dvt$$17$$.$ColorUtils$.$getGreen$($DvtSvgFilterUtils$$) / 255, $DvtHtmlRichTooltipManager$$ = $dvt$$17$$.$ColorUtils$.$getBlue$($DvtSvgFilterUtils$$) / 255, $DvtSvgImplFactory$$ = $dvt$$17$$.$ColorUtils$.$makeRGB$($DvtSvgFilterContext$$, $DvtSvgImplFactory$$, $DvtHtmlRichTooltipManager$$), $DvtDomXmlParser$$ = $dvt$$17$$.$ColorUtils$.$getAlpha$($DvtSvgFilterUtils$$), 
    $DvtCustomTooltipItem$$ = Math.max($DvtSvgImageFillUtils$$.$_blurX$ / 2, 1), $DvtContextMenuTooltipItem$$ = Math.max($DvtSvgImageFillUtils$$.$_blurY$ / 2, 1), $DvtHtmlRichTooltipManager$$ = $DvtSvgImageFillUtils$$.$_distance$, $DvtSvgFilterContext$$ = $DvtSvgImageFillUtils$$.$_strength$;
    $DvtSvgImageFillUtils$$ = $DvtSvgImageFillUtils$$.$_angle$ * $DvtSvgShadowUtils$$.$RADS_PER_DEGREE$;
    $DvtSvgFilterUtils$$ = Math.cos($DvtSvgImageFillUtils$$) * $DvtHtmlRichTooltipManager$$;
    $DvtHtmlRichTooltipManager$$ *= Math.sin($DvtSvgImageFillUtils$$);
    $DvtSvgImageFillUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feFlood");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "in", "SourceGraphic");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "flood-opacity", $DvtDomXmlParser$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "flood-color", $DvtSvgImplFactory$$);
    $DvtDomXmlParser$$ = $DvtSvgGradientUtils$$.$createResultId$("flood");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImageFillUtils$$, "result", $DvtDomXmlParser$$);
    $DvtSvgImplFactory$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feComposite");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "operator", "out");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "in", $DvtDomXmlParser$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgImplFactory$$, "in2", "SourceGraphic");
    var $DvtDomXmlParser$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feGaussianBlur"), $DvtPolygonalShape$$ = $DvtCustomTooltipItem$$;
    $DvtCustomTooltipItem$$ !== $DvtContextMenuTooltipItem$$ && ($DvtPolygonalShape$$ += " " + $DvtContextMenuTooltipItem$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtDomXmlParser$$, "stdDeviation", $DvtPolygonalShape$$);
    $DvtContextMenuTooltipItem$$ = $DvtSvgGradientUtils$$.$createResultId$("blur");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtDomXmlParser$$, "result", $DvtContextMenuTooltipItem$$);
    $DvtCustomTooltipItem$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feColorMatrix");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "in", $DvtContextMenuTooltipItem$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "type", "matrix");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 " + $DvtSvgFilterContext$$ + " 0");
    $DvtContextMenuTooltipItem$$ = $DvtSvgGradientUtils$$.$createResultId$("colMat");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtCustomTooltipItem$$, "result", $DvtContextMenuTooltipItem$$);
    $DvtSvgFilterContext$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feOffset");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "dx", $DvtSvgFilterUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "dy", $DvtHtmlRichTooltipManager$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "in", $DvtContextMenuTooltipItem$$);
    $DvtHtmlRichTooltipManager$$ = $DvtSvgGradientUtils$$.$createResultId$("offset");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterContext$$, "result", $DvtHtmlRichTooltipManager$$);
    $DvtSvgFilterUtils$$ = $dvt$$17$$.$SvgShapeUtils$.createElement("feComposite");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "operator", "in");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "in", $DvtHtmlRichTooltipManager$$);
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "in2", "SourceGraphic");
    $DvtHtmlRichTooltipManager$$ = $DvtSvgGradientUtils$$.$createResultId$("comp");
    $dvt$$17$$.$ToolkitUtils$.$setAttrNullNS$($DvtSvgFilterUtils$$, "result", $DvtHtmlRichTooltipManager$$);
    $DvtSvgGradientUtils$$.$_resultIdsOver$.push($DvtHtmlRichTooltipManager$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgImageFillUtils$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgImplFactory$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtDomXmlParser$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtCustomTooltipItem$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgFilterContext$$);
    $dvt$$17$$.$ToolkitUtils$.$appendChildElem$($DvtSvgPatternFillUtils$$, $DvtSvgFilterUtils$$);
  };
  $dvt$$17$$.$exportProperty$($dvt$$17$$, "Agent", $dvt$$17$$.$Agent$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Agent$, "setEnvironment", $dvt$$17$$.$Agent$.$setEnvironment$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Agent$, "setHighContrast", $dvt$$17$$.$Agent$.$setHighContrast$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Automation$.prototype, "getDomElementForSubId", $dvt$$17$$.$Automation$.prototype.$getDomElementForSubId$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Automation$.prototype, "getSubIdForDomElement", $dvt$$17$$.$Automation$.prototype.$getSubIdForDomElement$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$BaseComponent$.prototype, "applyOptions", $dvt$$17$$.$BaseComponent$.prototype.$applyOptions$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$BaseComponent$.prototype, "render", $dvt$$17$$.$BaseComponent$.prototype.$render$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$BaseComponent$.prototype, "highlight", $dvt$$17$$.$BaseComponent$.prototype.$highlight$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$BaseComponent$.prototype, "select", $dvt$$17$$.$BaseComponent$.prototype.select);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$BaseComponent$.prototype, "getKeyboardFocus", $dvt$$17$$.$BaseComponent$.prototype.$getKeyboardFocus$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$, "Bundle", $dvt$$17$$.$Bundle$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Bundle$, "addLocalizedStrings", $dvt$$17$$.$Bundle$.$addLocalizedStrings$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$, "Context", $dvt$$17$$.$Context$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$, "resetCaches", $dvt$$17$$.$Context$.$resetCaches$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$, "resetUniqueSeeds", $dvt$$17$$.$Context$.$resetUniqueSeeds$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "getStage", $dvt$$17$$.$Context$.prototype.$getStage$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "getSvgDocument", $dvt$$17$$.$Context$.prototype.$getSvgDocument$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "hideTooltips", $dvt$$17$$.$Context$.prototype.$hideTooltips$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "isReadyToRender", $dvt$$17$$.$Context$.prototype.$isReadyToRender$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "setDatatipStyleClass", $dvt$$17$$.$Context$.prototype.$setDatatipStyleClass$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "setLocaleHelpers", $dvt$$17$$.$Context$.prototype.$setLocaleHelpers$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "setReadingDirection", $dvt$$17$$.$Context$.prototype.$setReadingDirection$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "setOverlayAttachedCallback", $dvt$$17$$.$Context$.prototype.$setOverlayAttachedCallback$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "setTooltipAttachedCallback", $dvt$$17$$.$Context$.prototype.$setTooltipAttachedCallback$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "setTooltipStyleClass", $dvt$$17$$.$Context$.prototype.$setTooltipStyleClass$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "setDefaultFontFamily", $dvt$$17$$.$Context$.prototype.$setDefaultFontFamily$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Context$.prototype, "setDefaultFontSize", $dvt$$17$$.$Context$.prototype.$setDefaultFontSize$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Dimension$.prototype, "getWidth", $dvt$$17$$.$Dimension$.prototype.getWidth);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$Dimension$.prototype, "getHeight", $dvt$$17$$.$Dimension$.prototype.getHeight);
  $dvt$$17$$.$exportProperty$($dvt$$17$$, "JsonUtils", $dvt$$17$$.$JsonUtils$);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$JsonUtils$, "clone", $dvt$$17$$.$JsonUtils$.clone);
  $dvt$$17$$.$exportProperty$($dvt$$17$$.$JsonUtils$, "merge", $dvt$$17$$.$JsonUtils$.$merge$);
  $dvt$$17$$.$exportProperty$($DvtStage$$.prototype, "addChild", $DvtStage$$.prototype.$addChild$);
  return $dvt$$17$$;
}();
